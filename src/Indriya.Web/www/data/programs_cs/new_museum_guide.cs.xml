// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

// Main Behavior Program

// ReSharper disable CheckNamespace

using System;

public class Behavior_8349058f_08d2_0e74_b71b_06091eec08eb : ITriggerBehavior
{
    public string Name { get; set; }

    protected static BehaviorExecutionPriority Priority;

    public Behavior_8349058f_08d2_0e74_b71b_06091eec08eb()
    {
        GetPriority();
        GetExecutionLifetime();
        GetUid();
    }

    public static BehaviorExecutionPriority GetPriority()
    {
        // SET_PRIORITY
        Priority = BehaviorExecutionPriority.normal;

        return Priority;
    }

    protected static BehaviorExecutionLifetime ExecutionLifetime;

    public static BehaviorExecutionLifetime GetExecutionLifetime()
    {
        // SET_EXECUTION_LIFETIME
        ExecutionLifetime = BehaviorExecutionLifetime.once;

        return ExecutionLifetime;
    }

    public int Id { get; set; }

    protected static string Uid;

    public static string GetUid()
    {
        // SET_UID
        Uid = "8349058f_08d2_0e74_b71b_06091eec08eb";

        return Uid;
    }

    private static bool _initActionsComplete;
    private static bool _cyclicActionsComplete;
    private static bool _exitActionsComplete;

    public static TriggerResult CheckTrigger(IBehaviorExecutionContext context)
    {
        var result = new TriggerResult {Active = false};

        if (context != null && !ExecutionComplete)
        {
            var gestureInfoList = context.GetGestureInfoList("Greet_Left");
var gestureInfo = gestureInfoList.FirstOrDefault(s=>s.Confidence > 90);
if (gestureInfo.Active && gestureInfo.Confidence > 80)
{
Console.WriteLine("Gesture trigger received : {0} - {1}", gestureInfo.Name, gestureInfo.Confidence);
result.HumanId = gestureInfo.HumanId;
result.HumanInLoop = true;
result.Active = true;
}

        }
        return result;
    }

    public bool ExecutionUntil(IBehaviorExecutionContext context)
    {
        if (context != null)
        {
            // EXECUTE_UNTIL
            // EXECUTE_UNTIL_HERE
        }
        return true;
    }

    public string ActiveResource { get; set; }

    public static bool InitActionsComplete
    {
        get { return _initActionsComplete; }
        set { _initActionsComplete = value; }
    }

    public static bool CyclicActionsComplete
    {
        get { return _cyclicActionsComplete; }
        set { _cyclicActionsComplete = value; }
    }

    public static bool ExitActionsComplete
    {
        get { return _exitActionsComplete; }
        set { _exitActionsComplete = value; }
    }

    public static bool ExecutionComplete
    {
        get { return InitActionsComplete & CyclicActionsComplete & ExitActionsComplete; }
    }

    public bool ExecuteInit(IBehaviorExecutionContext context, TriggerResult trigger)
    {
        if (!InitActionsComplete)
        {
            // INIT_BLOCK
            // INIT_BLOCK_HERE
            InitActionsComplete = true;
        }
        return InitActionsComplete;
    }

    public bool ExecuteCyclic(IBehaviorExecutionContext context, TriggerResult trigger)
    {
        if (!CyclicActionsComplete && InitActionsComplete)
        {
            // CYCLIC_BLOCK
              var var_da4e03e1_ee1d_c5a7_b621_b8479fcb1cb9= new BehaviorInfo
  {
  BehaviorName = "Move To",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"translation", BehaviorModuleHelper.CreateBehaviorParameterOptions("0", false, "float")},
  {"rotation", BehaviorModuleHelper.CreateBehaviorParameterOptions("1", false, "float")},
  {"human", BehaviorModuleHelper.CreateBehaviorParameterOptions("1", false, "float")},
  {"dist", BehaviorModuleHelper.CreateBehaviorParameterOptions(1.50, false, "float")},
  {"x", BehaviorModuleHelper.CreateBehaviorParameterOptions(0.0, true, "float")},
  {"y", BehaviorModuleHelper.CreateBehaviorParameterOptions(0.0, true, "float")},
  {"theta", BehaviorModuleHelper.CreateBehaviorParameterOptions(0.0, true, "float")}
  }
  };

  if (context.RefreshApproachParameters(var_da4e03e1_ee1d_c5a7_b621_b8479fcb1cb9, trigger)) {
  BehaviorModuleHelper.Execute(context, var_da4e03e1_ee1d_c5a7_b621_b8479fcb1cb9);
  }
  var var_1c4aa63d_1c14_a994_8df8_e4bb8bad1085= new BehaviorInfo
  {
  BehaviorName = "Move To",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"translation", BehaviorModuleHelper.CreateBehaviorParameterOptions("1", false, "float")},
  {"rotation", BehaviorModuleHelper.CreateBehaviorParameterOptions("0", false, "float")},
  {"human", BehaviorModuleHelper.CreateBehaviorParameterOptions("1", false, "float")},
  {"dist", BehaviorModuleHelper.CreateBehaviorParameterOptions(1.50, false, "float")},
  {"x", BehaviorModuleHelper.CreateBehaviorParameterOptions(1.50, true, "float")},
  {"y", BehaviorModuleHelper.CreateBehaviorParameterOptions(0.0, true, "float")},
  {"theta", BehaviorModuleHelper.CreateBehaviorParameterOptions(0.0, true, "float")}
  }
  };

  if (context.RefreshApproachParameters(var_1c4aa63d_1c14_a994_8df8_e4bb8bad1085, trigger)) {
  BehaviorModuleHelper.Execute(context, var_1c4aa63d_1c14_a994_8df8_e4bb8bad1085);
  }
  var var_f1a55bf3_17b3_05da_aa48_9da55e557c2c= new BehaviorInfo{BehaviorName = "Greet",RobotName = "Hiro"};

  BehaviorModuleHelper.Execute(context, var_f1a55bf3_17b3_05da_aa48_9da55e557c2c);
  var var_922eef08_7b22_d6fd_ae73_8744114b5f6c= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("I am Nao! Welcome to Edo-Tokyo museum.", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_922eef08_7b22_d6fd_ae73_8744114b5f6c);
  var var_82fcd889_200c_6bea_ab8f_b3451305eb1c= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("The Edo-Tokyo museum is a museum of the history of Tokyo during the Edo period", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_82fcd889_200c_6bea_ab8f_b3451305eb1c);
  var var_c7740054_646a_96e1_86cb_111afb9c27e6= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("It was established in 1993", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_c7740054_646a_96e1_86cb_111afb9c27e6);
  var var_41b2d65a_5ada_1927_8ef2_aa077dd19649= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("It has lifetime replica of the Nihonbashi, which was the bridge leading into Edo", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_41b2d65a_5ada_1927_8ef2_aa077dd19649);
  var var_5f928216_a8c7_a873_b2fb_a25692405715= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("It also has scaled down models of towns and building from the Edo, Meiji and Showa periods", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_5f928216_a8c7_a873_b2fb_a25692405715);
  var var_51937ef3_2025_dd9c_add9_b708f1d609a5= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("The museum was designed by Kiyonori Kikutake", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_51937ef3_2025_dd9c_add9_b708f1d609a5);
  var var_427319b5_d73c_3972_9811_8deec68e0464= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("I hope you will enjoy your visit to Edo-Tokyo museum", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_427319b5_d73c_3972_9811_8deec68e0464);
  var var_39374129_250a_f7ff_8f38_5f47d8c3cc16= new BehaviorInfo
  {
  BehaviorName = "Say Expressively",
  RobotName = "Hiro",Parameters = new Dictionary<string, object>
  {
  {"msg", BehaviorModuleHelper.CreateBehaviorParameterOptions("Have a nice day!", true, "string")}
  }
  };

  BehaviorModuleHelper.Execute(context, var_39374129_250a_f7ff_8f38_5f47d8c3cc16);


            if (ExecutionLifetime == BehaviorExecutionLifetime.once)
            {
                CyclicActionsComplete = true;
            }
            else if (ExecutionLifetime == BehaviorExecutionLifetime.until)
            {
                var complete = ExecutionUntil(context);
                CyclicActionsComplete = !complete;
            }
        }
        return CyclicActionsComplete;
    }

    public bool ExecuteExit(IBehaviorExecutionContext context, TriggerResult trigger)
    {
        if (!ExitActionsComplete && CyclicActionsComplete)
        {
            // EXIT_BLOCK
            // EXIT_BLOCK_HERE
            ExitActionsComplete = true;
        }
        return ExitActionsComplete;
    }

    public bool Execute(IBehaviorExecutionContext context, TriggerResult trigger)
    {
        try
        {
            ExecuteInit(context, trigger);
            ExecuteCyclic(context, trigger);
            ExecuteExit(context, trigger);
            System.Console.WriteLine(@"Lifetime: {3} Init : {0}, Cyclic: {1}, Exit: {2}", InitActionsComplete,
                CyclicActionsComplete,
                ExitActionsComplete, ExecutionLifetime);
        }
        catch (BehaviorCanceledException ex)
        {
            Console.WriteLine(@"Execution canceled : {0}, {1} ,{2}", GetUid(), ex.Message, ex.StackTrace);
        }
        return ExecutionComplete;
    }
}