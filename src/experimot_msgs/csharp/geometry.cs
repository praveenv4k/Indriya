//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/geometry.proto
// Note: requires additional types generated from: boxgeom.proto
// Note: requires additional types generated from: cylindergeom.proto
// Note: requires additional types generated from: spheregeom.proto
// Note: requires additional types generated from: planegeom.proto
// Note: requires additional types generated from: imagegeom.proto
// Note: requires additional types generated from: heightmapgeom.proto
// Note: requires additional types generated from: meshgeom.proto
// Note: requires additional types generated from: vector3d.proto
// Note: requires additional types generated from: polylinegeom.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Geometry")]
  public partial class Geometry : global::ProtoBuf.IExtensible
  {
    public Geometry() {}
    
    private experimot.msgs.Geometry.Type _type = experimot.msgs.Geometry.Type.BOX;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.Geometry.Type.BOX)]
    public experimot.msgs.Geometry.Type type
    {
      get { return _type; }
      set { _type = value; }
    }
    private experimot.msgs.BoxGeom _box = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"box", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.BoxGeom box
    {
      get { return _box; }
      set { _box = value; }
    }
    private experimot.msgs.CylinderGeom _cylinder = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"cylinder", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.CylinderGeom cylinder
    {
      get { return _cylinder; }
      set { _cylinder = value; }
    }
    private experimot.msgs.PlaneGeom _plane = null;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"plane", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.PlaneGeom plane
    {
      get { return _plane; }
      set { _plane = value; }
    }
    private experimot.msgs.SphereGeom _sphere = null;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"sphere", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.SphereGeom sphere
    {
      get { return _sphere; }
      set { _sphere = value; }
    }
    private experimot.msgs.ImageGeom _image = null;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"image", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.ImageGeom image
    {
      get { return _image; }
      set { _image = value; }
    }
    private experimot.msgs.HeightmapGeom _heightmap = null;
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"heightmap", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.HeightmapGeom heightmap
    {
      get { return _heightmap; }
      set { _heightmap = value; }
    }
    private experimot.msgs.MeshGeom _mesh = null;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"mesh", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.MeshGeom mesh
    {
      get { return _mesh; }
      set { _mesh = value; }
    }
    private readonly global::System.Collections.Generic.List<experimot.msgs.Vector3d> _points = new global::System.Collections.Generic.List<experimot.msgs.Vector3d>();
    [global::ProtoBuf.ProtoMember(9, Name=@"points", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<experimot.msgs.Vector3d> points
    {
      get { return _points; }
    }
  
    private readonly global::System.Collections.Generic.List<experimot.msgs.Polyline> _polyline = new global::System.Collections.Generic.List<experimot.msgs.Polyline>();
    [global::ProtoBuf.ProtoMember(10, Name=@"polyline", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<experimot.msgs.Polyline> polyline
    {
      get { return _polyline; }
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"Type")]
    public enum Type
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"BOX", Value=1)]
      BOX = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"CYLINDER", Value=2)]
      CYLINDER = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"SPHERE", Value=3)]
      SPHERE = 3,
            
      [global::ProtoBuf.ProtoEnum(Name=@"PLANE", Value=4)]
      PLANE = 4,
            
      [global::ProtoBuf.ProtoEnum(Name=@"IMAGE", Value=5)]
      IMAGE = 5,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HEIGHTMAP", Value=6)]
      HEIGHTMAP = 6,
            
      [global::ProtoBuf.ProtoEnum(Name=@"MESH", Value=7)]
      MESH = 7,
            
      [global::ProtoBuf.ProtoEnum(Name=@"TRIANGLE_FAN", Value=8)]
      TRIANGLE_FAN = 8,
            
      [global::ProtoBuf.ProtoEnum(Name=@"LINE_STRIP", Value=9)]
      LINE_STRIP = 9,
            
      [global::ProtoBuf.ProtoEnum(Name=@"POLYLINE", Value=10)]
      POLYLINE = 10,
            
      [global::ProtoBuf.ProtoEnum(Name=@"EMPTY", Value=11)]
      EMPTY = 11
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}