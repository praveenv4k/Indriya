// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_cmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "camera_cmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* CameraCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CameraCmd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_camera_5fcmd_2eproto() {
  protobuf_AddDesc_camera_5fcmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "camera_cmd.proto");
  GOOGLE_CHECK(file != NULL);
  CameraCmd_descriptor_ = file->message_type(0);
  static const int CameraCmd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraCmd, follow_model_),
  };
  CameraCmd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CameraCmd_descriptor_,
      CameraCmd::default_instance_,
      CameraCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraCmd, _has_bits_[0]),
      -1,
      -1,
      sizeof(CameraCmd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraCmd, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_camera_5fcmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CameraCmd_descriptor_, &CameraCmd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_camera_5fcmd_2eproto() {
  delete CameraCmd::default_instance_;
  delete CameraCmd_reflection_;
}

void protobuf_AddDesc_camera_5fcmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020camera_cmd.proto\022\021Indriya.Core.Msgs\"!\n"
    "\tCameraCmd\022\024\n\014follow_model\030\001 \001(\t", 72);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "camera_cmd.proto", &protobuf_RegisterTypes);
  CameraCmd::default_instance_ = new CameraCmd();
  CameraCmd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_camera_5fcmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_camera_5fcmd_2eproto {
  StaticDescriptorInitializer_camera_5fcmd_2eproto() {
    protobuf_AddDesc_camera_5fcmd_2eproto();
  }
} static_descriptor_initializer_camera_5fcmd_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CameraCmd::kFollowModelFieldNumber;
#endif  // !_MSC_VER

CameraCmd::CameraCmd()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.CameraCmd)
}

void CameraCmd::InitAsDefaultInstance() {
}

CameraCmd::CameraCmd(const CameraCmd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.CameraCmd)
}

void CameraCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  follow_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CameraCmd::~CameraCmd() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.CameraCmd)
  SharedDtor();
}

void CameraCmd::SharedDtor() {
  follow_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CameraCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CameraCmd_descriptor_;
}

const CameraCmd& CameraCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_camera_5fcmd_2eproto();
  return *default_instance_;
}

CameraCmd* CameraCmd::default_instance_ = NULL;

CameraCmd* CameraCmd::New(::google::protobuf::Arena* arena) const {
  CameraCmd* n = new CameraCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraCmd::Clear() {
  if (has_follow_model()) {
    follow_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CameraCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.CameraCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string follow_model = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_follow_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->follow_model().data(), this->follow_model().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.CameraCmd.follow_model");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.CameraCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.CameraCmd)
  return false;
#undef DO_
}

void CameraCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.CameraCmd)
  // optional string follow_model = 1;
  if (has_follow_model()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follow_model().data(), this->follow_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.CameraCmd.follow_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->follow_model(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.CameraCmd)
}

::google::protobuf::uint8* CameraCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.CameraCmd)
  // optional string follow_model = 1;
  if (has_follow_model()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->follow_model().data(), this->follow_model().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.CameraCmd.follow_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->follow_model(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.CameraCmd)
  return target;
}

int CameraCmd::ByteSize() const {
  int total_size = 0;

  // optional string follow_model = 1;
  if (has_follow_model()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->follow_model());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraCmd::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CameraCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CameraCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CameraCmd::MergeFrom(const CameraCmd& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_follow_model()) {
      set_has_follow_model();
      follow_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.follow_model_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CameraCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraCmd::CopyFrom(const CameraCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraCmd::IsInitialized() const {

  return true;
}

void CameraCmd::Swap(CameraCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraCmd::InternalSwap(CameraCmd* other) {
  follow_model_.Swap(&other->follow_model_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CameraCmd_descriptor_;
  metadata.reflection = CameraCmd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CameraCmd

// optional string follow_model = 1;
 bool CameraCmd::has_follow_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CameraCmd::set_has_follow_model() {
  _has_bits_[0] |= 0x00000001u;
}
 void CameraCmd::clear_has_follow_model() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CameraCmd::clear_follow_model() {
  follow_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_follow_model();
}
 const ::std::string& CameraCmd::follow_model() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.CameraCmd.follow_model)
  return follow_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CameraCmd::set_follow_model(const ::std::string& value) {
  set_has_follow_model();
  follow_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.CameraCmd.follow_model)
}
 void CameraCmd::set_follow_model(const char* value) {
  set_has_follow_model();
  follow_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.CameraCmd.follow_model)
}
 void CameraCmd::set_follow_model(const char* value, size_t size) {
  set_has_follow_model();
  follow_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.CameraCmd.follow_model)
}
 ::std::string* CameraCmd::mutable_follow_model() {
  set_has_follow_model();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.CameraCmd.follow_model)
  return follow_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CameraCmd::release_follow_model() {
  clear_has_follow_model();
  return follow_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CameraCmd::set_allocated_follow_model(::std::string* follow_model) {
  if (follow_model != NULL) {
    set_has_follow_model();
  } else {
    clear_has_follow_model();
  }
  follow_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), follow_model);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.CameraCmd.follow_model)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.CameraCmd", CameraCmd)
// @@protoc_insertion_point(global_scope)
