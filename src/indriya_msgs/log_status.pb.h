// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_status.proto

#ifndef PROTOBUF_log_5fstatus_2eproto__INCLUDED
#define PROTOBUF_log_5fstatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "time.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace experimot {
namespace msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_log_5fstatus_2eproto();
void protobuf_AssignDesc_log_5fstatus_2eproto();
void protobuf_ShutdownFile_log_5fstatus_2eproto();

class LogStatus;
class LogStatus_LogFile;

enum LogStatus_LogFile_Units {
  LogStatus_LogFile_Units_BYTES = 1,
  LogStatus_LogFile_Units_K_BYTES = 2,
  LogStatus_LogFile_Units_M_BYTES = 3,
  LogStatus_LogFile_Units_G_BYTES = 4
};
bool LogStatus_LogFile_Units_IsValid(int value);
const LogStatus_LogFile_Units LogStatus_LogFile_Units_Units_MIN = LogStatus_LogFile_Units_BYTES;
const LogStatus_LogFile_Units LogStatus_LogFile_Units_Units_MAX = LogStatus_LogFile_Units_G_BYTES;
const int LogStatus_LogFile_Units_Units_ARRAYSIZE = LogStatus_LogFile_Units_Units_MAX + 1;

const ::google::protobuf::EnumDescriptor* LogStatus_LogFile_Units_descriptor();
inline const ::std::string& LogStatus_LogFile_Units_Name(LogStatus_LogFile_Units value) {
  return ::google::protobuf::internal::NameOfEnum(
    LogStatus_LogFile_Units_descriptor(), value);
}
inline bool LogStatus_LogFile_Units_Parse(
    const ::std::string& name, LogStatus_LogFile_Units* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LogStatus_LogFile_Units>(
    LogStatus_LogFile_Units_descriptor(), name, value);
}
// ===================================================================

class LogStatus_LogFile : public ::google::protobuf::Message {
 public:
  LogStatus_LogFile();
  virtual ~LogStatus_LogFile();

  LogStatus_LogFile(const LogStatus_LogFile& from);

  inline LogStatus_LogFile& operator=(const LogStatus_LogFile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogStatus_LogFile& default_instance();

  void Swap(LogStatus_LogFile* other);

  // implements Message ----------------------------------------------

  inline LogStatus_LogFile* New() const { return New(NULL); }

  LogStatus_LogFile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogStatus_LogFile& from);
  void MergeFrom(const LogStatus_LogFile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogStatus_LogFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LogStatus_LogFile_Units Units;
  static const Units BYTES = LogStatus_LogFile_Units_BYTES;
  static const Units K_BYTES = LogStatus_LogFile_Units_K_BYTES;
  static const Units M_BYTES = LogStatus_LogFile_Units_M_BYTES;
  static const Units G_BYTES = LogStatus_LogFile_Units_G_BYTES;
  static inline bool Units_IsValid(int value) {
    return LogStatus_LogFile_Units_IsValid(value);
  }
  static const Units Units_MIN =
    LogStatus_LogFile_Units_Units_MIN;
  static const Units Units_MAX =
    LogStatus_LogFile_Units_Units_MAX;
  static const int Units_ARRAYSIZE =
    LogStatus_LogFile_Units_Units_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Units_descriptor() {
    return LogStatus_LogFile_Units_descriptor();
  }
  static inline const ::std::string& Units_Name(Units value) {
    return LogStatus_LogFile_Units_Name(value);
  }
  static inline bool Units_Parse(const ::std::string& name,
      Units* value) {
    return LogStatus_LogFile_Units_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string uri = 1;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // optional string base_path = 2;
  bool has_base_path() const;
  void clear_base_path();
  static const int kBasePathFieldNumber = 2;
  const ::std::string& base_path() const;
  void set_base_path(const ::std::string& value);
  void set_base_path(const char* value);
  void set_base_path(const char* value, size_t size);
  ::std::string* mutable_base_path();
  ::std::string* release_base_path();
  void set_allocated_base_path(::std::string* base_path);

  // optional string full_path = 3;
  bool has_full_path() const;
  void clear_full_path();
  static const int kFullPathFieldNumber = 3;
  const ::std::string& full_path() const;
  void set_full_path(const ::std::string& value);
  void set_full_path(const char* value);
  void set_full_path(const char* value, size_t size);
  ::std::string* mutable_full_path();
  ::std::string* release_full_path();
  void set_allocated_full_path(::std::string* full_path);

  // optional float size = 4;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  float size() const;
  void set_size(float value);

  // optional .experimot.msgs.LogStatus.LogFile.Units size_units = 5;
  bool has_size_units() const;
  void clear_size_units();
  static const int kSizeUnitsFieldNumber = 5;
  ::experimot::msgs::LogStatus_LogFile_Units size_units() const;
  void set_size_units(::experimot::msgs::LogStatus_LogFile_Units value);

  // @@protoc_insertion_point(class_scope:experimot.msgs.LogStatus.LogFile)
 private:
  inline void set_has_uri();
  inline void clear_has_uri();
  inline void set_has_base_path();
  inline void clear_has_base_path();
  inline void set_has_full_path();
  inline void clear_has_full_path();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_size_units();
  inline void clear_has_size_units();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr base_path_;
  ::google::protobuf::internal::ArenaStringPtr full_path_;
  float size_;
  int size_units_;
  friend void  protobuf_AddDesc_log_5fstatus_2eproto();
  friend void protobuf_AssignDesc_log_5fstatus_2eproto();
  friend void protobuf_ShutdownFile_log_5fstatus_2eproto();

  void InitAsDefaultInstance();
  static LogStatus_LogFile* default_instance_;
};
// -------------------------------------------------------------------

class LogStatus : public ::google::protobuf::Message {
 public:
  LogStatus();
  virtual ~LogStatus();

  LogStatus(const LogStatus& from);

  inline LogStatus& operator=(const LogStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogStatus& default_instance();

  void Swap(LogStatus* other);

  // implements Message ----------------------------------------------

  inline LogStatus* New() const { return New(NULL); }

  LogStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogStatus& from);
  void MergeFrom(const LogStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef LogStatus_LogFile LogFile;

  // accessors -------------------------------------------------------

  // optional .experimot.msgs.Time sim_time = 1;
  bool has_sim_time() const;
  void clear_sim_time();
  static const int kSimTimeFieldNumber = 1;
  const ::experimot::msgs::Time& sim_time() const;
  ::experimot::msgs::Time* mutable_sim_time();
  ::experimot::msgs::Time* release_sim_time();
  void set_allocated_sim_time(::experimot::msgs::Time* sim_time);

  // optional .experimot.msgs.LogStatus.LogFile log_file = 2;
  bool has_log_file() const;
  void clear_log_file();
  static const int kLogFileFieldNumber = 2;
  const ::experimot::msgs::LogStatus_LogFile& log_file() const;
  ::experimot::msgs::LogStatus_LogFile* mutable_log_file();
  ::experimot::msgs::LogStatus_LogFile* release_log_file();
  void set_allocated_log_file(::experimot::msgs::LogStatus_LogFile* log_file);

  // @@protoc_insertion_point(class_scope:experimot.msgs.LogStatus)
 private:
  inline void set_has_sim_time();
  inline void clear_has_sim_time();
  inline void set_has_log_file();
  inline void clear_has_log_file();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::experimot::msgs::Time* sim_time_;
  ::experimot::msgs::LogStatus_LogFile* log_file_;
  friend void  protobuf_AddDesc_log_5fstatus_2eproto();
  friend void protobuf_AssignDesc_log_5fstatus_2eproto();
  friend void protobuf_ShutdownFile_log_5fstatus_2eproto();

  void InitAsDefaultInstance();
  static LogStatus* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LogStatus_LogFile

// optional string uri = 1;
inline bool LogStatus_LogFile::has_uri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogStatus_LogFile::set_has_uri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogStatus_LogFile::clear_has_uri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogStatus_LogFile::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
inline const ::std::string& LogStatus_LogFile::uri() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.LogFile.uri)
  return uri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.LogStatus.LogFile.uri)
}
inline void LogStatus_LogFile::set_uri(const char* value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.LogStatus.LogFile.uri)
}
inline void LogStatus_LogFile::set_uri(const char* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.LogStatus.LogFile.uri)
}
inline ::std::string* LogStatus_LogFile::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.LogStatus.LogFile.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogStatus_LogFile::release_uri() {
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.LogStatus.LogFile.uri)
}

// optional string base_path = 2;
inline bool LogStatus_LogFile::has_base_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogStatus_LogFile::set_has_base_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogStatus_LogFile::clear_has_base_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogStatus_LogFile::clear_base_path() {
  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base_path();
}
inline const ::std::string& LogStatus_LogFile::base_path() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.LogFile.base_path)
  return base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_base_path(const ::std::string& value) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.LogStatus.LogFile.base_path)
}
inline void LogStatus_LogFile::set_base_path(const char* value) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.LogStatus.LogFile.base_path)
}
inline void LogStatus_LogFile::set_base_path(const char* value, size_t size) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.LogStatus.LogFile.base_path)
}
inline ::std::string* LogStatus_LogFile::mutable_base_path() {
  set_has_base_path();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.LogStatus.LogFile.base_path)
  return base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogStatus_LogFile::release_base_path() {
  clear_has_base_path();
  return base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_allocated_base_path(::std::string* base_path) {
  if (base_path != NULL) {
    set_has_base_path();
  } else {
    clear_has_base_path();
  }
  base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_path);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.LogStatus.LogFile.base_path)
}

// optional string full_path = 3;
inline bool LogStatus_LogFile::has_full_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LogStatus_LogFile::set_has_full_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LogStatus_LogFile::clear_has_full_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LogStatus_LogFile::clear_full_path() {
  full_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_path();
}
inline const ::std::string& LogStatus_LogFile::full_path() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.LogFile.full_path)
  return full_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_full_path(const ::std::string& value) {
  set_has_full_path();
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.LogStatus.LogFile.full_path)
}
inline void LogStatus_LogFile::set_full_path(const char* value) {
  set_has_full_path();
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.LogStatus.LogFile.full_path)
}
inline void LogStatus_LogFile::set_full_path(const char* value, size_t size) {
  set_has_full_path();
  full_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.LogStatus.LogFile.full_path)
}
inline ::std::string* LogStatus_LogFile::mutable_full_path() {
  set_has_full_path();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.LogStatus.LogFile.full_path)
  return full_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogStatus_LogFile::release_full_path() {
  clear_has_full_path();
  return full_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogStatus_LogFile::set_allocated_full_path(::std::string* full_path) {
  if (full_path != NULL) {
    set_has_full_path();
  } else {
    clear_has_full_path();
  }
  full_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_path);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.LogStatus.LogFile.full_path)
}

// optional float size = 4;
inline bool LogStatus_LogFile::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LogStatus_LogFile::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LogStatus_LogFile::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LogStatus_LogFile::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline float LogStatus_LogFile::size() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.LogFile.size)
  return size_;
}
inline void LogStatus_LogFile::set_size(float value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.LogStatus.LogFile.size)
}

// optional .experimot.msgs.LogStatus.LogFile.Units size_units = 5;
inline bool LogStatus_LogFile::has_size_units() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LogStatus_LogFile::set_has_size_units() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LogStatus_LogFile::clear_has_size_units() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LogStatus_LogFile::clear_size_units() {
  size_units_ = 1;
  clear_has_size_units();
}
inline ::experimot::msgs::LogStatus_LogFile_Units LogStatus_LogFile::size_units() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.LogFile.size_units)
  return static_cast< ::experimot::msgs::LogStatus_LogFile_Units >(size_units_);
}
inline void LogStatus_LogFile::set_size_units(::experimot::msgs::LogStatus_LogFile_Units value) {
  assert(::experimot::msgs::LogStatus_LogFile_Units_IsValid(value));
  set_has_size_units();
  size_units_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.LogStatus.LogFile.size_units)
}

// -------------------------------------------------------------------

// LogStatus

// optional .experimot.msgs.Time sim_time = 1;
inline bool LogStatus::has_sim_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogStatus::set_has_sim_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogStatus::clear_has_sim_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogStatus::clear_sim_time() {
  if (sim_time_ != NULL) sim_time_->::experimot::msgs::Time::Clear();
  clear_has_sim_time();
}
inline const ::experimot::msgs::Time& LogStatus::sim_time() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.sim_time)
  return sim_time_ != NULL ? *sim_time_ : *default_instance_->sim_time_;
}
inline ::experimot::msgs::Time* LogStatus::mutable_sim_time() {
  set_has_sim_time();
  if (sim_time_ == NULL) {
    sim_time_ = new ::experimot::msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:experimot.msgs.LogStatus.sim_time)
  return sim_time_;
}
inline ::experimot::msgs::Time* LogStatus::release_sim_time() {
  clear_has_sim_time();
  ::experimot::msgs::Time* temp = sim_time_;
  sim_time_ = NULL;
  return temp;
}
inline void LogStatus::set_allocated_sim_time(::experimot::msgs::Time* sim_time) {
  delete sim_time_;
  sim_time_ = sim_time;
  if (sim_time) {
    set_has_sim_time();
  } else {
    clear_has_sim_time();
  }
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.LogStatus.sim_time)
}

// optional .experimot.msgs.LogStatus.LogFile log_file = 2;
inline bool LogStatus::has_log_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogStatus::set_has_log_file() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogStatus::clear_has_log_file() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogStatus::clear_log_file() {
  if (log_file_ != NULL) log_file_->::experimot::msgs::LogStatus_LogFile::Clear();
  clear_has_log_file();
}
inline const ::experimot::msgs::LogStatus_LogFile& LogStatus::log_file() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.LogStatus.log_file)
  return log_file_ != NULL ? *log_file_ : *default_instance_->log_file_;
}
inline ::experimot::msgs::LogStatus_LogFile* LogStatus::mutable_log_file() {
  set_has_log_file();
  if (log_file_ == NULL) {
    log_file_ = new ::experimot::msgs::LogStatus_LogFile;
  }
  // @@protoc_insertion_point(field_mutable:experimot.msgs.LogStatus.log_file)
  return log_file_;
}
inline ::experimot::msgs::LogStatus_LogFile* LogStatus::release_log_file() {
  clear_has_log_file();
  ::experimot::msgs::LogStatus_LogFile* temp = log_file_;
  log_file_ = NULL;
  return temp;
}
inline void LogStatus::set_allocated_log_file(::experimot::msgs::LogStatus_LogFile* log_file) {
  delete log_file_;
  log_file_ = log_file;
  if (log_file) {
    set_has_log_file();
  } else {
    clear_has_log_file();
  }
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.LogStatus.log_file)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<experimot::msgs::LogStatus> LogStatusPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace experimot

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::experimot::msgs::LogStatus_LogFile_Units> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::experimot::msgs::LogStatus_LogFile_Units>() {
  return ::experimot::msgs::LogStatus_LogFile_Units_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

typedef const boost::shared_ptr<experimot::msgs::LogStatus const> ConstLogStatusPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_log_5fstatus_2eproto__INCLUDED
