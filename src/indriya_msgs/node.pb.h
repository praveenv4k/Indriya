// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node.proto

#ifndef PROTOBUF_node_2eproto__INCLUDED
#define PROTOBUF_node_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "publish.pb.h"
#include "subscribe.pb.h"
#include "param.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_node_2eproto();
void protobuf_AssignDesc_node_2eproto();
void protobuf_ShutdownFile_node_2eproto();

class Node;

// ===================================================================

class Node : public ::google::protobuf::Message {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  void Swap(Node* other);

  // implements Message ----------------------------------------------

  inline Node* New() const { return New(NULL); }

  Node* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Node* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .Indriya.Core.Msgs.Param param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::Indriya::Core::Msgs::Param& param(int index) const;
  ::Indriya::Core::Msgs::Param* mutable_param(int index);
  ::Indriya::Core::Msgs::Param* add_param();
  const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Param >&
      param() const;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Param >*
      mutable_param();

  // repeated .Indriya.Core.Msgs.Publish publisher = 3;
  int publisher_size() const;
  void clear_publisher();
  static const int kPublisherFieldNumber = 3;
  const ::Indriya::Core::Msgs::Publish& publisher(int index) const;
  ::Indriya::Core::Msgs::Publish* mutable_publisher(int index);
  ::Indriya::Core::Msgs::Publish* add_publisher();
  const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Publish >&
      publisher() const;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Publish >*
      mutable_publisher();

  // repeated .Indriya.Core.Msgs.Subscribe subscriber = 4;
  int subscriber_size() const;
  void clear_subscriber();
  static const int kSubscriberFieldNumber = 4;
  const ::Indriya::Core::Msgs::Subscribe& subscriber(int index) const;
  ::Indriya::Core::Msgs::Subscribe* mutable_subscriber(int index);
  ::Indriya::Core::Msgs::Subscribe* add_subscriber();
  const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Subscribe >&
      subscriber() const;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Subscribe >*
      mutable_subscriber();

  // @@protoc_insertion_point(class_scope:Indriya.Core.Msgs.Node)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Param > param_;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Publish > publisher_;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Subscribe > subscriber_;
  friend void  protobuf_AddDesc_node_2eproto();
  friend void protobuf_AssignDesc_node_2eproto();
  friend void protobuf_ShutdownFile_node_2eproto();

  void InitAsDefaultInstance();
  static Node* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// required string name = 1;
inline bool Node::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Node::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Node::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Node::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Node::name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Node.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Node::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Node.name)
}
inline void Node::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.Node.name)
}
inline void Node::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.Node.name)
}
inline ::std::string* Node::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Node.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Node::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Node::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Node.name)
}

// repeated .Indriya.Core.Msgs.Param param = 2;
inline int Node::param_size() const {
  return param_.size();
}
inline void Node::clear_param() {
  param_.Clear();
}
inline const ::Indriya::Core::Msgs::Param& Node::param(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Node.param)
  return param_.Get(index);
}
inline ::Indriya::Core::Msgs::Param* Node::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Node.param)
  return param_.Mutable(index);
}
inline ::Indriya::Core::Msgs::Param* Node::add_param() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Node.param)
  return param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Param >&
Node::param() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Node.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Param >*
Node::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Node.param)
  return &param_;
}

// repeated .Indriya.Core.Msgs.Publish publisher = 3;
inline int Node::publisher_size() const {
  return publisher_.size();
}
inline void Node::clear_publisher() {
  publisher_.Clear();
}
inline const ::Indriya::Core::Msgs::Publish& Node::publisher(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Node.publisher)
  return publisher_.Get(index);
}
inline ::Indriya::Core::Msgs::Publish* Node::mutable_publisher(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Node.publisher)
  return publisher_.Mutable(index);
}
inline ::Indriya::Core::Msgs::Publish* Node::add_publisher() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Node.publisher)
  return publisher_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Publish >&
Node::publisher() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Node.publisher)
  return publisher_;
}
inline ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Publish >*
Node::mutable_publisher() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Node.publisher)
  return &publisher_;
}

// repeated .Indriya.Core.Msgs.Subscribe subscriber = 4;
inline int Node::subscriber_size() const {
  return subscriber_.size();
}
inline void Node::clear_subscriber() {
  subscriber_.Clear();
}
inline const ::Indriya::Core::Msgs::Subscribe& Node::subscriber(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Node.subscriber)
  return subscriber_.Get(index);
}
inline ::Indriya::Core::Msgs::Subscribe* Node::mutable_subscriber(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Node.subscriber)
  return subscriber_.Mutable(index);
}
inline ::Indriya::Core::Msgs::Subscribe* Node::add_subscriber() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Node.subscriber)
  return subscriber_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Subscribe >&
Node::subscriber() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Node.subscriber)
  return subscriber_;
}
inline ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Subscribe >*
Node::mutable_subscriber() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Node.subscriber)
  return &subscriber_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<Indriya::Core::Msgs::Node> NodePtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

typedef const boost::shared_ptr<Indriya::Core::Msgs::Node const> ConstNodePtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_node_2eproto__INCLUDED
