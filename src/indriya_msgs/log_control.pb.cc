// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: log_control.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "log_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* LogControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogControl_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_log_5fcontrol_2eproto() {
  protobuf_AddDesc_log_5fcontrol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "log_control.proto");
  GOOGLE_CHECK(file != NULL);
  LogControl_descriptor_ = file->message_type(0);
  static const int LogControl_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, stop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, paused_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, base_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, encoding_),
  };
  LogControl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogControl_descriptor_,
      LogControl::default_instance_,
      LogControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, _has_bits_[0]),
      -1,
      -1,
      sizeof(LogControl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogControl, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_log_5fcontrol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogControl_descriptor_, &LogControl::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_log_5fcontrol_2eproto() {
  delete LogControl::default_instance_;
  delete LogControl_reflection_;
}

void protobuf_AddDesc_log_5fcontrol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021log_control.proto\022\021Indriya.Core.Msgs\"^"
    "\n\nLogControl\022\r\n\005start\030\001 \001(\010\022\014\n\004stop\030\002 \001("
    "\010\022\016\n\006paused\030\003 \001(\010\022\021\n\tbase_path\030\004 \001(\t\022\020\n\010"
    "encoding\030\005 \001(\t", 134);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "log_control.proto", &protobuf_RegisterTypes);
  LogControl::default_instance_ = new LogControl();
  LogControl::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_log_5fcontrol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_log_5fcontrol_2eproto {
  StaticDescriptorInitializer_log_5fcontrol_2eproto() {
    protobuf_AddDesc_log_5fcontrol_2eproto();
  }
} static_descriptor_initializer_log_5fcontrol_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LogControl::kStartFieldNumber;
const int LogControl::kStopFieldNumber;
const int LogControl::kPausedFieldNumber;
const int LogControl::kBasePathFieldNumber;
const int LogControl::kEncodingFieldNumber;
#endif  // !_MSC_VER

LogControl::LogControl()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.LogControl)
}

void LogControl::InitAsDefaultInstance() {
}

LogControl::LogControl(const LogControl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.LogControl)
}

void LogControl::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  start_ = false;
  stop_ = false;
  paused_ = false;
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogControl::~LogControl() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.LogControl)
  SharedDtor();
}

void LogControl::SharedDtor() {
  base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogControl_descriptor_;
}

const LogControl& LogControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_log_5fcontrol_2eproto();
  return *default_instance_;
}

LogControl* LogControl::default_instance_ = NULL;

LogControl* LogControl::New(::google::protobuf::Arena* arena) const {
  LogControl* n = new LogControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogControl::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LogControl*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(start_, paused_);
    if (has_base_path()) {
      base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_encoding()) {
      encoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LogControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.LogControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_)));
          set_has_start();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stop;
        break;
      }

      // optional bool stop = 2;
      case 2: {
        if (tag == 16) {
         parse_stop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
          set_has_stop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_paused;
        break;
      }

      // optional bool paused = 3;
      case 3: {
        if (tag == 24) {
         parse_paused:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paused_)));
          set_has_paused();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_base_path;
        break;
      }

      // optional string base_path = 4;
      case 4: {
        if (tag == 34) {
         parse_base_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->base_path().data(), this->base_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.LogControl.base_path");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_encoding;
        break;
      }

      // optional string encoding = 5;
      case 5: {
        if (tag == 42) {
         parse_encoding:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encoding()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encoding().data(), this->encoding().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.LogControl.encoding");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.LogControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.LogControl)
  return false;
#undef DO_
}

void LogControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.LogControl)
  // optional bool start = 1;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->start(), output);
  }

  // optional bool stop = 2;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stop(), output);
  }

  // optional bool paused = 3;
  if (has_paused()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->paused(), output);
  }

  // optional string base_path = 4;
  if (has_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base_path().data(), this->base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.LogControl.base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->base_path(), output);
  }

  // optional string encoding = 5;
  if (has_encoding()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encoding().data(), this->encoding().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.LogControl.encoding");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->encoding(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.LogControl)
}

::google::protobuf::uint8* LogControl::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.LogControl)
  // optional bool start = 1;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->start(), target);
  }

  // optional bool stop = 2;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stop(), target);
  }

  // optional bool paused = 3;
  if (has_paused()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->paused(), target);
  }

  // optional string base_path = 4;
  if (has_base_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->base_path().data(), this->base_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.LogControl.base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->base_path(), target);
  }

  // optional string encoding = 5;
  if (has_encoding()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encoding().data(), this->encoding().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.LogControl.encoding");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->encoding(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.LogControl)
  return target;
}

int LogControl::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional bool start = 1;
    if (has_start()) {
      total_size += 1 + 1;
    }

    // optional bool stop = 2;
    if (has_stop()) {
      total_size += 1 + 1;
    }

    // optional bool paused = 3;
    if (has_paused()) {
      total_size += 1 + 1;
    }

    // optional string base_path = 4;
    if (has_base_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->base_path());
    }

    // optional string encoding = 5;
    if (has_encoding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encoding());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogControl::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LogControl* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogControl*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogControl::MergeFrom(const LogControl& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_stop()) {
      set_stop(from.stop());
    }
    if (from.has_paused()) {
      set_paused(from.paused());
    }
    if (from.has_base_path()) {
      set_has_base_path();
      base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
    }
    if (from.has_encoding()) {
      set_has_encoding();
      encoding_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LogControl::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogControl::CopyFrom(const LogControl& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogControl::IsInitialized() const {

  return true;
}

void LogControl::Swap(LogControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogControl::InternalSwap(LogControl* other) {
  std::swap(start_, other->start_);
  std::swap(stop_, other->stop_);
  std::swap(paused_, other->paused_);
  base_path_.Swap(&other->base_path_);
  encoding_.Swap(&other->encoding_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogControl_descriptor_;
  metadata.reflection = LogControl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogControl

// optional bool start = 1;
 bool LogControl::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LogControl::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
 void LogControl::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LogControl::clear_start() {
  start_ = false;
  clear_has_start();
}
 bool LogControl::start() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.LogControl.start)
  return start_;
}
 void LogControl::set_start(bool value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.LogControl.start)
}

// optional bool stop = 2;
 bool LogControl::has_stop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void LogControl::set_has_stop() {
  _has_bits_[0] |= 0x00000002u;
}
 void LogControl::clear_has_stop() {
  _has_bits_[0] &= ~0x00000002u;
}
 void LogControl::clear_stop() {
  stop_ = false;
  clear_has_stop();
}
 bool LogControl::stop() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.LogControl.stop)
  return stop_;
}
 void LogControl::set_stop(bool value) {
  set_has_stop();
  stop_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.LogControl.stop)
}

// optional bool paused = 3;
 bool LogControl::has_paused() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void LogControl::set_has_paused() {
  _has_bits_[0] |= 0x00000004u;
}
 void LogControl::clear_has_paused() {
  _has_bits_[0] &= ~0x00000004u;
}
 void LogControl::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
 bool LogControl::paused() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.LogControl.paused)
  return paused_;
}
 void LogControl::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.LogControl.paused)
}

// optional string base_path = 4;
 bool LogControl::has_base_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void LogControl::set_has_base_path() {
  _has_bits_[0] |= 0x00000008u;
}
 void LogControl::clear_has_base_path() {
  _has_bits_[0] &= ~0x00000008u;
}
 void LogControl::clear_base_path() {
  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_base_path();
}
 const ::std::string& LogControl::base_path() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.LogControl.base_path)
  return base_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogControl::set_base_path(const ::std::string& value) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.LogControl.base_path)
}
 void LogControl::set_base_path(const char* value) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.LogControl.base_path)
}
 void LogControl::set_base_path(const char* value, size_t size) {
  set_has_base_path();
  base_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.LogControl.base_path)
}
 ::std::string* LogControl::mutable_base_path() {
  set_has_base_path();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.LogControl.base_path)
  return base_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogControl::release_base_path() {
  clear_has_base_path();
  return base_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogControl::set_allocated_base_path(::std::string* base_path) {
  if (base_path != NULL) {
    set_has_base_path();
  } else {
    clear_has_base_path();
  }
  base_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), base_path);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.LogControl.base_path)
}

// optional string encoding = 5;
 bool LogControl::has_encoding() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void LogControl::set_has_encoding() {
  _has_bits_[0] |= 0x00000010u;
}
 void LogControl::clear_has_encoding() {
  _has_bits_[0] &= ~0x00000010u;
}
 void LogControl::clear_encoding() {
  encoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encoding();
}
 const ::std::string& LogControl::encoding() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.LogControl.encoding)
  return encoding_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogControl::set_encoding(const ::std::string& value) {
  set_has_encoding();
  encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.LogControl.encoding)
}
 void LogControl::set_encoding(const char* value) {
  set_has_encoding();
  encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.LogControl.encoding)
}
 void LogControl::set_encoding(const char* value, size_t size) {
  set_has_encoding();
  encoding_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.LogControl.encoding)
}
 ::std::string* LogControl::mutable_encoding() {
  set_has_encoding();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.LogControl.encoding)
  return encoding_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogControl::release_encoding() {
  clear_has_encoding();
  return encoding_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogControl::set_allocated_encoding(::std::string* encoding) {
  if (encoding != NULL) {
    set_has_encoding();
  } else {
    clear_has_encoding();
  }
  encoding_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encoding);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.LogControl.encoding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.LogControl", LogControl)
// @@protoc_insertion_point(global_scope)
