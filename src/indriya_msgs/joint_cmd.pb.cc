// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joint_cmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "joint_cmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* JointCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointCmd_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_joint_5fcmd_2eproto() {
  protobuf_AddDesc_joint_5fcmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "joint_cmd.proto");
  GOOGLE_CHECK(file != NULL);
  JointCmd_descriptor_ = file->message_type(0);
  static const int JointCmd_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, axis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, velocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, reset_),
  };
  JointCmd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JointCmd_descriptor_,
      JointCmd::default_instance_,
      JointCmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, _has_bits_[0]),
      -1,
      -1,
      sizeof(JointCmd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCmd, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_joint_5fcmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JointCmd_descriptor_, &JointCmd::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_joint_5fcmd_2eproto() {
  delete JointCmd::default_instance_;
  delete JointCmd_reflection_;
}

void protobuf_AddDesc_joint_5fcmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_pid_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017joint_cmd.proto\022\021Indriya.Core.Msgs\032\tpi"
    "d.proto\"\233\001\n\010JointCmd\022\014\n\004name\030\001 \002(\t\022\017\n\004ax"
    "is\030\002 \001(\005:\0010\022\r\n\005force\030\003 \001(\001\022(\n\010position\030\004"
    " \001(\0132\026.Indriya.Core.Msgs.PID\022(\n\010velocity"
    "\030\005 \001(\0132\026.Indriya.Core.Msgs.PID\022\r\n\005reset\030"
    "\006 \001(\010", 205);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "joint_cmd.proto", &protobuf_RegisterTypes);
  JointCmd::default_instance_ = new JointCmd();
  JointCmd::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_joint_5fcmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_joint_5fcmd_2eproto {
  StaticDescriptorInitializer_joint_5fcmd_2eproto() {
    protobuf_AddDesc_joint_5fcmd_2eproto();
  }
} static_descriptor_initializer_joint_5fcmd_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int JointCmd::kNameFieldNumber;
const int JointCmd::kAxisFieldNumber;
const int JointCmd::kForceFieldNumber;
const int JointCmd::kPositionFieldNumber;
const int JointCmd::kVelocityFieldNumber;
const int JointCmd::kResetFieldNumber;
#endif  // !_MSC_VER

JointCmd::JointCmd()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.JointCmd)
}

void JointCmd::InitAsDefaultInstance() {
  position_ = const_cast< ::Indriya::Core::Msgs::PID*>(&::Indriya::Core::Msgs::PID::default_instance());
  velocity_ = const_cast< ::Indriya::Core::Msgs::PID*>(&::Indriya::Core::Msgs::PID::default_instance());
}

JointCmd::JointCmd(const JointCmd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.JointCmd)
}

void JointCmd::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  axis_ = 0;
  force_ = 0;
  position_ = NULL;
  velocity_ = NULL;
  reset_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointCmd::~JointCmd() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.JointCmd)
  SharedDtor();
}

void JointCmd::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete position_;
    delete velocity_;
  }
}

void JointCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointCmd_descriptor_;
}

const JointCmd& JointCmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5fcmd_2eproto();
  return *default_instance_;
}

JointCmd* JointCmd::default_instance_ = NULL;

JointCmd* JointCmd::New(::google::protobuf::Arena* arena) const {
  JointCmd* n = new JointCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JointCmd::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<JointCmd*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(axis_, reset_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    force_ = 0;
    if (has_position()) {
      if (position_ != NULL) position_->::Indriya::Core::Msgs::PID::Clear();
    }
    if (has_velocity()) {
      if (velocity_ != NULL) velocity_->::Indriya::Core::Msgs::PID::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JointCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.JointCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.JointCmd.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_axis;
        break;
      }

      // optional int32 axis = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_axis:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &axis_)));
          set_has_axis();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_force;
        break;
      }

      // optional double force = 3;
      case 3: {
        if (tag == 25) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_position;
        break;
      }

      // optional .Indriya.Core.Msgs.PID position = 4;
      case 4: {
        if (tag == 34) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_velocity;
        break;
      }

      // optional .Indriya.Core.Msgs.PID velocity = 5;
      case 5: {
        if (tag == 42) {
         parse_velocity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_reset;
        break;
      }

      // optional bool reset = 6;
      case 6: {
        if (tag == 48) {
         parse_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reset_)));
          set_has_reset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.JointCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.JointCmd)
  return false;
#undef DO_
}

void JointCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.JointCmd)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointCmd.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 axis = 2 [default = 0];
  if (has_axis()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->axis(), output);
  }

  // optional double force = 3;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->force(), output);
  }

  // optional .Indriya.Core.Msgs.PID position = 4;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->position_, output);
  }

  // optional .Indriya.Core.Msgs.PID velocity = 5;
  if (has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->velocity_, output);
  }

  // optional bool reset = 6;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->reset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.JointCmd)
}

::google::protobuf::uint8* JointCmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.JointCmd)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointCmd.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 axis = 2 [default = 0];
  if (has_axis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->axis(), target);
  }

  // optional double force = 3;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->force(), target);
  }

  // optional .Indriya.Core.Msgs.PID position = 4;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->position_, target);
  }

  // optional .Indriya.Core.Msgs.PID velocity = 5;
  if (has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->velocity_, target);
  }

  // optional bool reset = 6;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->reset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.JointCmd)
  return target;
}

int JointCmd::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 62) {
    // optional int32 axis = 2 [default = 0];
    if (has_axis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->axis());
    }

    // optional double force = 3;
    if (has_force()) {
      total_size += 1 + 8;
    }

    // optional .Indriya.Core.Msgs.PID position = 4;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->position_);
    }

    // optional .Indriya.Core.Msgs.PID velocity = 5;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->velocity_);
    }

    // optional bool reset = 6;
    if (has_reset()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointCmd::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JointCmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JointCmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JointCmd::MergeFrom(const JointCmd& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_axis()) {
      set_axis(from.axis());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_position()) {
      mutable_position()->::Indriya::Core::Msgs::PID::MergeFrom(from.position());
    }
    if (from.has_velocity()) {
      mutable_velocity()->::Indriya::Core::Msgs::PID::MergeFrom(from.velocity());
    }
    if (from.has_reset()) {
      set_reset(from.reset());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JointCmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointCmd::CopyFrom(const JointCmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointCmd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void JointCmd::Swap(JointCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JointCmd::InternalSwap(JointCmd* other) {
  name_.Swap(&other->name_);
  std::swap(axis_, other->axis_);
  std::swap(force_, other->force_);
  std::swap(position_, other->position_);
  std::swap(velocity_, other->velocity_);
  std::swap(reset_, other->reset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JointCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointCmd_descriptor_;
  metadata.reflection = JointCmd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JointCmd

// required string name = 1;
 bool JointCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void JointCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void JointCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void JointCmd::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& JointCmd::name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointCmd::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointCmd.name)
}
 void JointCmd::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.JointCmd.name)
}
 void JointCmd::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.JointCmd.name)
}
 ::std::string* JointCmd::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointCmd.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointCmd::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointCmd::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointCmd.name)
}

// optional int32 axis = 2 [default = 0];
 bool JointCmd::has_axis() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void JointCmd::set_has_axis() {
  _has_bits_[0] |= 0x00000002u;
}
 void JointCmd::clear_has_axis() {
  _has_bits_[0] &= ~0x00000002u;
}
 void JointCmd::clear_axis() {
  axis_ = 0;
  clear_has_axis();
}
 ::google::protobuf::int32 JointCmd::axis() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.axis)
  return axis_;
}
 void JointCmd::set_axis(::google::protobuf::int32 value) {
  set_has_axis();
  axis_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointCmd.axis)
}

// optional double force = 3;
 bool JointCmd::has_force() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void JointCmd::set_has_force() {
  _has_bits_[0] |= 0x00000004u;
}
 void JointCmd::clear_has_force() {
  _has_bits_[0] &= ~0x00000004u;
}
 void JointCmd::clear_force() {
  force_ = 0;
  clear_has_force();
}
 double JointCmd::force() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.force)
  return force_;
}
 void JointCmd::set_force(double value) {
  set_has_force();
  force_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointCmd.force)
}

// optional .Indriya.Core.Msgs.PID position = 4;
 bool JointCmd::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void JointCmd::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
 void JointCmd::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
 void JointCmd::clear_position() {
  if (position_ != NULL) position_->::Indriya::Core::Msgs::PID::Clear();
  clear_has_position();
}
 const ::Indriya::Core::Msgs::PID& JointCmd::position() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
 ::Indriya::Core::Msgs::PID* JointCmd::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::Indriya::Core::Msgs::PID;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointCmd.position)
  return position_;
}
 ::Indriya::Core::Msgs::PID* JointCmd::release_position() {
  clear_has_position();
  ::Indriya::Core::Msgs::PID* temp = position_;
  position_ = NULL;
  return temp;
}
 void JointCmd::set_allocated_position(::Indriya::Core::Msgs::PID* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointCmd.position)
}

// optional .Indriya.Core.Msgs.PID velocity = 5;
 bool JointCmd::has_velocity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void JointCmd::set_has_velocity() {
  _has_bits_[0] |= 0x00000010u;
}
 void JointCmd::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000010u;
}
 void JointCmd::clear_velocity() {
  if (velocity_ != NULL) velocity_->::Indriya::Core::Msgs::PID::Clear();
  clear_has_velocity();
}
 const ::Indriya::Core::Msgs::PID& JointCmd::velocity() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.velocity)
  return velocity_ != NULL ? *velocity_ : *default_instance_->velocity_;
}
 ::Indriya::Core::Msgs::PID* JointCmd::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::Indriya::Core::Msgs::PID;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointCmd.velocity)
  return velocity_;
}
 ::Indriya::Core::Msgs::PID* JointCmd::release_velocity() {
  clear_has_velocity();
  ::Indriya::Core::Msgs::PID* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
 void JointCmd::set_allocated_velocity(::Indriya::Core::Msgs::PID* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointCmd.velocity)
}

// optional bool reset = 6;
 bool JointCmd::has_reset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void JointCmd::set_has_reset() {
  _has_bits_[0] |= 0x00000020u;
}
 void JointCmd::clear_has_reset() {
  _has_bits_[0] &= ~0x00000020u;
}
 void JointCmd::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
 bool JointCmd::reset() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointCmd.reset)
  return reset_;
}
 void JointCmd::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointCmd.reset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.JointCmd", JointCmd)
// @@protoc_insertion_point(global_scope)
