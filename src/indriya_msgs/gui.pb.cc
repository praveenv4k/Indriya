// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gui.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* GUI_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GUI_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_gui_2eproto() {
  protobuf_AddDesc_gui_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "gui.proto");
  GOOGLE_CHECK(file != NULL);
  GUI_descriptor_ = file->message_type(0);
  static const int GUI_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GUI, fullscreen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GUI, camera_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GUI, plugin_),
  };
  GUI_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GUI_descriptor_,
      GUI::default_instance_,
      GUI_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GUI, _has_bits_[0]),
      -1,
      -1,
      sizeof(GUI),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GUI, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_gui_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GUI_descriptor_, &GUI::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_gui_2eproto() {
  delete GUI::default_instance_;
  delete GUI_reflection_;
}

void protobuf_AddDesc_gui_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_gui_5fcamera_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_plugin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tgui.proto\022\021Indriya.Core.Msgs\032\020gui_came"
    "ra.proto\032\014plugin.proto\"r\n\003GUI\022\022\n\nfullscr"
    "een\030\001 \001(\010\022,\n\006camera\030\002 \001(\0132\034.Indriya.Core"
    ".Msgs.GUICamera\022)\n\006plugin\030\003 \003(\0132\031.Indriy"
    "a.Core.Msgs.Plugin", 178);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gui.proto", &protobuf_RegisterTypes);
  GUI::default_instance_ = new GUI();
  GUI::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_gui_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_gui_2eproto {
  StaticDescriptorInitializer_gui_2eproto() {
    protobuf_AddDesc_gui_2eproto();
  }
} static_descriptor_initializer_gui_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int GUI::kFullscreenFieldNumber;
const int GUI::kCameraFieldNumber;
const int GUI::kPluginFieldNumber;
#endif  // !_MSC_VER

GUI::GUI()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.GUI)
}

void GUI::InitAsDefaultInstance() {
  camera_ = const_cast< ::Indriya::Core::Msgs::GUICamera*>(&::Indriya::Core::Msgs::GUICamera::default_instance());
}

GUI::GUI(const GUI& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.GUI)
}

void GUI::SharedCtor() {
  _cached_size_ = 0;
  fullscreen_ = false;
  camera_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GUI::~GUI() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.GUI)
  SharedDtor();
}

void GUI::SharedDtor() {
  if (this != default_instance_) {
    delete camera_;
  }
}

void GUI::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GUI::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GUI_descriptor_;
}

const GUI& GUI::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_gui_2eproto();
  return *default_instance_;
}

GUI* GUI::default_instance_ = NULL;

GUI* GUI::New(::google::protobuf::Arena* arena) const {
  GUI* n = new GUI;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GUI::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    fullscreen_ = false;
    if (has_camera()) {
      if (camera_ != NULL) camera_->::Indriya::Core::Msgs::GUICamera::Clear();
    }
  }
  plugin_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GUI::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.GUI)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool fullscreen = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fullscreen_)));
          set_has_fullscreen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_camera;
        break;
      }

      // optional .Indriya.Core.Msgs.GUICamera camera = 2;
      case 2: {
        if (tag == 18) {
         parse_camera:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_camera()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_plugin;
        break;
      }

      // repeated .Indriya.Core.Msgs.Plugin plugin = 3;
      case 3: {
        if (tag == 26) {
         parse_plugin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_plugin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_plugin;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.GUI)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.GUI)
  return false;
#undef DO_
}

void GUI::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.GUI)
  // optional bool fullscreen = 1;
  if (has_fullscreen()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->fullscreen(), output);
  }

  // optional .Indriya.Core.Msgs.GUICamera camera = 2;
  if (has_camera()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->camera_, output);
  }

  // repeated .Indriya.Core.Msgs.Plugin plugin = 3;
  for (unsigned int i = 0, n = this->plugin_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->plugin(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.GUI)
}

::google::protobuf::uint8* GUI::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.GUI)
  // optional bool fullscreen = 1;
  if (has_fullscreen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->fullscreen(), target);
  }

  // optional .Indriya.Core.Msgs.GUICamera camera = 2;
  if (has_camera()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->camera_, target);
  }

  // repeated .Indriya.Core.Msgs.Plugin plugin = 3;
  for (unsigned int i = 0, n = this->plugin_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->plugin(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.GUI)
  return target;
}

int GUI::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional bool fullscreen = 1;
    if (has_fullscreen()) {
      total_size += 1 + 1;
    }

    // optional .Indriya.Core.Msgs.GUICamera camera = 2;
    if (has_camera()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->camera_);
    }

  }
  // repeated .Indriya.Core.Msgs.Plugin plugin = 3;
  total_size += 1 * this->plugin_size();
  for (int i = 0; i < this->plugin_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->plugin(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GUI::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GUI* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GUI*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GUI::MergeFrom(const GUI& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  plugin_.MergeFrom(from.plugin_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fullscreen()) {
      set_fullscreen(from.fullscreen());
    }
    if (from.has_camera()) {
      mutable_camera()->::Indriya::Core::Msgs::GUICamera::MergeFrom(from.camera());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GUI::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GUI::CopyFrom(const GUI& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GUI::IsInitialized() const {

  if (has_camera()) {
    if (!this->camera_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->plugin())) return false;
  return true;
}

void GUI::Swap(GUI* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GUI::InternalSwap(GUI* other) {
  std::swap(fullscreen_, other->fullscreen_);
  std::swap(camera_, other->camera_);
  plugin_.UnsafeArenaSwap(&other->plugin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GUI::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GUI_descriptor_;
  metadata.reflection = GUI_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GUI

// optional bool fullscreen = 1;
 bool GUI::has_fullscreen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void GUI::set_has_fullscreen() {
  _has_bits_[0] |= 0x00000001u;
}
 void GUI::clear_has_fullscreen() {
  _has_bits_[0] &= ~0x00000001u;
}
 void GUI::clear_fullscreen() {
  fullscreen_ = false;
  clear_has_fullscreen();
}
 bool GUI::fullscreen() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.GUI.fullscreen)
  return fullscreen_;
}
 void GUI::set_fullscreen(bool value) {
  set_has_fullscreen();
  fullscreen_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.GUI.fullscreen)
}

// optional .Indriya.Core.Msgs.GUICamera camera = 2;
 bool GUI::has_camera() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void GUI::set_has_camera() {
  _has_bits_[0] |= 0x00000002u;
}
 void GUI::clear_has_camera() {
  _has_bits_[0] &= ~0x00000002u;
}
 void GUI::clear_camera() {
  if (camera_ != NULL) camera_->::Indriya::Core::Msgs::GUICamera::Clear();
  clear_has_camera();
}
 const ::Indriya::Core::Msgs::GUICamera& GUI::camera() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.GUI.camera)
  return camera_ != NULL ? *camera_ : *default_instance_->camera_;
}
 ::Indriya::Core::Msgs::GUICamera* GUI::mutable_camera() {
  set_has_camera();
  if (camera_ == NULL) {
    camera_ = new ::Indriya::Core::Msgs::GUICamera;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.GUI.camera)
  return camera_;
}
 ::Indriya::Core::Msgs::GUICamera* GUI::release_camera() {
  clear_has_camera();
  ::Indriya::Core::Msgs::GUICamera* temp = camera_;
  camera_ = NULL;
  return temp;
}
 void GUI::set_allocated_camera(::Indriya::Core::Msgs::GUICamera* camera) {
  delete camera_;
  camera_ = camera;
  if (camera) {
    set_has_camera();
  } else {
    clear_has_camera();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.GUI.camera)
}

// repeated .Indriya.Core.Msgs.Plugin plugin = 3;
 int GUI::plugin_size() const {
  return plugin_.size();
}
 void GUI::clear_plugin() {
  plugin_.Clear();
}
 const ::Indriya::Core::Msgs::Plugin& GUI::plugin(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.GUI.plugin)
  return plugin_.Get(index);
}
 ::Indriya::Core::Msgs::Plugin* GUI::mutable_plugin(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.GUI.plugin)
  return plugin_.Mutable(index);
}
 ::Indriya::Core::Msgs::Plugin* GUI::add_plugin() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.GUI.plugin)
  return plugin_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Plugin >&
GUI::plugin() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.GUI.plugin)
  return plugin_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Plugin >*
GUI::mutable_plugin() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.GUI.plugin)
  return &plugin_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.GUI", GUI)
// @@protoc_insertion_point(global_scope)
