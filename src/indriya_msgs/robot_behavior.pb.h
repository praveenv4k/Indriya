// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: robot_behavior.proto

#ifndef PROTOBUF_robot_5fbehavior_2eproto__INCLUDED
#define PROTOBUF_robot_5fbehavior_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "param.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace experimot {
namespace msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_robot_5fbehavior_2eproto();
void protobuf_AssignDesc_robot_5fbehavior_2eproto();
void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

class BehaviorArguments;
class BehaviorDescription;
class RobotBehaviorModule;
class RobotBehaviorModule_RobotBehaviorResponder;
class RobotBehaviorModules;

enum BehaviorDescription_ExecutionType {
  BehaviorDescription_ExecutionType_Blocking = 0,
  BehaviorDescription_ExecutionType_NonBlocking = 1
};
bool BehaviorDescription_ExecutionType_IsValid(int value);
const BehaviorDescription_ExecutionType BehaviorDescription_ExecutionType_ExecutionType_MIN = BehaviorDescription_ExecutionType_Blocking;
const BehaviorDescription_ExecutionType BehaviorDescription_ExecutionType_ExecutionType_MAX = BehaviorDescription_ExecutionType_NonBlocking;
const int BehaviorDescription_ExecutionType_ExecutionType_ARRAYSIZE = BehaviorDescription_ExecutionType_ExecutionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BehaviorDescription_ExecutionType_descriptor();
inline const ::std::string& BehaviorDescription_ExecutionType_Name(BehaviorDescription_ExecutionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BehaviorDescription_ExecutionType_descriptor(), value);
}
inline bool BehaviorDescription_ExecutionType_Parse(
    const ::std::string& name, BehaviorDescription_ExecutionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BehaviorDescription_ExecutionType>(
    BehaviorDescription_ExecutionType_descriptor(), name, value);
}
enum BehaviorDescription_ExecutionState {
  BehaviorDescription_ExecutionState_Idle = 0,
  BehaviorDescription_ExecutionState_Running = 1,
  BehaviorDescription_ExecutionState_Error = 2
};
bool BehaviorDescription_ExecutionState_IsValid(int value);
const BehaviorDescription_ExecutionState BehaviorDescription_ExecutionState_ExecutionState_MIN = BehaviorDescription_ExecutionState_Idle;
const BehaviorDescription_ExecutionState BehaviorDescription_ExecutionState_ExecutionState_MAX = BehaviorDescription_ExecutionState_Error;
const int BehaviorDescription_ExecutionState_ExecutionState_ARRAYSIZE = BehaviorDescription_ExecutionState_ExecutionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* BehaviorDescription_ExecutionState_descriptor();
inline const ::std::string& BehaviorDescription_ExecutionState_Name(BehaviorDescription_ExecutionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    BehaviorDescription_ExecutionState_descriptor(), value);
}
inline bool BehaviorDescription_ExecutionState_Parse(
    const ::std::string& name, BehaviorDescription_ExecutionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BehaviorDescription_ExecutionState>(
    BehaviorDescription_ExecutionState_descriptor(), name, value);
}
// ===================================================================

class BehaviorArguments : public ::google::protobuf::Message {
 public:
  BehaviorArguments();
  virtual ~BehaviorArguments();

  BehaviorArguments(const BehaviorArguments& from);

  inline BehaviorArguments& operator=(const BehaviorArguments& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorArguments& default_instance();

  void Swap(BehaviorArguments* other);

  // implements Message ----------------------------------------------

  inline BehaviorArguments* New() const { return New(NULL); }

  BehaviorArguments* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BehaviorArguments& from);
  void MergeFrom(const BehaviorArguments& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BehaviorArguments* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required bool place_holder = 3;
  bool has_place_holder() const;
  void clear_place_holder();
  static const int kPlaceHolderFieldNumber = 3;
  bool place_holder() const;
  void set_place_holder(bool value);

  // required string type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:experimot.msgs.BehaviorArguments)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_place_holder();
  inline void clear_has_place_holder();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  bool place_holder_;
  friend void  protobuf_AddDesc_robot_5fbehavior_2eproto();
  friend void protobuf_AssignDesc_robot_5fbehavior_2eproto();
  friend void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

  void InitAsDefaultInstance();
  static BehaviorArguments* default_instance_;
};
// -------------------------------------------------------------------

class BehaviorDescription : public ::google::protobuf::Message {
 public:
  BehaviorDescription();
  virtual ~BehaviorDescription();

  BehaviorDescription(const BehaviorDescription& from);

  inline BehaviorDescription& operator=(const BehaviorDescription& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorDescription& default_instance();

  void Swap(BehaviorDescription* other);

  // implements Message ----------------------------------------------

  inline BehaviorDescription* New() const { return New(NULL); }

  BehaviorDescription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BehaviorDescription& from);
  void MergeFrom(const BehaviorDescription& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BehaviorDescription* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BehaviorDescription_ExecutionType ExecutionType;
  static const ExecutionType Blocking = BehaviorDescription_ExecutionType_Blocking;
  static const ExecutionType NonBlocking = BehaviorDescription_ExecutionType_NonBlocking;
  static inline bool ExecutionType_IsValid(int value) {
    return BehaviorDescription_ExecutionType_IsValid(value);
  }
  static const ExecutionType ExecutionType_MIN =
    BehaviorDescription_ExecutionType_ExecutionType_MIN;
  static const ExecutionType ExecutionType_MAX =
    BehaviorDescription_ExecutionType_ExecutionType_MAX;
  static const int ExecutionType_ARRAYSIZE =
    BehaviorDescription_ExecutionType_ExecutionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ExecutionType_descriptor() {
    return BehaviorDescription_ExecutionType_descriptor();
  }
  static inline const ::std::string& ExecutionType_Name(ExecutionType value) {
    return BehaviorDescription_ExecutionType_Name(value);
  }
  static inline bool ExecutionType_Parse(const ::std::string& name,
      ExecutionType* value) {
    return BehaviorDescription_ExecutionType_Parse(name, value);
  }

  typedef BehaviorDescription_ExecutionState ExecutionState;
  static const ExecutionState Idle = BehaviorDescription_ExecutionState_Idle;
  static const ExecutionState Running = BehaviorDescription_ExecutionState_Running;
  static const ExecutionState Error = BehaviorDescription_ExecutionState_Error;
  static inline bool ExecutionState_IsValid(int value) {
    return BehaviorDescription_ExecutionState_IsValid(value);
  }
  static const ExecutionState ExecutionState_MIN =
    BehaviorDescription_ExecutionState_ExecutionState_MIN;
  static const ExecutionState ExecutionState_MAX =
    BehaviorDescription_ExecutionState_ExecutionState_MAX;
  static const int ExecutionState_ARRAYSIZE =
    BehaviorDescription_ExecutionState_ExecutionState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ExecutionState_descriptor() {
    return BehaviorDescription_ExecutionState_descriptor();
  }
  static inline const ::std::string& ExecutionState_Name(ExecutionState value) {
    return BehaviorDescription_ExecutionState_Name(value);
  }
  static inline bool ExecutionState_Parse(const ::std::string& name,
      ExecutionState* value) {
    return BehaviorDescription_ExecutionState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string function_name = 2;
  bool has_function_name() const;
  void clear_function_name();
  static const int kFunctionNameFieldNumber = 2;
  const ::std::string& function_name() const;
  void set_function_name(const ::std::string& value);
  void set_function_name(const char* value);
  void set_function_name(const char* value, size_t size);
  ::std::string* mutable_function_name();
  ::std::string* release_function_name();
  void set_allocated_function_name(::std::string* function_name);

  // repeated .experimot.msgs.BehaviorArguments arg = 3;
  int arg_size() const;
  void clear_arg();
  static const int kArgFieldNumber = 3;
  const ::experimot::msgs::BehaviorArguments& arg(int index) const;
  ::experimot::msgs::BehaviorArguments* mutable_arg(int index);
  ::experimot::msgs::BehaviorArguments* add_arg();
  const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorArguments >&
      arg() const;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorArguments >*
      mutable_arg();

  // required .experimot.msgs.BehaviorDescription.ExecutionType type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::experimot::msgs::BehaviorDescription_ExecutionType type() const;
  void set_type(::experimot::msgs::BehaviorDescription_ExecutionType value);

  // required .experimot.msgs.BehaviorDescription.ExecutionState state = 5;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::experimot::msgs::BehaviorDescription_ExecutionState state() const;
  void set_state(::experimot::msgs::BehaviorDescription_ExecutionState value);

  // @@protoc_insertion_point(class_scope:experimot.msgs.BehaviorDescription)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_function_name();
  inline void clear_has_function_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_state();
  inline void clear_has_state();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr function_name_;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorArguments > arg_;
  int type_;
  int state_;
  friend void  protobuf_AddDesc_robot_5fbehavior_2eproto();
  friend void protobuf_AssignDesc_robot_5fbehavior_2eproto();
  friend void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

  void InitAsDefaultInstance();
  static BehaviorDescription* default_instance_;
};
// -------------------------------------------------------------------

class RobotBehaviorModule_RobotBehaviorResponder : public ::google::protobuf::Message {
 public:
  RobotBehaviorModule_RobotBehaviorResponder();
  virtual ~RobotBehaviorModule_RobotBehaviorResponder();

  RobotBehaviorModule_RobotBehaviorResponder(const RobotBehaviorModule_RobotBehaviorResponder& from);

  inline RobotBehaviorModule_RobotBehaviorResponder& operator=(const RobotBehaviorModule_RobotBehaviorResponder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotBehaviorModule_RobotBehaviorResponder& default_instance();

  void Swap(RobotBehaviorModule_RobotBehaviorResponder* other);

  // implements Message ----------------------------------------------

  inline RobotBehaviorModule_RobotBehaviorResponder* New() const { return New(NULL); }

  RobotBehaviorModule_RobotBehaviorResponder* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotBehaviorModule_RobotBehaviorResponder& from);
  void MergeFrom(const RobotBehaviorModule_RobotBehaviorResponder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RobotBehaviorModule_RobotBehaviorResponder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string Host = 1;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // required int32 Port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_port();
  inline void clear_has_port();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_robot_5fbehavior_2eproto();
  friend void protobuf_AssignDesc_robot_5fbehavior_2eproto();
  friend void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

  void InitAsDefaultInstance();
  static RobotBehaviorModule_RobotBehaviorResponder* default_instance_;
};
// -------------------------------------------------------------------

class RobotBehaviorModule : public ::google::protobuf::Message {
 public:
  RobotBehaviorModule();
  virtual ~RobotBehaviorModule();

  RobotBehaviorModule(const RobotBehaviorModule& from);

  inline RobotBehaviorModule& operator=(const RobotBehaviorModule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotBehaviorModule& default_instance();

  void Swap(RobotBehaviorModule* other);

  // implements Message ----------------------------------------------

  inline RobotBehaviorModule* New() const { return New(NULL); }

  RobotBehaviorModule* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotBehaviorModule& from);
  void MergeFrom(const RobotBehaviorModule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RobotBehaviorModule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RobotBehaviorModule_RobotBehaviorResponder RobotBehaviorResponder;

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string robot = 2;
  bool has_robot() const;
  void clear_robot();
  static const int kRobotFieldNumber = 2;
  const ::std::string& robot() const;
  void set_robot(const ::std::string& value);
  void set_robot(const char* value);
  void set_robot(const char* value, size_t size);
  ::std::string* mutable_robot();
  ::std::string* release_robot();
  void set_allocated_robot(::std::string* robot);

  // repeated .experimot.msgs.Param param = 3;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 3;
  const ::experimot::msgs::Param& param(int index) const;
  ::experimot::msgs::Param* mutable_param(int index);
  ::experimot::msgs::Param* add_param();
  const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >&
      param() const;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >*
      mutable_param();

  // repeated .experimot.msgs.BehaviorDescription behaviors = 4;
  int behaviors_size() const;
  void clear_behaviors();
  static const int kBehaviorsFieldNumber = 4;
  const ::experimot::msgs::BehaviorDescription& behaviors(int index) const;
  ::experimot::msgs::BehaviorDescription* mutable_behaviors(int index);
  ::experimot::msgs::BehaviorDescription* add_behaviors();
  const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorDescription >&
      behaviors() const;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorDescription >*
      mutable_behaviors();

  // optional .experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder responder = 5;
  bool has_responder() const;
  void clear_responder();
  static const int kResponderFieldNumber = 5;
  const ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder& responder() const;
  ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* mutable_responder();
  ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* release_responder();
  void set_allocated_responder(::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* responder);

  // @@protoc_insertion_point(class_scope:experimot.msgs.RobotBehaviorModule)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_robot();
  inline void clear_has_robot();
  inline void set_has_responder();
  inline void clear_has_responder();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr robot_;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param > param_;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorDescription > behaviors_;
  ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* responder_;
  friend void  protobuf_AddDesc_robot_5fbehavior_2eproto();
  friend void protobuf_AssignDesc_robot_5fbehavior_2eproto();
  friend void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

  void InitAsDefaultInstance();
  static RobotBehaviorModule* default_instance_;
};
// -------------------------------------------------------------------

class RobotBehaviorModules : public ::google::protobuf::Message {
 public:
  RobotBehaviorModules();
  virtual ~RobotBehaviorModules();

  RobotBehaviorModules(const RobotBehaviorModules& from);

  inline RobotBehaviorModules& operator=(const RobotBehaviorModules& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RobotBehaviorModules& default_instance();

  void Swap(RobotBehaviorModules* other);

  // implements Message ----------------------------------------------

  inline RobotBehaviorModules* New() const { return New(NULL); }

  RobotBehaviorModules* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RobotBehaviorModules& from);
  void MergeFrom(const RobotBehaviorModules& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RobotBehaviorModules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .experimot.msgs.RobotBehaviorModule modules = 1;
  int modules_size() const;
  void clear_modules();
  static const int kModulesFieldNumber = 1;
  const ::experimot::msgs::RobotBehaviorModule& modules(int index) const;
  ::experimot::msgs::RobotBehaviorModule* mutable_modules(int index);
  ::experimot::msgs::RobotBehaviorModule* add_modules();
  const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::RobotBehaviorModule >&
      modules() const;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::RobotBehaviorModule >*
      mutable_modules();

  // @@protoc_insertion_point(class_scope:experimot.msgs.RobotBehaviorModules)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::experimot::msgs::RobotBehaviorModule > modules_;
  friend void  protobuf_AddDesc_robot_5fbehavior_2eproto();
  friend void protobuf_AssignDesc_robot_5fbehavior_2eproto();
  friend void protobuf_ShutdownFile_robot_5fbehavior_2eproto();

  void InitAsDefaultInstance();
  static RobotBehaviorModules* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BehaviorArguments

// required string name = 1;
inline bool BehaviorArguments::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorArguments::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorArguments::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorArguments::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorArguments::name() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorArguments.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorArguments.name)
}
inline void BehaviorArguments::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.BehaviorArguments.name)
}
inline void BehaviorArguments::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.BehaviorArguments.name)
}
inline ::std::string* BehaviorArguments::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorArguments.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorArguments::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.BehaviorArguments.name)
}

// required string value = 2;
inline bool BehaviorArguments::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorArguments::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorArguments::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorArguments::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& BehaviorArguments::value() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorArguments.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorArguments.value)
}
inline void BehaviorArguments::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.BehaviorArguments.value)
}
inline void BehaviorArguments::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.BehaviorArguments.value)
}
inline ::std::string* BehaviorArguments::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorArguments.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorArguments::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.BehaviorArguments.value)
}

// required bool place_holder = 3;
inline bool BehaviorArguments::has_place_holder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BehaviorArguments::set_has_place_holder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BehaviorArguments::clear_has_place_holder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BehaviorArguments::clear_place_holder() {
  place_holder_ = false;
  clear_has_place_holder();
}
inline bool BehaviorArguments::place_holder() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorArguments.place_holder)
  return place_holder_;
}
inline void BehaviorArguments::set_place_holder(bool value) {
  set_has_place_holder();
  place_holder_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorArguments.place_holder)
}

// required string type = 4;
inline bool BehaviorArguments::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BehaviorArguments::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BehaviorArguments::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BehaviorArguments::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& BehaviorArguments::type() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorArguments.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorArguments.type)
}
inline void BehaviorArguments::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.BehaviorArguments.type)
}
inline void BehaviorArguments::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.BehaviorArguments.type)
}
inline ::std::string* BehaviorArguments::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorArguments.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorArguments::release_type() {
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorArguments::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.BehaviorArguments.type)
}

// -------------------------------------------------------------------

// BehaviorDescription

// required string name = 1;
inline bool BehaviorDescription::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BehaviorDescription::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BehaviorDescription::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BehaviorDescription::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BehaviorDescription::name() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorDescription.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorDescription::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorDescription.name)
}
inline void BehaviorDescription::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.BehaviorDescription.name)
}
inline void BehaviorDescription::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.BehaviorDescription.name)
}
inline ::std::string* BehaviorDescription::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorDescription.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorDescription::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorDescription::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.BehaviorDescription.name)
}

// required string function_name = 2;
inline bool BehaviorDescription::has_function_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorDescription::set_has_function_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorDescription::clear_has_function_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorDescription::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_function_name();
}
inline const ::std::string& BehaviorDescription::function_name() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorDescription.function_name)
  return function_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorDescription::set_function_name(const ::std::string& value) {
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorDescription.function_name)
}
inline void BehaviorDescription::set_function_name(const char* value) {
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.BehaviorDescription.function_name)
}
inline void BehaviorDescription::set_function_name(const char* value, size_t size) {
  set_has_function_name();
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.BehaviorDescription.function_name)
}
inline ::std::string* BehaviorDescription::mutable_function_name() {
  set_has_function_name();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorDescription.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BehaviorDescription::release_function_name() {
  clear_has_function_name();
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BehaviorDescription::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    set_has_function_name();
  } else {
    clear_has_function_name();
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.BehaviorDescription.function_name)
}

// repeated .experimot.msgs.BehaviorArguments arg = 3;
inline int BehaviorDescription::arg_size() const {
  return arg_.size();
}
inline void BehaviorDescription::clear_arg() {
  arg_.Clear();
}
inline const ::experimot::msgs::BehaviorArguments& BehaviorDescription::arg(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorDescription.arg)
  return arg_.Get(index);
}
inline ::experimot::msgs::BehaviorArguments* BehaviorDescription::mutable_arg(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.BehaviorDescription.arg)
  return arg_.Mutable(index);
}
inline ::experimot::msgs::BehaviorArguments* BehaviorDescription::add_arg() {
  // @@protoc_insertion_point(field_add:experimot.msgs.BehaviorDescription.arg)
  return arg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorArguments >&
BehaviorDescription::arg() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.BehaviorDescription.arg)
  return arg_;
}
inline ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorArguments >*
BehaviorDescription::mutable_arg() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.BehaviorDescription.arg)
  return &arg_;
}

// required .experimot.msgs.BehaviorDescription.ExecutionType type = 4;
inline bool BehaviorDescription::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BehaviorDescription::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BehaviorDescription::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BehaviorDescription::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::experimot::msgs::BehaviorDescription_ExecutionType BehaviorDescription::type() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorDescription.type)
  return static_cast< ::experimot::msgs::BehaviorDescription_ExecutionType >(type_);
}
inline void BehaviorDescription::set_type(::experimot::msgs::BehaviorDescription_ExecutionType value) {
  assert(::experimot::msgs::BehaviorDescription_ExecutionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorDescription.type)
}

// required .experimot.msgs.BehaviorDescription.ExecutionState state = 5;
inline bool BehaviorDescription::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BehaviorDescription::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BehaviorDescription::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BehaviorDescription::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::experimot::msgs::BehaviorDescription_ExecutionState BehaviorDescription::state() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.BehaviorDescription.state)
  return static_cast< ::experimot::msgs::BehaviorDescription_ExecutionState >(state_);
}
inline void BehaviorDescription::set_state(::experimot::msgs::BehaviorDescription_ExecutionState value) {
  assert(::experimot::msgs::BehaviorDescription_ExecutionState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.BehaviorDescription.state)
}

// -------------------------------------------------------------------

// RobotBehaviorModule_RobotBehaviorResponder

// required string Host = 1;
inline bool RobotBehaviorModule_RobotBehaviorResponder::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& RobotBehaviorModule_RobotBehaviorResponder::host() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
}
inline ::std::string* RobotBehaviorModule_RobotBehaviorResponder::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotBehaviorModule_RobotBehaviorResponder::release_host() {
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Host)
}

// required int32 Port = 2;
inline bool RobotBehaviorModule_RobotBehaviorResponder::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 RobotBehaviorModule_RobotBehaviorResponder::port() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Port)
  return port_;
}
inline void RobotBehaviorModule_RobotBehaviorResponder::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder.Port)
}

// -------------------------------------------------------------------

// RobotBehaviorModule

// required string name = 1;
inline bool RobotBehaviorModule::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RobotBehaviorModule::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RobotBehaviorModule::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RobotBehaviorModule::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RobotBehaviorModule::name() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.RobotBehaviorModule.name)
}
inline void RobotBehaviorModule::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.RobotBehaviorModule.name)
}
inline void RobotBehaviorModule::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.RobotBehaviorModule.name)
}
inline ::std::string* RobotBehaviorModule::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotBehaviorModule::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.RobotBehaviorModule.name)
}

// required string robot = 2;
inline bool RobotBehaviorModule::has_robot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RobotBehaviorModule::set_has_robot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RobotBehaviorModule::clear_has_robot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RobotBehaviorModule::clear_robot() {
  robot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robot();
}
inline const ::std::string& RobotBehaviorModule::robot() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.robot)
  return robot_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule::set_robot(const ::std::string& value) {
  set_has_robot();
  robot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.RobotBehaviorModule.robot)
}
inline void RobotBehaviorModule::set_robot(const char* value) {
  set_has_robot();
  robot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.RobotBehaviorModule.robot)
}
inline void RobotBehaviorModule::set_robot(const char* value, size_t size) {
  set_has_robot();
  robot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.RobotBehaviorModule.robot)
}
inline ::std::string* RobotBehaviorModule::mutable_robot() {
  set_has_robot();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.robot)
  return robot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RobotBehaviorModule::release_robot() {
  clear_has_robot();
  return robot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RobotBehaviorModule::set_allocated_robot(::std::string* robot) {
  if (robot != NULL) {
    set_has_robot();
  } else {
    clear_has_robot();
  }
  robot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robot);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.RobotBehaviorModule.robot)
}

// repeated .experimot.msgs.Param param = 3;
inline int RobotBehaviorModule::param_size() const {
  return param_.size();
}
inline void RobotBehaviorModule::clear_param() {
  param_.Clear();
}
inline const ::experimot::msgs::Param& RobotBehaviorModule::param(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.param)
  return param_.Get(index);
}
inline ::experimot::msgs::Param* RobotBehaviorModule::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.param)
  return param_.Mutable(index);
}
inline ::experimot::msgs::Param* RobotBehaviorModule::add_param() {
  // @@protoc_insertion_point(field_add:experimot.msgs.RobotBehaviorModule.param)
  return param_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >&
RobotBehaviorModule::param() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.RobotBehaviorModule.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >*
RobotBehaviorModule::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.RobotBehaviorModule.param)
  return &param_;
}

// repeated .experimot.msgs.BehaviorDescription behaviors = 4;
inline int RobotBehaviorModule::behaviors_size() const {
  return behaviors_.size();
}
inline void RobotBehaviorModule::clear_behaviors() {
  behaviors_.Clear();
}
inline const ::experimot::msgs::BehaviorDescription& RobotBehaviorModule::behaviors(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.behaviors)
  return behaviors_.Get(index);
}
inline ::experimot::msgs::BehaviorDescription* RobotBehaviorModule::mutable_behaviors(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.behaviors)
  return behaviors_.Mutable(index);
}
inline ::experimot::msgs::BehaviorDescription* RobotBehaviorModule::add_behaviors() {
  // @@protoc_insertion_point(field_add:experimot.msgs.RobotBehaviorModule.behaviors)
  return behaviors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorDescription >&
RobotBehaviorModule::behaviors() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.RobotBehaviorModule.behaviors)
  return behaviors_;
}
inline ::google::protobuf::RepeatedPtrField< ::experimot::msgs::BehaviorDescription >*
RobotBehaviorModule::mutable_behaviors() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.RobotBehaviorModule.behaviors)
  return &behaviors_;
}

// optional .experimot.msgs.RobotBehaviorModule.RobotBehaviorResponder responder = 5;
inline bool RobotBehaviorModule::has_responder() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RobotBehaviorModule::set_has_responder() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RobotBehaviorModule::clear_has_responder() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RobotBehaviorModule::clear_responder() {
  if (responder_ != NULL) responder_->::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder::Clear();
  clear_has_responder();
}
inline const ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder& RobotBehaviorModule::responder() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModule.responder)
  return responder_ != NULL ? *responder_ : *default_instance_->responder_;
}
inline ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* RobotBehaviorModule::mutable_responder() {
  set_has_responder();
  if (responder_ == NULL) {
    responder_ = new ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder;
  }
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModule.responder)
  return responder_;
}
inline ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* RobotBehaviorModule::release_responder() {
  clear_has_responder();
  ::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* temp = responder_;
  responder_ = NULL;
  return temp;
}
inline void RobotBehaviorModule::set_allocated_responder(::experimot::msgs::RobotBehaviorModule_RobotBehaviorResponder* responder) {
  delete responder_;
  responder_ = responder;
  if (responder) {
    set_has_responder();
  } else {
    clear_has_responder();
  }
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.RobotBehaviorModule.responder)
}

// -------------------------------------------------------------------

// RobotBehaviorModules

// repeated .experimot.msgs.RobotBehaviorModule modules = 1;
inline int RobotBehaviorModules::modules_size() const {
  return modules_.size();
}
inline void RobotBehaviorModules::clear_modules() {
  modules_.Clear();
}
inline const ::experimot::msgs::RobotBehaviorModule& RobotBehaviorModules::modules(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.RobotBehaviorModules.modules)
  return modules_.Get(index);
}
inline ::experimot::msgs::RobotBehaviorModule* RobotBehaviorModules::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.RobotBehaviorModules.modules)
  return modules_.Mutable(index);
}
inline ::experimot::msgs::RobotBehaviorModule* RobotBehaviorModules::add_modules() {
  // @@protoc_insertion_point(field_add:experimot.msgs.RobotBehaviorModules.modules)
  return modules_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::RobotBehaviorModule >&
RobotBehaviorModules::modules() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.RobotBehaviorModules.modules)
  return modules_;
}
inline ::google::protobuf::RepeatedPtrField< ::experimot::msgs::RobotBehaviorModule >*
RobotBehaviorModules::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.RobotBehaviorModules.modules)
  return &modules_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<experimot::msgs::BehaviorArguments> BehaviorArgumentsPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace experimot

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::experimot::msgs::BehaviorDescription_ExecutionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::experimot::msgs::BehaviorDescription_ExecutionType>() {
  return ::experimot::msgs::BehaviorDescription_ExecutionType_descriptor();
}
template <> struct is_proto_enum< ::experimot::msgs::BehaviorDescription_ExecutionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::experimot::msgs::BehaviorDescription_ExecutionState>() {
  return ::experimot::msgs::BehaviorDescription_ExecutionState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

typedef const boost::shared_ptr<experimot::msgs::BehaviorArguments const> ConstBehaviorArgumentsPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_robot_5fbehavior_2eproto__INCLUDED
