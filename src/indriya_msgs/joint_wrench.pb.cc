// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joint_wrench.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "joint_wrench.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* JointWrench_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointWrench_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_joint_5fwrench_2eproto() {
  protobuf_AddDesc_joint_5fwrench_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "joint_wrench.proto");
  GOOGLE_CHECK(file != NULL);
  JointWrench_descriptor_ = file->message_type(0);
  static const int JointWrench_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_1_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_1_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_2_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_2_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_1_wrench_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, body_2_wrench_),
  };
  JointWrench_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JointWrench_descriptor_,
      JointWrench::default_instance_,
      JointWrench_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, _has_bits_[0]),
      -1,
      -1,
      sizeof(JointWrench),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointWrench, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_joint_5fwrench_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JointWrench_descriptor_, &JointWrench::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_joint_5fwrench_2eproto() {
  delete JointWrench::default_instance_;
  delete JointWrench_reflection_;
}

void protobuf_AddDesc_joint_5fwrench_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_wrench_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022joint_wrench.proto\022\021Indriya.Core.Msgs\032"
    "\014wrench.proto\"\301\001\n\013JointWrench\022\023\n\013body_1_"
    "name\030\001 \002(\t\022\021\n\tbody_1_id\030\002 \002(\r\022\023\n\013body_2_"
    "name\030\003 \002(\t\022\021\n\tbody_2_id\030\004 \002(\r\0220\n\rbody_1_"
    "wrench\030\005 \002(\0132\031.Indriya.Core.Msgs.Wrench\022"
    "0\n\rbody_2_wrench\030\006 \002(\0132\031.Indriya.Core.Ms"
    "gs.Wrench", 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "joint_wrench.proto", &protobuf_RegisterTypes);
  JointWrench::default_instance_ = new JointWrench();
  JointWrench::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_joint_5fwrench_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_joint_5fwrench_2eproto {
  StaticDescriptorInitializer_joint_5fwrench_2eproto() {
    protobuf_AddDesc_joint_5fwrench_2eproto();
  }
} static_descriptor_initializer_joint_5fwrench_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int JointWrench::kBody1NameFieldNumber;
const int JointWrench::kBody1IdFieldNumber;
const int JointWrench::kBody2NameFieldNumber;
const int JointWrench::kBody2IdFieldNumber;
const int JointWrench::kBody1WrenchFieldNumber;
const int JointWrench::kBody2WrenchFieldNumber;
#endif  // !_MSC_VER

JointWrench::JointWrench()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.JointWrench)
}

void JointWrench::InitAsDefaultInstance() {
  body_1_wrench_ = const_cast< ::Indriya::Core::Msgs::Wrench*>(&::Indriya::Core::Msgs::Wrench::default_instance());
  body_2_wrench_ = const_cast< ::Indriya::Core::Msgs::Wrench*>(&::Indriya::Core::Msgs::Wrench::default_instance());
}

JointWrench::JointWrench(const JointWrench& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.JointWrench)
}

void JointWrench::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  body_1_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_1_id_ = 0u;
  body_2_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_2_id_ = 0u;
  body_1_wrench_ = NULL;
  body_2_wrench_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointWrench::~JointWrench() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.JointWrench)
  SharedDtor();
}

void JointWrench::SharedDtor() {
  body_1_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_2_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete body_1_wrench_;
    delete body_2_wrench_;
  }
}

void JointWrench::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointWrench::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointWrench_descriptor_;
}

const JointWrench& JointWrench::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_joint_5fwrench_2eproto();
  return *default_instance_;
}

JointWrench* JointWrench::default_instance_ = NULL;

JointWrench* JointWrench::New(::google::protobuf::Arena* arena) const {
  JointWrench* n = new JointWrench;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JointWrench::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<JointWrench*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(body_1_id_, body_2_id_);
    if (has_body_1_name()) {
      body_1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_2_name()) {
      body_2_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_1_wrench()) {
      if (body_1_wrench_ != NULL) body_1_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
    }
    if (has_body_2_wrench()) {
      if (body_2_wrench_ != NULL) body_2_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JointWrench::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.JointWrench)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string body_1_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_1_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_1_name().data(), this->body_1_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.JointWrench.body_1_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_body_1_id;
        break;
      }

      // required uint32 body_1_id = 2;
      case 2: {
        if (tag == 16) {
         parse_body_1_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &body_1_id_)));
          set_has_body_1_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_body_2_name;
        break;
      }

      // required string body_2_name = 3;
      case 3: {
        if (tag == 26) {
         parse_body_2_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_2_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_2_name().data(), this->body_2_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.JointWrench.body_2_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_body_2_id;
        break;
      }

      // required uint32 body_2_id = 4;
      case 4: {
        if (tag == 32) {
         parse_body_2_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &body_2_id_)));
          set_has_body_2_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_body_1_wrench;
        break;
      }

      // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
      case 5: {
        if (tag == 42) {
         parse_body_1_wrench:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_body_1_wrench()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_body_2_wrench;
        break;
      }

      // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
      case 6: {
        if (tag == 50) {
         parse_body_2_wrench:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_body_2_wrench()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.JointWrench)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.JointWrench)
  return false;
#undef DO_
}

void JointWrench::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.JointWrench)
  // required string body_1_name = 1;
  if (has_body_1_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_1_name().data(), this->body_1_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointWrench.body_1_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->body_1_name(), output);
  }

  // required uint32 body_1_id = 2;
  if (has_body_1_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->body_1_id(), output);
  }

  // required string body_2_name = 3;
  if (has_body_2_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_2_name().data(), this->body_2_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointWrench.body_2_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->body_2_name(), output);
  }

  // required uint32 body_2_id = 4;
  if (has_body_2_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->body_2_id(), output);
  }

  // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
  if (has_body_1_wrench()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->body_1_wrench_, output);
  }

  // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
  if (has_body_2_wrench()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->body_2_wrench_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.JointWrench)
}

::google::protobuf::uint8* JointWrench::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.JointWrench)
  // required string body_1_name = 1;
  if (has_body_1_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_1_name().data(), this->body_1_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointWrench.body_1_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->body_1_name(), target);
  }

  // required uint32 body_1_id = 2;
  if (has_body_1_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->body_1_id(), target);
  }

  // required string body_2_name = 3;
  if (has_body_2_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_2_name().data(), this->body_2_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.JointWrench.body_2_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->body_2_name(), target);
  }

  // required uint32 body_2_id = 4;
  if (has_body_2_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->body_2_id(), target);
  }

  // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
  if (has_body_1_wrench()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->body_1_wrench_, target);
  }

  // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
  if (has_body_2_wrench()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->body_2_wrench_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.JointWrench)
  return target;
}

int JointWrench::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_body_1_name()) {
    // required string body_1_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body_1_name());
  }

  if (has_body_1_id()) {
    // required uint32 body_1_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->body_1_id());
  }

  if (has_body_2_name()) {
    // required string body_2_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body_2_name());
  }

  if (has_body_2_id()) {
    // required uint32 body_2_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->body_2_id());
  }

  if (has_body_1_wrench()) {
    // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_1_wrench_);
  }

  if (has_body_2_wrench()) {
    // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_2_wrench_);
  }

  return total_size;
}
int JointWrench::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string body_1_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body_1_name());

    // required uint32 body_1_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->body_1_id());

    // required string body_2_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body_2_name());

    // required uint32 body_2_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->body_2_id());

    // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_1_wrench_);

    // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->body_2_wrench_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointWrench::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const JointWrench* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JointWrench*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JointWrench::MergeFrom(const JointWrench& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_body_1_name()) {
      set_has_body_1_name();
      body_1_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_1_name_);
    }
    if (from.has_body_1_id()) {
      set_body_1_id(from.body_1_id());
    }
    if (from.has_body_2_name()) {
      set_has_body_2_name();
      body_2_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_2_name_);
    }
    if (from.has_body_2_id()) {
      set_body_2_id(from.body_2_id());
    }
    if (from.has_body_1_wrench()) {
      mutable_body_1_wrench()->::Indriya::Core::Msgs::Wrench::MergeFrom(from.body_1_wrench());
    }
    if (from.has_body_2_wrench()) {
      mutable_body_2_wrench()->::Indriya::Core::Msgs::Wrench::MergeFrom(from.body_2_wrench());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JointWrench::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointWrench::CopyFrom(const JointWrench& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointWrench::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  if (has_body_1_wrench()) {
    if (!this->body_1_wrench_->IsInitialized()) return false;
  }
  if (has_body_2_wrench()) {
    if (!this->body_2_wrench_->IsInitialized()) return false;
  }
  return true;
}

void JointWrench::Swap(JointWrench* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JointWrench::InternalSwap(JointWrench* other) {
  body_1_name_.Swap(&other->body_1_name_);
  std::swap(body_1_id_, other->body_1_id_);
  body_2_name_.Swap(&other->body_2_name_);
  std::swap(body_2_id_, other->body_2_id_);
  std::swap(body_1_wrench_, other->body_1_wrench_);
  std::swap(body_2_wrench_, other->body_2_wrench_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JointWrench::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointWrench_descriptor_;
  metadata.reflection = JointWrench_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JointWrench

// required string body_1_name = 1;
 bool JointWrench::has_body_1_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void JointWrench::set_has_body_1_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void JointWrench::clear_has_body_1_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void JointWrench::clear_body_1_name() {
  body_1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_1_name();
}
 const ::std::string& JointWrench::body_1_name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_name)
  return body_1_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointWrench::set_body_1_name(const ::std::string& value) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_1_name)
}
 void JointWrench::set_body_1_name(const char* value) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.JointWrench.body_1_name)
}
 void JointWrench::set_body_1_name(const char* value, size_t size) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.JointWrench.body_1_name)
}
 ::std::string* JointWrench::mutable_body_1_name() {
  set_has_body_1_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_1_name)
  return body_1_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointWrench::release_body_1_name() {
  clear_has_body_1_name();
  return body_1_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointWrench::set_allocated_body_1_name(::std::string* body_1_name) {
  if (body_1_name != NULL) {
    set_has_body_1_name();
  } else {
    clear_has_body_1_name();
  }
  body_1_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_1_name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_1_name)
}

// required uint32 body_1_id = 2;
 bool JointWrench::has_body_1_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void JointWrench::set_has_body_1_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void JointWrench::clear_has_body_1_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void JointWrench::clear_body_1_id() {
  body_1_id_ = 0u;
  clear_has_body_1_id();
}
 ::google::protobuf::uint32 JointWrench::body_1_id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_id)
  return body_1_id_;
}
 void JointWrench::set_body_1_id(::google::protobuf::uint32 value) {
  set_has_body_1_id();
  body_1_id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_1_id)
}

// required string body_2_name = 3;
 bool JointWrench::has_body_2_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void JointWrench::set_has_body_2_name() {
  _has_bits_[0] |= 0x00000004u;
}
 void JointWrench::clear_has_body_2_name() {
  _has_bits_[0] &= ~0x00000004u;
}
 void JointWrench::clear_body_2_name() {
  body_2_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_2_name();
}
 const ::std::string& JointWrench::body_2_name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_name)
  return body_2_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointWrench::set_body_2_name(const ::std::string& value) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_2_name)
}
 void JointWrench::set_body_2_name(const char* value) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.JointWrench.body_2_name)
}
 void JointWrench::set_body_2_name(const char* value, size_t size) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.JointWrench.body_2_name)
}
 ::std::string* JointWrench::mutable_body_2_name() {
  set_has_body_2_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_2_name)
  return body_2_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointWrench::release_body_2_name() {
  clear_has_body_2_name();
  return body_2_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointWrench::set_allocated_body_2_name(::std::string* body_2_name) {
  if (body_2_name != NULL) {
    set_has_body_2_name();
  } else {
    clear_has_body_2_name();
  }
  body_2_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_2_name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_2_name)
}

// required uint32 body_2_id = 4;
 bool JointWrench::has_body_2_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void JointWrench::set_has_body_2_id() {
  _has_bits_[0] |= 0x00000008u;
}
 void JointWrench::clear_has_body_2_id() {
  _has_bits_[0] &= ~0x00000008u;
}
 void JointWrench::clear_body_2_id() {
  body_2_id_ = 0u;
  clear_has_body_2_id();
}
 ::google::protobuf::uint32 JointWrench::body_2_id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_id)
  return body_2_id_;
}
 void JointWrench::set_body_2_id(::google::protobuf::uint32 value) {
  set_has_body_2_id();
  body_2_id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_2_id)
}

// required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
 bool JointWrench::has_body_1_wrench() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void JointWrench::set_has_body_1_wrench() {
  _has_bits_[0] |= 0x00000010u;
}
 void JointWrench::clear_has_body_1_wrench() {
  _has_bits_[0] &= ~0x00000010u;
}
 void JointWrench::clear_body_1_wrench() {
  if (body_1_wrench_ != NULL) body_1_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
  clear_has_body_1_wrench();
}
 const ::Indriya::Core::Msgs::Wrench& JointWrench::body_1_wrench() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_wrench)
  return body_1_wrench_ != NULL ? *body_1_wrench_ : *default_instance_->body_1_wrench_;
}
 ::Indriya::Core::Msgs::Wrench* JointWrench::mutable_body_1_wrench() {
  set_has_body_1_wrench();
  if (body_1_wrench_ == NULL) {
    body_1_wrench_ = new ::Indriya::Core::Msgs::Wrench;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_1_wrench)
  return body_1_wrench_;
}
 ::Indriya::Core::Msgs::Wrench* JointWrench::release_body_1_wrench() {
  clear_has_body_1_wrench();
  ::Indriya::Core::Msgs::Wrench* temp = body_1_wrench_;
  body_1_wrench_ = NULL;
  return temp;
}
 void JointWrench::set_allocated_body_1_wrench(::Indriya::Core::Msgs::Wrench* body_1_wrench) {
  delete body_1_wrench_;
  body_1_wrench_ = body_1_wrench;
  if (body_1_wrench) {
    set_has_body_1_wrench();
  } else {
    clear_has_body_1_wrench();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_1_wrench)
}

// required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
 bool JointWrench::has_body_2_wrench() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void JointWrench::set_has_body_2_wrench() {
  _has_bits_[0] |= 0x00000020u;
}
 void JointWrench::clear_has_body_2_wrench() {
  _has_bits_[0] &= ~0x00000020u;
}
 void JointWrench::clear_body_2_wrench() {
  if (body_2_wrench_ != NULL) body_2_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
  clear_has_body_2_wrench();
}
 const ::Indriya::Core::Msgs::Wrench& JointWrench::body_2_wrench() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_wrench)
  return body_2_wrench_ != NULL ? *body_2_wrench_ : *default_instance_->body_2_wrench_;
}
 ::Indriya::Core::Msgs::Wrench* JointWrench::mutable_body_2_wrench() {
  set_has_body_2_wrench();
  if (body_2_wrench_ == NULL) {
    body_2_wrench_ = new ::Indriya::Core::Msgs::Wrench;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_2_wrench)
  return body_2_wrench_;
}
 ::Indriya::Core::Msgs::Wrench* JointWrench::release_body_2_wrench() {
  clear_has_body_2_wrench();
  ::Indriya::Core::Msgs::Wrench* temp = body_2_wrench_;
  body_2_wrench_ = NULL;
  return temp;
}
 void JointWrench::set_allocated_body_2_wrench(::Indriya::Core::Msgs::Wrench* body_2_wrench) {
  delete body_2_wrench_;
  body_2_wrench_ = body_2_wrench;
  if (body_2_wrench) {
    set_has_body_2_wrench();
  } else {
    clear_has_body_2_wrench();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_2_wrench)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.JointWrench", JointWrench)
// @@protoc_insertion_point(global_scope)
