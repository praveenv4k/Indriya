// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voice.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "voice.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace experimot {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* VoiceCommandDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoiceCommandDescription_reflection_ = NULL;
const ::google::protobuf::Descriptor* VoiceRecognitionModule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoiceRecognitionModule_reflection_ = NULL;
const ::google::protobuf::Descriptor* VoiceRecognitionModules_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VoiceRecognitionModules_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_voice_2eproto() {
  protobuf_AddDesc_voice_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "voice.proto");
  GOOGLE_CHECK(file != NULL);
  VoiceCommandDescription_descriptor_ = file->message_type(0);
  static const int VoiceCommandDescription_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, confidence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, triggeredat_),
  };
  VoiceCommandDescription_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VoiceCommandDescription_descriptor_,
      VoiceCommandDescription::default_instance_,
      VoiceCommandDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, _has_bits_[0]),
      -1,
      -1,
      sizeof(VoiceCommandDescription),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceCommandDescription, _internal_metadata_),
      -1);
  VoiceRecognitionModule_descriptor_ = file->message_type(1);
  static const int VoiceRecognitionModule_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModule, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModule, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModule, commands_),
  };
  VoiceRecognitionModule_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VoiceRecognitionModule_descriptor_,
      VoiceRecognitionModule::default_instance_,
      VoiceRecognitionModule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModule, _has_bits_[0]),
      -1,
      -1,
      sizeof(VoiceRecognitionModule),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModule, _internal_metadata_),
      -1);
  VoiceRecognitionModules_descriptor_ = file->message_type(2);
  static const int VoiceRecognitionModules_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModules, modules_),
  };
  VoiceRecognitionModules_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VoiceRecognitionModules_descriptor_,
      VoiceRecognitionModules::default_instance_,
      VoiceRecognitionModules_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModules, _has_bits_[0]),
      -1,
      -1,
      sizeof(VoiceRecognitionModules),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VoiceRecognitionModules, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_voice_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VoiceCommandDescription_descriptor_, &VoiceCommandDescription::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VoiceRecognitionModule_descriptor_, &VoiceRecognitionModule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VoiceRecognitionModules_descriptor_, &VoiceRecognitionModules::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_voice_2eproto() {
  delete VoiceCommandDescription::default_instance_;
  delete VoiceCommandDescription_reflection_;
  delete VoiceRecognitionModule::default_instance_;
  delete VoiceRecognitionModule_reflection_;
  delete VoiceRecognitionModules::default_instance_;
  delete VoiceRecognitionModules_reflection_;
}

void protobuf_AddDesc_voice_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::experimot::msgs::protobuf_AddDesc_param_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013voice.proto\022\016experimot.msgs\032\013param.pro"
    "to\"u\n\027VoiceCommandDescription\022\017\n\007command"
    "\030\001 \002(\t\022\016\n\006active\030\002 \001(\010\022\022\n\nconfidence\030\003 \001"
    "(\005\022\020\n\010language\030\004 \001(\t\022\023\n\013triggeredAt\030\005 \001("
    "\t\"\210\001\n\026VoiceRecognitionModule\022\014\n\004name\030\001 \002"
    "(\t\022%\n\006params\030\002 \003(\0132\025.experimot.msgs.Para"
    "m\0229\n\010commands\030\003 \003(\0132\'.experimot.msgs.Voi"
    "ceCommandDescription\"R\n\027VoiceRecognition"
    "Modules\0227\n\007modules\030\001 \003(\0132&.experimot.msg"
    "s.VoiceRecognitionModule", 384);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "voice.proto", &protobuf_RegisterTypes);
  VoiceCommandDescription::default_instance_ = new VoiceCommandDescription();
  VoiceRecognitionModule::default_instance_ = new VoiceRecognitionModule();
  VoiceRecognitionModules::default_instance_ = new VoiceRecognitionModules();
  VoiceCommandDescription::default_instance_->InitAsDefaultInstance();
  VoiceRecognitionModule::default_instance_->InitAsDefaultInstance();
  VoiceRecognitionModules::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_voice_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_voice_2eproto {
  StaticDescriptorInitializer_voice_2eproto() {
    protobuf_AddDesc_voice_2eproto();
  }
} static_descriptor_initializer_voice_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int VoiceCommandDescription::kCommandFieldNumber;
const int VoiceCommandDescription::kActiveFieldNumber;
const int VoiceCommandDescription::kConfidenceFieldNumber;
const int VoiceCommandDescription::kLanguageFieldNumber;
const int VoiceCommandDescription::kTriggeredAtFieldNumber;
#endif  // !_MSC_VER

VoiceCommandDescription::VoiceCommandDescription()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:experimot.msgs.VoiceCommandDescription)
}

void VoiceCommandDescription::InitAsDefaultInstance() {
}

VoiceCommandDescription::VoiceCommandDescription(const VoiceCommandDescription& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:experimot.msgs.VoiceCommandDescription)
}

void VoiceCommandDescription::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  active_ = false;
  confidence_ = 0;
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  triggeredat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoiceCommandDescription::~VoiceCommandDescription() {
  // @@protoc_insertion_point(destructor:experimot.msgs.VoiceCommandDescription)
  SharedDtor();
}

void VoiceCommandDescription::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  triggeredat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VoiceCommandDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceCommandDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceCommandDescription_descriptor_;
}

const VoiceCommandDescription& VoiceCommandDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_voice_2eproto();
  return *default_instance_;
}

VoiceCommandDescription* VoiceCommandDescription::default_instance_ = NULL;

VoiceCommandDescription* VoiceCommandDescription::New(::google::protobuf::Arena* arena) const {
  VoiceCommandDescription* n = new VoiceCommandDescription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceCommandDescription::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<VoiceCommandDescription*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(active_, confidence_);
    if (has_command()) {
      command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_language()) {
      language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_triggeredat()) {
      triggeredat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VoiceCommandDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:experimot.msgs.VoiceCommandDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experimot.msgs.VoiceCommandDescription.command");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_active;
        break;
      }

      // optional bool active = 2;
      case 2: {
        if (tag == 16) {
         parse_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
          set_has_active();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_confidence;
        break;
      }

      // optional int32 confidence = 3;
      case 3: {
        if (tag == 24) {
         parse_confidence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &confidence_)));
          set_has_confidence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_language;
        break;
      }

      // optional string language = 4;
      case 4: {
        if (tag == 34) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experimot.msgs.VoiceCommandDescription.language");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_triggeredAt;
        break;
      }

      // optional string triggeredAt = 5;
      case 5: {
        if (tag == 42) {
         parse_triggeredAt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_triggeredat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->triggeredat().data(), this->triggeredat().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experimot.msgs.VoiceCommandDescription.triggeredAt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:experimot.msgs.VoiceCommandDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:experimot.msgs.VoiceCommandDescription)
  return false;
#undef DO_
}

void VoiceCommandDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:experimot.msgs.VoiceCommandDescription)
  // required string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  // optional bool active = 2;
  if (has_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->active(), output);
  }

  // optional int32 confidence = 3;
  if (has_confidence()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->confidence(), output);
  }

  // optional string language = 4;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language(), output);
  }

  // optional string triggeredAt = 5;
  if (has_triggeredat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggeredat().data(), this->triggeredat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.triggeredAt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->triggeredat(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:experimot.msgs.VoiceCommandDescription)
}

::google::protobuf::uint8* VoiceCommandDescription::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:experimot.msgs.VoiceCommandDescription)
  // required string command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  // optional bool active = 2;
  if (has_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->active(), target);
  }

  // optional int32 confidence = 3;
  if (has_confidence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->confidence(), target);
  }

  // optional string language = 4;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language(), target);
  }

  // optional string triggeredAt = 5;
  if (has_triggeredat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->triggeredat().data(), this->triggeredat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceCommandDescription.triggeredAt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->triggeredat(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:experimot.msgs.VoiceCommandDescription)
  return target;
}

int VoiceCommandDescription::ByteSize() const {
  int total_size = 0;

  // required string command = 1;
  if (has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }
  if (_has_bits_[1 / 32] & 30) {
    // optional bool active = 2;
    if (has_active()) {
      total_size += 1 + 1;
    }

    // optional int32 confidence = 3;
    if (has_confidence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->confidence());
    }

    // optional string language = 4;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // optional string triggeredAt = 5;
    if (has_triggeredat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->triggeredat());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceCommandDescription::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VoiceCommandDescription* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoiceCommandDescription*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoiceCommandDescription::MergeFrom(const VoiceCommandDescription& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_has_command();
      command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
    }
    if (from.has_active()) {
      set_active(from.active());
    }
    if (from.has_confidence()) {
      set_confidence(from.confidence());
    }
    if (from.has_language()) {
      set_has_language();
      language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
    }
    if (from.has_triggeredat()) {
      set_has_triggeredat();
      triggeredat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.triggeredat_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VoiceCommandDescription::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceCommandDescription::CopyFrom(const VoiceCommandDescription& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceCommandDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void VoiceCommandDescription::Swap(VoiceCommandDescription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceCommandDescription::InternalSwap(VoiceCommandDescription* other) {
  command_.Swap(&other->command_);
  std::swap(active_, other->active_);
  std::swap(confidence_, other->confidence_);
  language_.Swap(&other->language_);
  triggeredat_.Swap(&other->triggeredat_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceCommandDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoiceCommandDescription_descriptor_;
  metadata.reflection = VoiceCommandDescription_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoiceCommandDescription

// required string command = 1;
 bool VoiceCommandDescription::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void VoiceCommandDescription::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
 void VoiceCommandDescription::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
 void VoiceCommandDescription::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
 const ::std::string& VoiceCommandDescription::command() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceCommandDescription.command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceCommandDescription.command)
}
 void VoiceCommandDescription::set_command(const char* value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.VoiceCommandDescription.command)
}
 void VoiceCommandDescription::set_command(const char* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.VoiceCommandDescription.command)
}
 ::std::string* VoiceCommandDescription::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceCommandDescription.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VoiceCommandDescription::release_command() {
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.VoiceCommandDescription.command)
}

// optional bool active = 2;
 bool VoiceCommandDescription::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void VoiceCommandDescription::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
 void VoiceCommandDescription::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
 void VoiceCommandDescription::clear_active() {
  active_ = false;
  clear_has_active();
}
 bool VoiceCommandDescription::active() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceCommandDescription.active)
  return active_;
}
 void VoiceCommandDescription::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceCommandDescription.active)
}

// optional int32 confidence = 3;
 bool VoiceCommandDescription::has_confidence() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void VoiceCommandDescription::set_has_confidence() {
  _has_bits_[0] |= 0x00000004u;
}
 void VoiceCommandDescription::clear_has_confidence() {
  _has_bits_[0] &= ~0x00000004u;
}
 void VoiceCommandDescription::clear_confidence() {
  confidence_ = 0;
  clear_has_confidence();
}
 ::google::protobuf::int32 VoiceCommandDescription::confidence() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceCommandDescription.confidence)
  return confidence_;
}
 void VoiceCommandDescription::set_confidence(::google::protobuf::int32 value) {
  set_has_confidence();
  confidence_ = value;
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceCommandDescription.confidence)
}

// optional string language = 4;
 bool VoiceCommandDescription::has_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void VoiceCommandDescription::set_has_language() {
  _has_bits_[0] |= 0x00000008u;
}
 void VoiceCommandDescription::clear_has_language() {
  _has_bits_[0] &= ~0x00000008u;
}
 void VoiceCommandDescription::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
 const ::std::string& VoiceCommandDescription::language() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceCommandDescription.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceCommandDescription.language)
}
 void VoiceCommandDescription::set_language(const char* value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.VoiceCommandDescription.language)
}
 void VoiceCommandDescription::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.VoiceCommandDescription.language)
}
 ::std::string* VoiceCommandDescription::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceCommandDescription.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VoiceCommandDescription::release_language() {
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.VoiceCommandDescription.language)
}

// optional string triggeredAt = 5;
 bool VoiceCommandDescription::has_triggeredat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void VoiceCommandDescription::set_has_triggeredat() {
  _has_bits_[0] |= 0x00000010u;
}
 void VoiceCommandDescription::clear_has_triggeredat() {
  _has_bits_[0] &= ~0x00000010u;
}
 void VoiceCommandDescription::clear_triggeredat() {
  triggeredat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_triggeredat();
}
 const ::std::string& VoiceCommandDescription::triggeredat() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceCommandDescription.triggeredAt)
  return triggeredat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_triggeredat(const ::std::string& value) {
  set_has_triggeredat();
  triggeredat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceCommandDescription.triggeredAt)
}
 void VoiceCommandDescription::set_triggeredat(const char* value) {
  set_has_triggeredat();
  triggeredat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.VoiceCommandDescription.triggeredAt)
}
 void VoiceCommandDescription::set_triggeredat(const char* value, size_t size) {
  set_has_triggeredat();
  triggeredat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.VoiceCommandDescription.triggeredAt)
}
 ::std::string* VoiceCommandDescription::mutable_triggeredat() {
  set_has_triggeredat();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceCommandDescription.triggeredAt)
  return triggeredat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VoiceCommandDescription::release_triggeredat() {
  clear_has_triggeredat();
  return triggeredat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceCommandDescription::set_allocated_triggeredat(::std::string* triggeredat) {
  if (triggeredat != NULL) {
    set_has_triggeredat();
  } else {
    clear_has_triggeredat();
  }
  triggeredat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), triggeredat);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.VoiceCommandDescription.triggeredAt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int VoiceRecognitionModule::kNameFieldNumber;
const int VoiceRecognitionModule::kParamsFieldNumber;
const int VoiceRecognitionModule::kCommandsFieldNumber;
#endif  // !_MSC_VER

VoiceRecognitionModule::VoiceRecognitionModule()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:experimot.msgs.VoiceRecognitionModule)
}

void VoiceRecognitionModule::InitAsDefaultInstance() {
}

VoiceRecognitionModule::VoiceRecognitionModule(const VoiceRecognitionModule& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:experimot.msgs.VoiceRecognitionModule)
}

void VoiceRecognitionModule::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoiceRecognitionModule::~VoiceRecognitionModule() {
  // @@protoc_insertion_point(destructor:experimot.msgs.VoiceRecognitionModule)
  SharedDtor();
}

void VoiceRecognitionModule::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void VoiceRecognitionModule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceRecognitionModule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceRecognitionModule_descriptor_;
}

const VoiceRecognitionModule& VoiceRecognitionModule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_voice_2eproto();
  return *default_instance_;
}

VoiceRecognitionModule* VoiceRecognitionModule::default_instance_ = NULL;

VoiceRecognitionModule* VoiceRecognitionModule::New(::google::protobuf::Arena* arena) const {
  VoiceRecognitionModule* n = new VoiceRecognitionModule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceRecognitionModule::Clear() {
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  params_.Clear();
  commands_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VoiceRecognitionModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:experimot.msgs.VoiceRecognitionModule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "experimot.msgs.VoiceRecognitionModule.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        break;
      }

      // repeated .experimot.msgs.Param params = 2;
      case 2: {
        if (tag == 18) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_params;
        if (input->ExpectTag(26)) goto parse_commands;
        break;
      }

      // repeated .experimot.msgs.VoiceCommandDescription commands = 3;
      case 3: {
        if (tag == 26) {
         parse_commands:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_commands()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_commands;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:experimot.msgs.VoiceRecognitionModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:experimot.msgs.VoiceRecognitionModule)
  return false;
#undef DO_
}

void VoiceRecognitionModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:experimot.msgs.VoiceRecognitionModule)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceRecognitionModule.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .experimot.msgs.Param params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(i), output);
  }

  // repeated .experimot.msgs.VoiceCommandDescription commands = 3;
  for (unsigned int i = 0, n = this->commands_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->commands(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:experimot.msgs.VoiceRecognitionModule)
}

::google::protobuf::uint8* VoiceRecognitionModule::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:experimot.msgs.VoiceRecognitionModule)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "experimot.msgs.VoiceRecognitionModule.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .experimot.msgs.Param params = 2;
  for (unsigned int i = 0, n = this->params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->params(i), target);
  }

  // repeated .experimot.msgs.VoiceCommandDescription commands = 3;
  for (unsigned int i = 0, n = this->commands_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->commands(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:experimot.msgs.VoiceRecognitionModule)
  return target;
}

int VoiceRecognitionModule::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .experimot.msgs.Param params = 2;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->params(i));
  }

  // repeated .experimot.msgs.VoiceCommandDescription commands = 3;
  total_size += 1 * this->commands_size();
  for (int i = 0; i < this->commands_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->commands(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceRecognitionModule::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VoiceRecognitionModule* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoiceRecognitionModule*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoiceRecognitionModule::MergeFrom(const VoiceRecognitionModule& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  params_.MergeFrom(from.params_);
  commands_.MergeFrom(from.commands_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VoiceRecognitionModule::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceRecognitionModule::CopyFrom(const VoiceRecognitionModule& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceRecognitionModule::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->params())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->commands())) return false;
  return true;
}

void VoiceRecognitionModule::Swap(VoiceRecognitionModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceRecognitionModule::InternalSwap(VoiceRecognitionModule* other) {
  name_.Swap(&other->name_);
  params_.UnsafeArenaSwap(&other->params_);
  commands_.UnsafeArenaSwap(&other->commands_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceRecognitionModule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoiceRecognitionModule_descriptor_;
  metadata.reflection = VoiceRecognitionModule_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoiceRecognitionModule

// required string name = 1;
 bool VoiceRecognitionModule::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void VoiceRecognitionModule::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void VoiceRecognitionModule::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void VoiceRecognitionModule::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& VoiceRecognitionModule::name() const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceRecognitionModule.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceRecognitionModule::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:experimot.msgs.VoiceRecognitionModule.name)
}
 void VoiceRecognitionModule::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:experimot.msgs.VoiceRecognitionModule.name)
}
 void VoiceRecognitionModule::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:experimot.msgs.VoiceRecognitionModule.name)
}
 ::std::string* VoiceRecognitionModule::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceRecognitionModule.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* VoiceRecognitionModule::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void VoiceRecognitionModule::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:experimot.msgs.VoiceRecognitionModule.name)
}

// repeated .experimot.msgs.Param params = 2;
 int VoiceRecognitionModule::params_size() const {
  return params_.size();
}
 void VoiceRecognitionModule::clear_params() {
  params_.Clear();
}
 const ::experimot::msgs::Param& VoiceRecognitionModule::params(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceRecognitionModule.params)
  return params_.Get(index);
}
 ::experimot::msgs::Param* VoiceRecognitionModule::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceRecognitionModule.params)
  return params_.Mutable(index);
}
 ::experimot::msgs::Param* VoiceRecognitionModule::add_params() {
  // @@protoc_insertion_point(field_add:experimot.msgs.VoiceRecognitionModule.params)
  return params_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >&
VoiceRecognitionModule::params() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.VoiceRecognitionModule.params)
  return params_;
}
 ::google::protobuf::RepeatedPtrField< ::experimot::msgs::Param >*
VoiceRecognitionModule::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.VoiceRecognitionModule.params)
  return &params_;
}

// repeated .experimot.msgs.VoiceCommandDescription commands = 3;
 int VoiceRecognitionModule::commands_size() const {
  return commands_.size();
}
 void VoiceRecognitionModule::clear_commands() {
  commands_.Clear();
}
 const ::experimot::msgs::VoiceCommandDescription& VoiceRecognitionModule::commands(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceRecognitionModule.commands)
  return commands_.Get(index);
}
 ::experimot::msgs::VoiceCommandDescription* VoiceRecognitionModule::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceRecognitionModule.commands)
  return commands_.Mutable(index);
}
 ::experimot::msgs::VoiceCommandDescription* VoiceRecognitionModule::add_commands() {
  // @@protoc_insertion_point(field_add:experimot.msgs.VoiceRecognitionModule.commands)
  return commands_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::VoiceCommandDescription >&
VoiceRecognitionModule::commands() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.VoiceRecognitionModule.commands)
  return commands_;
}
 ::google::protobuf::RepeatedPtrField< ::experimot::msgs::VoiceCommandDescription >*
VoiceRecognitionModule::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.VoiceRecognitionModule.commands)
  return &commands_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int VoiceRecognitionModules::kModulesFieldNumber;
#endif  // !_MSC_VER

VoiceRecognitionModules::VoiceRecognitionModules()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:experimot.msgs.VoiceRecognitionModules)
}

void VoiceRecognitionModules::InitAsDefaultInstance() {
}

VoiceRecognitionModules::VoiceRecognitionModules(const VoiceRecognitionModules& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:experimot.msgs.VoiceRecognitionModules)
}

void VoiceRecognitionModules::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VoiceRecognitionModules::~VoiceRecognitionModules() {
  // @@protoc_insertion_point(destructor:experimot.msgs.VoiceRecognitionModules)
  SharedDtor();
}

void VoiceRecognitionModules::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VoiceRecognitionModules::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceRecognitionModules::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VoiceRecognitionModules_descriptor_;
}

const VoiceRecognitionModules& VoiceRecognitionModules::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_voice_2eproto();
  return *default_instance_;
}

VoiceRecognitionModules* VoiceRecognitionModules::default_instance_ = NULL;

VoiceRecognitionModules* VoiceRecognitionModules::New(::google::protobuf::Arena* arena) const {
  VoiceRecognitionModules* n = new VoiceRecognitionModules;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceRecognitionModules::Clear() {
  modules_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VoiceRecognitionModules::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:experimot.msgs.VoiceRecognitionModules)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .experimot.msgs.VoiceRecognitionModule modules = 1;
      case 1: {
        if (tag == 10) {
         parse_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_modules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_modules;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:experimot.msgs.VoiceRecognitionModules)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:experimot.msgs.VoiceRecognitionModules)
  return false;
#undef DO_
}

void VoiceRecognitionModules::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:experimot.msgs.VoiceRecognitionModules)
  // repeated .experimot.msgs.VoiceRecognitionModule modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->modules(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:experimot.msgs.VoiceRecognitionModules)
}

::google::protobuf::uint8* VoiceRecognitionModules::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:experimot.msgs.VoiceRecognitionModules)
  // repeated .experimot.msgs.VoiceRecognitionModule modules = 1;
  for (unsigned int i = 0, n = this->modules_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->modules(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:experimot.msgs.VoiceRecognitionModules)
  return target;
}

int VoiceRecognitionModules::ByteSize() const {
  int total_size = 0;

  // repeated .experimot.msgs.VoiceRecognitionModule modules = 1;
  total_size += 1 * this->modules_size();
  for (int i = 0; i < this->modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modules(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceRecognitionModules::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const VoiceRecognitionModules* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VoiceRecognitionModules*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VoiceRecognitionModules::MergeFrom(const VoiceRecognitionModules& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  modules_.MergeFrom(from.modules_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VoiceRecognitionModules::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceRecognitionModules::CopyFrom(const VoiceRecognitionModules& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceRecognitionModules::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->modules())) return false;
  return true;
}

void VoiceRecognitionModules::Swap(VoiceRecognitionModules* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceRecognitionModules::InternalSwap(VoiceRecognitionModules* other) {
  modules_.UnsafeArenaSwap(&other->modules_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceRecognitionModules::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VoiceRecognitionModules_descriptor_;
  metadata.reflection = VoiceRecognitionModules_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VoiceRecognitionModules

// repeated .experimot.msgs.VoiceRecognitionModule modules = 1;
 int VoiceRecognitionModules::modules_size() const {
  return modules_.size();
}
 void VoiceRecognitionModules::clear_modules() {
  modules_.Clear();
}
 const ::experimot::msgs::VoiceRecognitionModule& VoiceRecognitionModules::modules(int index) const {
  // @@protoc_insertion_point(field_get:experimot.msgs.VoiceRecognitionModules.modules)
  return modules_.Get(index);
}
 ::experimot::msgs::VoiceRecognitionModule* VoiceRecognitionModules::mutable_modules(int index) {
  // @@protoc_insertion_point(field_mutable:experimot.msgs.VoiceRecognitionModules.modules)
  return modules_.Mutable(index);
}
 ::experimot::msgs::VoiceRecognitionModule* VoiceRecognitionModules::add_modules() {
  // @@protoc_insertion_point(field_add:experimot.msgs.VoiceRecognitionModules.modules)
  return modules_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::experimot::msgs::VoiceRecognitionModule >&
VoiceRecognitionModules::modules() const {
  // @@protoc_insertion_point(field_list:experimot.msgs.VoiceRecognitionModules.modules)
  return modules_;
}
 ::google::protobuf::RepeatedPtrField< ::experimot::msgs::VoiceRecognitionModule >*
VoiceRecognitionModules::mutable_modules() {
  // @@protoc_insertion_point(field_mutable_list:experimot.msgs.VoiceRecognitionModules.modules)
  return &modules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace experimot

EX_REGISTER_STATIC_MSG("experimot.msgs.VoiceCommandDescription", VoiceCommandDescription)
// @@protoc_insertion_point(global_scope)
