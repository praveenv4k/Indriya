// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_stats.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "world_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* WorldStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldStatistics_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_world_5fstats_2eproto() {
  protobuf_AddDesc_world_5fstats_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "world_stats.proto");
  GOOGLE_CHECK(file != NULL);
  WorldStatistics_descriptor_ = file->message_type(0);
  static const int WorldStatistics_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, sim_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, pause_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, real_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, paused_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, iterations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, model_count_),
  };
  WorldStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorldStatistics_descriptor_,
      WorldStatistics::default_instance_,
      WorldStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, _has_bits_[0]),
      -1,
      -1,
      sizeof(WorldStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldStatistics, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_world_5fstats_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorldStatistics_descriptor_, &WorldStatistics::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_world_5fstats_2eproto() {
  delete WorldStatistics::default_instance_;
  delete WorldStatistics_reflection_;
}

void protobuf_AddDesc_world_5fstats_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_time_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021world_stats.proto\022\021Indriya.Core.Msgs\032\n"
    "time.proto\"\316\001\n\017WorldStatistics\022)\n\010sim_ti"
    "me\030\002 \002(\0132\027.Indriya.Core.Msgs.Time\022+\n\npau"
    "se_time\030\003 \002(\0132\027.Indriya.Core.Msgs.Time\022*"
    "\n\treal_time\030\004 \002(\0132\027.Indriya.Core.Msgs.Ti"
    "me\022\016\n\006paused\030\005 \002(\010\022\022\n\niterations\030\006 \002(\004\022\023"
    "\n\013model_count\030\007 \001(\005", 259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "world_stats.proto", &protobuf_RegisterTypes);
  WorldStatistics::default_instance_ = new WorldStatistics();
  WorldStatistics::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_world_5fstats_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_world_5fstats_2eproto {
  StaticDescriptorInitializer_world_5fstats_2eproto() {
    protobuf_AddDesc_world_5fstats_2eproto();
  }
} static_descriptor_initializer_world_5fstats_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int WorldStatistics::kSimTimeFieldNumber;
const int WorldStatistics::kPauseTimeFieldNumber;
const int WorldStatistics::kRealTimeFieldNumber;
const int WorldStatistics::kPausedFieldNumber;
const int WorldStatistics::kIterationsFieldNumber;
const int WorldStatistics::kModelCountFieldNumber;
#endif  // !_MSC_VER

WorldStatistics::WorldStatistics()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.WorldStatistics)
}

void WorldStatistics::InitAsDefaultInstance() {
  sim_time_ = const_cast< ::Indriya::Core::Msgs::Time*>(&::Indriya::Core::Msgs::Time::default_instance());
  pause_time_ = const_cast< ::Indriya::Core::Msgs::Time*>(&::Indriya::Core::Msgs::Time::default_instance());
  real_time_ = const_cast< ::Indriya::Core::Msgs::Time*>(&::Indriya::Core::Msgs::Time::default_instance());
}

WorldStatistics::WorldStatistics(const WorldStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.WorldStatistics)
}

void WorldStatistics::SharedCtor() {
  _cached_size_ = 0;
  sim_time_ = NULL;
  pause_time_ = NULL;
  real_time_ = NULL;
  paused_ = false;
  iterations_ = GOOGLE_ULONGLONG(0);
  model_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WorldStatistics::~WorldStatistics() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.WorldStatistics)
  SharedDtor();
}

void WorldStatistics::SharedDtor() {
  if (this != default_instance_) {
    delete sim_time_;
    delete pause_time_;
    delete real_time_;
  }
}

void WorldStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldStatistics_descriptor_;
}

const WorldStatistics& WorldStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5fstats_2eproto();
  return *default_instance_;
}

WorldStatistics* WorldStatistics::default_instance_ = NULL;

WorldStatistics* WorldStatistics::New(::google::protobuf::Arena* arena) const {
  WorldStatistics* n = new WorldStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldStatistics::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WorldStatistics*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(iterations_, model_count_);
    if (has_sim_time()) {
      if (sim_time_ != NULL) sim_time_->::Indriya::Core::Msgs::Time::Clear();
    }
    if (has_pause_time()) {
      if (pause_time_ != NULL) pause_time_->::Indriya::Core::Msgs::Time::Clear();
    }
    if (has_real_time()) {
      if (real_time_ != NULL) real_time_->::Indriya::Core::Msgs::Time::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorldStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.WorldStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Indriya.Core.Msgs.Time sim_time = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sim_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pause_time;
        break;
      }

      // required .Indriya.Core.Msgs.Time pause_time = 3;
      case 3: {
        if (tag == 26) {
         parse_pause_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pause_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_real_time;
        break;
      }

      // required .Indriya.Core.Msgs.Time real_time = 4;
      case 4: {
        if (tag == 34) {
         parse_real_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_real_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_paused;
        break;
      }

      // required bool paused = 5;
      case 5: {
        if (tag == 40) {
         parse_paused:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paused_)));
          set_has_paused();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_iterations;
        break;
      }

      // required uint64 iterations = 6;
      case 6: {
        if (tag == 48) {
         parse_iterations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iterations_)));
          set_has_iterations();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_model_count;
        break;
      }

      // optional int32 model_count = 7;
      case 7: {
        if (tag == 56) {
         parse_model_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_count_)));
          set_has_model_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.WorldStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.WorldStatistics)
  return false;
#undef DO_
}

void WorldStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.WorldStatistics)
  // required .Indriya.Core.Msgs.Time sim_time = 2;
  if (has_sim_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sim_time_, output);
  }

  // required .Indriya.Core.Msgs.Time pause_time = 3;
  if (has_pause_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pause_time_, output);
  }

  // required .Indriya.Core.Msgs.Time real_time = 4;
  if (has_real_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->real_time_, output);
  }

  // required bool paused = 5;
  if (has_paused()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->paused(), output);
  }

  // required uint64 iterations = 6;
  if (has_iterations()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->iterations(), output);
  }

  // optional int32 model_count = 7;
  if (has_model_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->model_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.WorldStatistics)
}

::google::protobuf::uint8* WorldStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.WorldStatistics)
  // required .Indriya.Core.Msgs.Time sim_time = 2;
  if (has_sim_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->sim_time_, target);
  }

  // required .Indriya.Core.Msgs.Time pause_time = 3;
  if (has_pause_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pause_time_, target);
  }

  // required .Indriya.Core.Msgs.Time real_time = 4;
  if (has_real_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->real_time_, target);
  }

  // required bool paused = 5;
  if (has_paused()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->paused(), target);
  }

  // required uint64 iterations = 6;
  if (has_iterations()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->iterations(), target);
  }

  // optional int32 model_count = 7;
  if (has_model_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->model_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.WorldStatistics)
  return target;
}

int WorldStatistics::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_sim_time()) {
    // required .Indriya.Core.Msgs.Time sim_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sim_time_);
  }

  if (has_pause_time()) {
    // required .Indriya.Core.Msgs.Time pause_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pause_time_);
  }

  if (has_real_time()) {
    // required .Indriya.Core.Msgs.Time real_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->real_time_);
  }

  if (has_paused()) {
    // required bool paused = 5;
    total_size += 1 + 1;
  }

  if (has_iterations()) {
    // required uint64 iterations = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->iterations());
  }

  return total_size;
}
int WorldStatistics::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .Indriya.Core.Msgs.Time sim_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sim_time_);

    // required .Indriya.Core.Msgs.Time pause_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pause_time_);

    // required .Indriya.Core.Msgs.Time real_time = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->real_time_);

    // required bool paused = 5;
    total_size += 1 + 1;

    // required uint64 iterations = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->iterations());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 model_count = 7;
  if (has_model_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model_count());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorldStatistics* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WorldStatistics*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WorldStatistics::MergeFrom(const WorldStatistics& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sim_time()) {
      mutable_sim_time()->::Indriya::Core::Msgs::Time::MergeFrom(from.sim_time());
    }
    if (from.has_pause_time()) {
      mutable_pause_time()->::Indriya::Core::Msgs::Time::MergeFrom(from.pause_time());
    }
    if (from.has_real_time()) {
      mutable_real_time()->::Indriya::Core::Msgs::Time::MergeFrom(from.real_time());
    }
    if (from.has_paused()) {
      set_paused(from.paused());
    }
    if (from.has_iterations()) {
      set_iterations(from.iterations());
    }
    if (from.has_model_count()) {
      set_model_count(from.model_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void WorldStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldStatistics::CopyFrom(const WorldStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldStatistics::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_sim_time()) {
    if (!this->sim_time_->IsInitialized()) return false;
  }
  if (has_pause_time()) {
    if (!this->pause_time_->IsInitialized()) return false;
  }
  if (has_real_time()) {
    if (!this->real_time_->IsInitialized()) return false;
  }
  return true;
}

void WorldStatistics::Swap(WorldStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldStatistics::InternalSwap(WorldStatistics* other) {
  std::swap(sim_time_, other->sim_time_);
  std::swap(pause_time_, other->pause_time_);
  std::swap(real_time_, other->real_time_);
  std::swap(paused_, other->paused_);
  std::swap(iterations_, other->iterations_);
  std::swap(model_count_, other->model_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldStatistics_descriptor_;
  metadata.reflection = WorldStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldStatistics

// required .Indriya.Core.Msgs.Time sim_time = 2;
 bool WorldStatistics::has_sim_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void WorldStatistics::set_has_sim_time() {
  _has_bits_[0] |= 0x00000001u;
}
 void WorldStatistics::clear_has_sim_time() {
  _has_bits_[0] &= ~0x00000001u;
}
 void WorldStatistics::clear_sim_time() {
  if (sim_time_ != NULL) sim_time_->::Indriya::Core::Msgs::Time::Clear();
  clear_has_sim_time();
}
 const ::Indriya::Core::Msgs::Time& WorldStatistics::sim_time() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.sim_time)
  return sim_time_ != NULL ? *sim_time_ : *default_instance_->sim_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::mutable_sim_time() {
  set_has_sim_time();
  if (sim_time_ == NULL) {
    sim_time_ = new ::Indriya::Core::Msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.WorldStatistics.sim_time)
  return sim_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::release_sim_time() {
  clear_has_sim_time();
  ::Indriya::Core::Msgs::Time* temp = sim_time_;
  sim_time_ = NULL;
  return temp;
}
 void WorldStatistics::set_allocated_sim_time(::Indriya::Core::Msgs::Time* sim_time) {
  delete sim_time_;
  sim_time_ = sim_time;
  if (sim_time) {
    set_has_sim_time();
  } else {
    clear_has_sim_time();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.WorldStatistics.sim_time)
}

// required .Indriya.Core.Msgs.Time pause_time = 3;
 bool WorldStatistics::has_pause_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void WorldStatistics::set_has_pause_time() {
  _has_bits_[0] |= 0x00000002u;
}
 void WorldStatistics::clear_has_pause_time() {
  _has_bits_[0] &= ~0x00000002u;
}
 void WorldStatistics::clear_pause_time() {
  if (pause_time_ != NULL) pause_time_->::Indriya::Core::Msgs::Time::Clear();
  clear_has_pause_time();
}
 const ::Indriya::Core::Msgs::Time& WorldStatistics::pause_time() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.pause_time)
  return pause_time_ != NULL ? *pause_time_ : *default_instance_->pause_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::mutable_pause_time() {
  set_has_pause_time();
  if (pause_time_ == NULL) {
    pause_time_ = new ::Indriya::Core::Msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.WorldStatistics.pause_time)
  return pause_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::release_pause_time() {
  clear_has_pause_time();
  ::Indriya::Core::Msgs::Time* temp = pause_time_;
  pause_time_ = NULL;
  return temp;
}
 void WorldStatistics::set_allocated_pause_time(::Indriya::Core::Msgs::Time* pause_time) {
  delete pause_time_;
  pause_time_ = pause_time;
  if (pause_time) {
    set_has_pause_time();
  } else {
    clear_has_pause_time();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.WorldStatistics.pause_time)
}

// required .Indriya.Core.Msgs.Time real_time = 4;
 bool WorldStatistics::has_real_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void WorldStatistics::set_has_real_time() {
  _has_bits_[0] |= 0x00000004u;
}
 void WorldStatistics::clear_has_real_time() {
  _has_bits_[0] &= ~0x00000004u;
}
 void WorldStatistics::clear_real_time() {
  if (real_time_ != NULL) real_time_->::Indriya::Core::Msgs::Time::Clear();
  clear_has_real_time();
}
 const ::Indriya::Core::Msgs::Time& WorldStatistics::real_time() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.real_time)
  return real_time_ != NULL ? *real_time_ : *default_instance_->real_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::mutable_real_time() {
  set_has_real_time();
  if (real_time_ == NULL) {
    real_time_ = new ::Indriya::Core::Msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.WorldStatistics.real_time)
  return real_time_;
}
 ::Indriya::Core::Msgs::Time* WorldStatistics::release_real_time() {
  clear_has_real_time();
  ::Indriya::Core::Msgs::Time* temp = real_time_;
  real_time_ = NULL;
  return temp;
}
 void WorldStatistics::set_allocated_real_time(::Indriya::Core::Msgs::Time* real_time) {
  delete real_time_;
  real_time_ = real_time;
  if (real_time) {
    set_has_real_time();
  } else {
    clear_has_real_time();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.WorldStatistics.real_time)
}

// required bool paused = 5;
 bool WorldStatistics::has_paused() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void WorldStatistics::set_has_paused() {
  _has_bits_[0] |= 0x00000008u;
}
 void WorldStatistics::clear_has_paused() {
  _has_bits_[0] &= ~0x00000008u;
}
 void WorldStatistics::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
 bool WorldStatistics::paused() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.paused)
  return paused_;
}
 void WorldStatistics::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.WorldStatistics.paused)
}

// required uint64 iterations = 6;
 bool WorldStatistics::has_iterations() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void WorldStatistics::set_has_iterations() {
  _has_bits_[0] |= 0x00000010u;
}
 void WorldStatistics::clear_has_iterations() {
  _has_bits_[0] &= ~0x00000010u;
}
 void WorldStatistics::clear_iterations() {
  iterations_ = GOOGLE_ULONGLONG(0);
  clear_has_iterations();
}
 ::google::protobuf::uint64 WorldStatistics::iterations() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.iterations)
  return iterations_;
}
 void WorldStatistics::set_iterations(::google::protobuf::uint64 value) {
  set_has_iterations();
  iterations_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.WorldStatistics.iterations)
}

// optional int32 model_count = 7;
 bool WorldStatistics::has_model_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void WorldStatistics::set_has_model_count() {
  _has_bits_[0] |= 0x00000020u;
}
 void WorldStatistics::clear_has_model_count() {
  _has_bits_[0] &= ~0x00000020u;
}
 void WorldStatistics::clear_model_count() {
  model_count_ = 0;
  clear_has_model_count();
}
 ::google::protobuf::int32 WorldStatistics::model_count() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.WorldStatistics.model_count)
  return model_count_;
}
 void WorldStatistics::set_model_count(::google::protobuf::int32 value) {
  set_has_model_count();
  model_count_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.WorldStatistics.model_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.WorldStatistics", WorldStatistics)
// @@protoc_insertion_point(global_scope)
