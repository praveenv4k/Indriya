//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/kinect_body.proto
// Note: requires additional types generated from: vector2d.proto
// Note: requires additional types generated from: kinect_joint.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"KinectBody")]
  public partial class KinectBody : global::ProtoBuf.IExtensible
  {
    public KinectBody() {}
    
    private int _TrackingId;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"TrackingId", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int TrackingId
    {
      get { return _TrackingId; }
      set { _TrackingId = value; }
    }
    private bool _IsTracked;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"IsTracked", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsTracked
    {
      get { return _IsTracked; }
      set { _IsTracked = value; }
    }
    private int _JointCount;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"JointCount", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int JointCount
    {
      get { return _JointCount; }
      set { _JointCount = value; }
    }
    private readonly global::System.Collections.Generic.List<experimot.msgs.KinectJoint> _Joints = new global::System.Collections.Generic.List<experimot.msgs.KinectJoint>();
    [global::ProtoBuf.ProtoMember(4, Name=@"Joints", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<experimot.msgs.KinectJoint> Joints
    {
      get { return _Joints; }
    }
  
    private experimot.msgs.KinectBody.FrameEdges _ClippedEdges = experimot.msgs.KinectBody.FrameEdges.None;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"ClippedEdges", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.KinectBody.FrameEdges.None)]
    public experimot.msgs.KinectBody.FrameEdges ClippedEdges
    {
      get { return _ClippedEdges; }
      set { _ClippedEdges = value; }
    }
    private experimot.msgs.KinectBody.TrackingConfidence _HandLeftConfidence = experimot.msgs.KinectBody.TrackingConfidence.Low;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"HandLeftConfidence", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.KinectBody.TrackingConfidence.Low)]
    public experimot.msgs.KinectBody.TrackingConfidence HandLeftConfidence
    {
      get { return _HandLeftConfidence; }
      set { _HandLeftConfidence = value; }
    }
    private experimot.msgs.KinectBody.HandState _HandLeftState = experimot.msgs.KinectBody.HandState.HS_Unknown;
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"HandLeftState", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.KinectBody.HandState.HS_Unknown)]
    public experimot.msgs.KinectBody.HandState HandLeftState
    {
      get { return _HandLeftState; }
      set { _HandLeftState = value; }
    }
    private experimot.msgs.KinectBody.TrackingConfidence _HandRightConfidence = experimot.msgs.KinectBody.TrackingConfidence.Low;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"HandRightConfidence", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.KinectBody.TrackingConfidence.Low)]
    public experimot.msgs.KinectBody.TrackingConfidence HandRightConfidence
    {
      get { return _HandRightConfidence; }
      set { _HandRightConfidence = value; }
    }
    private experimot.msgs.KinectBody.HandState _HandRightState = experimot.msgs.KinectBody.HandState.HS_Unknown;
    [global::ProtoBuf.ProtoMember(9, IsRequired = false, Name=@"HandRightState", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.KinectBody.HandState.HS_Unknown)]
    public experimot.msgs.KinectBody.HandState HandRightState
    {
      get { return _HandRightState; }
      set { _HandRightState = value; }
    }
    private bool _IsRestricted = default(bool);
    [global::ProtoBuf.ProtoMember(10, IsRequired = false, Name=@"IsRestricted", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool IsRestricted
    {
      get { return _IsRestricted; }
      set { _IsRestricted = value; }
    }
    private experimot.msgs.Vector2d _Lean = null;
    [global::ProtoBuf.ProtoMember(11, IsRequired = false, Name=@"Lean", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Vector2d Lean
    {
      get { return _Lean; }
      set { _Lean = value; }
    }
    private int _LeanTrackingState = default(int);
    [global::ProtoBuf.ProtoMember(12, IsRequired = false, Name=@"LeanTrackingState", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int LeanTrackingState
    {
      get { return _LeanTrackingState; }
      set { _LeanTrackingState = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"Activity")]
    public enum Activity
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"EyeLeftClosed", Value=0)]
      EyeLeftClosed = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"EyeRightClosed", Value=1)]
      EyeRightClosed = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"MouthOpen", Value=2)]
      MouthOpen = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"MouthMoved", Value=3)]
      MouthMoved = 3,
            
      [global::ProtoBuf.ProtoEnum(Name=@"LookingAway", Value=4)]
      LookingAway = 4
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"Appearance")]
    public enum Appearance
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"WearingGlasses", Value=0)]
      WearingGlasses = 0
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"DetectionResult")]
    public enum DetectionResult
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Unknown", Value=0)]
      Unknown = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"No", Value=1)]
      No = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Maybe", Value=2)]
      Maybe = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Yes", Value=3)]
      Yes = 3
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"FrameEdges")]
    public enum FrameEdges
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"None", Value=0)]
      None = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Right", Value=1)]
      Right = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Left", Value=2)]
      Left = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Top", Value=4)]
      Top = 4,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Bottom", Value=8)]
      Bottom = 8
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"Expression")]
    public enum Expression
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Neutral", Value=0)]
      Neutral = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Happy", Value=1)]
      Happy = 1
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"TrackingConfidence")]
    public enum TrackingConfidence
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Low", Value=0)]
      Low = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"High", Value=1)]
      High = 1
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"HandState")]
    public enum HandState
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"HS_Unknown", Value=0)]
      HS_Unknown = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HS_NotTracked", Value=1)]
      HS_NotTracked = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HS_Open", Value=2)]
      HS_Open = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HS_Closed", Value=3)]
      HS_Closed = 3,
            
      [global::ProtoBuf.ProtoEnum(Name=@"HS_Lasso", Value=4)]
      HS_Lasso = 4
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"KinectBodies")]
  public partial class KinectBodies : global::ProtoBuf.IExtensible
  {
    public KinectBodies() {}
    
    private readonly global::System.Collections.Generic.List<experimot.msgs.KinectBody> _Body = new global::System.Collections.Generic.List<experimot.msgs.KinectBody>();
    [global::ProtoBuf.ProtoMember(1, Name=@"Body", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<experimot.msgs.KinectBody> Body
    {
      get { return _Body; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}