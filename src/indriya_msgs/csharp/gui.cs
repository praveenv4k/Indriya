//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/gui.proto
// Note: requires additional types generated from: gui_camera.proto
// Note: requires additional types generated from: plugin.proto
namespace Indriya.Core.Msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"GUI")]
  public partial class GUI : global::ProtoBuf.IExtensible
  {
    public GUI() {}
    
    private bool _fullscreen = default(bool);
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"fullscreen", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool fullscreen
    {
      get { return _fullscreen; }
      set { _fullscreen = value; }
    }
    private Indriya.Core.Msgs.GUICamera _camera = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"camera", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Indriya.Core.Msgs.GUICamera camera
    {
      get { return _camera; }
      set { _camera = value; }
    }
    private readonly global::System.Collections.Generic.List<Indriya.Core.Msgs.Plugin> _plugin = new global::System.Collections.Generic.List<Indriya.Core.Msgs.Plugin>();
    [global::ProtoBuf.ProtoMember(3, Name=@"plugin", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Indriya.Core.Msgs.Plugin> plugin
    {
      get { return _plugin; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}