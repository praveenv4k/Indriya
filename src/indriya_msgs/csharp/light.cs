//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/light.proto
// Note: requires additional types generated from: pose.proto
// Note: requires additional types generated from: vector3d.proto
// Note: requires additional types generated from: color.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Light")]
  public partial class Light : global::ProtoBuf.IExtensible
  {
    public Light() {}
    
    private string _name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name
    {
      get { return _name; }
      set { _name = value; }
    }
    private experimot.msgs.Light.LightType _type = experimot.msgs.Light.LightType.POINT;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.Light.LightType.POINT)]
    public experimot.msgs.Light.LightType type
    {
      get { return _type; }
      set { _type = value; }
    }
    private experimot.msgs.Pose _pose = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"pose", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Pose pose
    {
      get { return _pose; }
      set { _pose = value; }
    }
    private experimot.msgs.Color _diffuse = null;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"diffuse", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Color diffuse
    {
      get { return _diffuse; }
      set { _diffuse = value; }
    }
    private experimot.msgs.Color _specular = null;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"specular", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Color specular
    {
      get { return _specular; }
      set { _specular = value; }
    }
    private float _attenuation_constant = default(float);
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"attenuation_constant", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float attenuation_constant
    {
      get { return _attenuation_constant; }
      set { _attenuation_constant = value; }
    }
    private float _attenuation_linear = default(float);
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"attenuation_linear", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float attenuation_linear
    {
      get { return _attenuation_linear; }
      set { _attenuation_linear = value; }
    }
    private float _attenuation_quadratic = default(float);
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"attenuation_quadratic", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float attenuation_quadratic
    {
      get { return _attenuation_quadratic; }
      set { _attenuation_quadratic = value; }
    }
    private experimot.msgs.Vector3d _direction = null;
    [global::ProtoBuf.ProtoMember(9, IsRequired = false, Name=@"direction", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Vector3d direction
    {
      get { return _direction; }
      set { _direction = value; }
    }
    private float _range = default(float);
    [global::ProtoBuf.ProtoMember(10, IsRequired = false, Name=@"range", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float range
    {
      get { return _range; }
      set { _range = value; }
    }
    private bool _cast_shadows = default(bool);
    [global::ProtoBuf.ProtoMember(11, IsRequired = false, Name=@"cast_shadows", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool cast_shadows
    {
      get { return _cast_shadows; }
      set { _cast_shadows = value; }
    }
    private float _spot_inner_angle = default(float);
    [global::ProtoBuf.ProtoMember(12, IsRequired = false, Name=@"spot_inner_angle", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float spot_inner_angle
    {
      get { return _spot_inner_angle; }
      set { _spot_inner_angle = value; }
    }
    private float _spot_outer_angle = default(float);
    [global::ProtoBuf.ProtoMember(13, IsRequired = false, Name=@"spot_outer_angle", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float spot_outer_angle
    {
      get { return _spot_outer_angle; }
      set { _spot_outer_angle = value; }
    }
    private float _spot_falloff = default(float);
    [global::ProtoBuf.ProtoMember(14, IsRequired = false, Name=@"spot_falloff", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue(default(float))]
    public float spot_falloff
    {
      get { return _spot_falloff; }
      set { _spot_falloff = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"LightType")]
    public enum LightType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"POINT", Value=1)]
      POINT = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"SPOT", Value=2)]
      SPOT = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"DIRECTIONAL", Value=3)]
      DIRECTIONAL = 3
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}