//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/shadows.proto
// Note: requires additional types generated from: color.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Shadows")]
  public partial class Shadows : global::ProtoBuf.IExtensible
  {
    public Shadows() {}
    
    private experimot.msgs.Shadows.ShadowType _type = experimot.msgs.Shadows.ShadowType.STENCIL_ADDITIVE;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(experimot.msgs.Shadows.ShadowType.STENCIL_ADDITIVE)]
    public experimot.msgs.Shadows.ShadowType type
    {
      get { return _type; }
      set { _type = value; }
    }
    private experimot.msgs.Color _color = null;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"color", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Color color
    {
      get { return _color; }
      set { _color = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"ShadowType")]
    public enum ShadowType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"STENCIL_ADDITIVE", Value=1)]
      STENCIL_ADDITIVE = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"STENCIL_MODULATIVE", Value=2)]
      STENCIL_MODULATIVE = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"TEXTURE_ADDITIVE", Value=3)]
      TEXTURE_ADDITIVE = 3,
            
      [global::ProtoBuf.ProtoEnum(Name=@"TEXTURE_MODULATIVE", Value=4)]
      TEXTURE_MODULATIVE = 4
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}