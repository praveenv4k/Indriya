// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contact.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "contact.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* Contact_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Contact_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_contact_2eproto() {
  protobuf_AddDesc_contact_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "contact.proto");
  GOOGLE_CHECK(file != NULL);
  Contact_descriptor_ = file->message_type(0);
  static const int Contact_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, collision1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, collision2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, normal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, depth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, wrench_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, world_),
  };
  Contact_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Contact_descriptor_,
      Contact::default_instance_,
      Contact_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, _has_bits_[0]),
      -1,
      -1,
      sizeof(Contact),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Contact, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_contact_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Contact_descriptor_, &Contact::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_contact_2eproto() {
  delete Contact::default_instance_;
  delete Contact_reflection_;
}

void protobuf_AddDesc_contact_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_vector3d_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_time_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_joint_5fwrench_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rcontact.proto\022\021Indriya.Core.Msgs\032\016vect"
    "or3d.proto\032\ntime.proto\032\022joint_wrench.pro"
    "to\"\202\002\n\007Contact\022\022\n\ncollision1\030\001 \002(\t\022\022\n\nco"
    "llision2\030\002 \002(\t\022-\n\010position\030\003 \003(\0132\033.Indri"
    "ya.Core.Msgs.Vector3d\022+\n\006normal\030\004 \003(\0132\033."
    "Indriya.Core.Msgs.Vector3d\022\r\n\005depth\030\005 \003("
    "\001\022.\n\006wrench\030\006 \003(\0132\036.Indriya.Core.Msgs.Jo"
    "intWrench\022%\n\004time\030\007 \002(\0132\027.Indriya.Core.M"
    "sgs.Time\022\r\n\005world\030\010 \002(\t", 343);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "contact.proto", &protobuf_RegisterTypes);
  Contact::default_instance_ = new Contact();
  Contact::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_contact_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_contact_2eproto {
  StaticDescriptorInitializer_contact_2eproto() {
    protobuf_AddDesc_contact_2eproto();
  }
} static_descriptor_initializer_contact_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Contact::kCollision1FieldNumber;
const int Contact::kCollision2FieldNumber;
const int Contact::kPositionFieldNumber;
const int Contact::kNormalFieldNumber;
const int Contact::kDepthFieldNumber;
const int Contact::kWrenchFieldNumber;
const int Contact::kTimeFieldNumber;
const int Contact::kWorldFieldNumber;
#endif  // !_MSC_VER

Contact::Contact()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.Contact)
}

void Contact::InitAsDefaultInstance() {
  time_ = const_cast< ::Indriya::Core::Msgs::Time*>(&::Indriya::Core::Msgs::Time::default_instance());
}

Contact::Contact(const Contact& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.Contact)
}

void Contact::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  collision1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collision2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = NULL;
  world_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Contact::~Contact() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.Contact)
  SharedDtor();
}

void Contact::SharedDtor() {
  collision1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collision2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  world_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete time_;
  }
}

void Contact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Contact::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Contact_descriptor_;
}

const Contact& Contact::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_contact_2eproto();
  return *default_instance_;
}

Contact* Contact::default_instance_ = NULL;

Contact* Contact::New(::google::protobuf::Arena* arena) const {
  Contact* n = new Contact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Contact::Clear() {
  if (_has_bits_[0 / 32] & 195) {
    if (has_collision1()) {
      collision1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_collision2()) {
      collision2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_time()) {
      if (time_ != NULL) time_->::Indriya::Core::Msgs::Time::Clear();
    }
    if (has_world()) {
      world_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  position_.Clear();
  normal_.Clear();
  depth_.Clear();
  wrench_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Contact::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.Contact)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string collision1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collision1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collision1().data(), this->collision1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.Contact.collision1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_collision2;
        break;
      }

      // required string collision2 = 2;
      case 2: {
        if (tag == 18) {
         parse_collision2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collision2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collision2().data(), this->collision2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.Contact.collision2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_position;
        break;
      }

      // repeated .Indriya.Core.Msgs.Vector3d position = 3;
      case 3: {
        if (tag == 26) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_position;
        if (input->ExpectTag(34)) goto parse_normal;
        break;
      }

      // repeated .Indriya.Core.Msgs.Vector3d normal = 4;
      case 4: {
        if (tag == 34) {
         parse_normal:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normal()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_normal;
        if (input->ExpectTag(41)) goto parse_depth;
        break;
      }

      // repeated double depth = 5;
      case 5: {
        if (tag == 41) {
         parse_depth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_depth())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_depth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_depth;
        if (input->ExpectTag(50)) goto parse_wrench;
        break;
      }

      // repeated .Indriya.Core.Msgs.JointWrench wrench = 6;
      case 6: {
        if (tag == 50) {
         parse_wrench:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wrench()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_wrench;
        if (input->ExpectTag(58)) goto parse_time;
        break;
      }

      // required .Indriya.Core.Msgs.Time time = 7;
      case 7: {
        if (tag == 58) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_world;
        break;
      }

      // required string world = 8;
      case 8: {
        if (tag == 66) {
         parse_world:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_world()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->world().data(), this->world().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.Contact.world");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.Contact)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.Contact)
  return false;
#undef DO_
}

void Contact::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.Contact)
  // required string collision1 = 1;
  if (has_collision1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision1().data(), this->collision1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.collision1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collision1(), output);
  }

  // required string collision2 = 2;
  if (has_collision2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision2().data(), this->collision2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.collision2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collision2(), output);
  }

  // repeated .Indriya.Core.Msgs.Vector3d position = 3;
  for (unsigned int i = 0, n = this->position_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->position(i), output);
  }

  // repeated .Indriya.Core.Msgs.Vector3d normal = 4;
  for (unsigned int i = 0, n = this->normal_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->normal(i), output);
  }

  // repeated double depth = 5;
  for (int i = 0; i < this->depth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->depth(i), output);
  }

  // repeated .Indriya.Core.Msgs.JointWrench wrench = 6;
  for (unsigned int i = 0, n = this->wrench_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->wrench(i), output);
  }

  // required .Indriya.Core.Msgs.Time time = 7;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->time_, output);
  }

  // required string world = 8;
  if (has_world()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->world().data(), this->world().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.world");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->world(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.Contact)
}

::google::protobuf::uint8* Contact::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.Contact)
  // required string collision1 = 1;
  if (has_collision1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision1().data(), this->collision1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.collision1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collision1(), target);
  }

  // required string collision2 = 2;
  if (has_collision2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collision2().data(), this->collision2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.collision2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collision2(), target);
  }

  // repeated .Indriya.Core.Msgs.Vector3d position = 3;
  for (unsigned int i = 0, n = this->position_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->position(i), target);
  }

  // repeated .Indriya.Core.Msgs.Vector3d normal = 4;
  for (unsigned int i = 0, n = this->normal_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->normal(i), target);
  }

  // repeated double depth = 5;
  for (int i = 0; i < this->depth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->depth(i), target);
  }

  // repeated .Indriya.Core.Msgs.JointWrench wrench = 6;
  for (unsigned int i = 0, n = this->wrench_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->wrench(i), target);
  }

  // required .Indriya.Core.Msgs.Time time = 7;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->time_, target);
  }

  // required string world = 8;
  if (has_world()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->world().data(), this->world().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Contact.world");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->world(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.Contact)
  return target;
}

int Contact::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_collision1()) {
    // required string collision1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision1());
  }

  if (has_collision2()) {
    // required string collision2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision2());
  }

  if (has_time()) {
    // required .Indriya.Core.Msgs.Time time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  if (has_world()) {
    // required string world = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->world());
  }

  return total_size;
}
int Contact::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000c3) ^ 0x000000c3) == 0) {  // All required fields are present.
    // required string collision1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision1());

    // required string collision2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collision2());

    // required .Indriya.Core.Msgs.Time time = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);

    // required string world = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->world());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Indriya.Core.Msgs.Vector3d position = 3;
  total_size += 1 * this->position_size();
  for (int i = 0; i < this->position_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->position(i));
  }

  // repeated .Indriya.Core.Msgs.Vector3d normal = 4;
  total_size += 1 * this->normal_size();
  for (int i = 0; i < this->normal_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normal(i));
  }

  // repeated double depth = 5;
  {
    int data_size = 0;
    data_size = 8 * this->depth_size();
    total_size += 1 * this->depth_size() + data_size;
  }

  // repeated .Indriya.Core.Msgs.JointWrench wrench = 6;
  total_size += 1 * this->wrench_size();
  for (int i = 0; i < this->wrench_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wrench(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Contact::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Contact* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Contact*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Contact::MergeFrom(const Contact& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  position_.MergeFrom(from.position_);
  normal_.MergeFrom(from.normal_);
  depth_.MergeFrom(from.depth_);
  wrench_.MergeFrom(from.wrench_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_collision1()) {
      set_has_collision1();
      collision1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision1_);
    }
    if (from.has_collision2()) {
      set_has_collision2();
      collision2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collision2_);
    }
    if (from.has_time()) {
      mutable_time()->::Indriya::Core::Msgs::Time::MergeFrom(from.time());
    }
    if (from.has_world()) {
      set_has_world();
      world_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.world_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Contact::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Contact::CopyFrom(const Contact& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Contact::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000c3) != 0x000000c3) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->position())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->normal())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->wrench())) return false;
  if (has_time()) {
    if (!this->time_->IsInitialized()) return false;
  }
  return true;
}

void Contact::Swap(Contact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Contact::InternalSwap(Contact* other) {
  collision1_.Swap(&other->collision1_);
  collision2_.Swap(&other->collision2_);
  position_.UnsafeArenaSwap(&other->position_);
  normal_.UnsafeArenaSwap(&other->normal_);
  depth_.UnsafeArenaSwap(&other->depth_);
  wrench_.UnsafeArenaSwap(&other->wrench_);
  std::swap(time_, other->time_);
  world_.Swap(&other->world_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Contact::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Contact_descriptor_;
  metadata.reflection = Contact_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Contact

// required string collision1 = 1;
 bool Contact::has_collision1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Contact::set_has_collision1() {
  _has_bits_[0] |= 0x00000001u;
}
 void Contact::clear_has_collision1() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Contact::clear_collision1() {
  collision1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collision1();
}
 const ::std::string& Contact::collision1() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.collision1)
  return collision1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_collision1(const ::std::string& value) {
  set_has_collision1();
  collision1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Contact.collision1)
}
 void Contact::set_collision1(const char* value) {
  set_has_collision1();
  collision1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.Contact.collision1)
}
 void Contact::set_collision1(const char* value, size_t size) {
  set_has_collision1();
  collision1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.Contact.collision1)
}
 ::std::string* Contact::mutable_collision1() {
  set_has_collision1();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.collision1)
  return collision1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Contact::release_collision1() {
  clear_has_collision1();
  return collision1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_allocated_collision1(::std::string* collision1) {
  if (collision1 != NULL) {
    set_has_collision1();
  } else {
    clear_has_collision1();
  }
  collision1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collision1);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Contact.collision1)
}

// required string collision2 = 2;
 bool Contact::has_collision2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Contact::set_has_collision2() {
  _has_bits_[0] |= 0x00000002u;
}
 void Contact::clear_has_collision2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Contact::clear_collision2() {
  collision2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_collision2();
}
 const ::std::string& Contact::collision2() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.collision2)
  return collision2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_collision2(const ::std::string& value) {
  set_has_collision2();
  collision2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Contact.collision2)
}
 void Contact::set_collision2(const char* value) {
  set_has_collision2();
  collision2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.Contact.collision2)
}
 void Contact::set_collision2(const char* value, size_t size) {
  set_has_collision2();
  collision2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.Contact.collision2)
}
 ::std::string* Contact::mutable_collision2() {
  set_has_collision2();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.collision2)
  return collision2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Contact::release_collision2() {
  clear_has_collision2();
  return collision2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_allocated_collision2(::std::string* collision2) {
  if (collision2 != NULL) {
    set_has_collision2();
  } else {
    clear_has_collision2();
  }
  collision2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), collision2);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Contact.collision2)
}

// repeated .Indriya.Core.Msgs.Vector3d position = 3;
 int Contact::position_size() const {
  return position_.size();
}
 void Contact::clear_position() {
  position_.Clear();
}
 const ::Indriya::Core::Msgs::Vector3d& Contact::position(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.position)
  return position_.Get(index);
}
 ::Indriya::Core::Msgs::Vector3d* Contact::mutable_position(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.position)
  return position_.Mutable(index);
}
 ::Indriya::Core::Msgs::Vector3d* Contact::add_position() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Contact.position)
  return position_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Vector3d >&
Contact::position() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Contact.position)
  return position_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Vector3d >*
Contact::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Contact.position)
  return &position_;
}

// repeated .Indriya.Core.Msgs.Vector3d normal = 4;
 int Contact::normal_size() const {
  return normal_.size();
}
 void Contact::clear_normal() {
  normal_.Clear();
}
 const ::Indriya::Core::Msgs::Vector3d& Contact::normal(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.normal)
  return normal_.Get(index);
}
 ::Indriya::Core::Msgs::Vector3d* Contact::mutable_normal(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.normal)
  return normal_.Mutable(index);
}
 ::Indriya::Core::Msgs::Vector3d* Contact::add_normal() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Contact.normal)
  return normal_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Vector3d >&
Contact::normal() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Contact.normal)
  return normal_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Vector3d >*
Contact::mutable_normal() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Contact.normal)
  return &normal_;
}

// repeated double depth = 5;
 int Contact::depth_size() const {
  return depth_.size();
}
 void Contact::clear_depth() {
  depth_.Clear();
}
 double Contact::depth(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.depth)
  return depth_.Get(index);
}
 void Contact::set_depth(int index, double value) {
  depth_.Set(index, value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Contact.depth)
}
 void Contact::add_depth(double value) {
  depth_.Add(value);
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Contact.depth)
}
 const ::google::protobuf::RepeatedField< double >&
Contact::depth() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Contact.depth)
  return depth_;
}
 ::google::protobuf::RepeatedField< double >*
Contact::mutable_depth() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Contact.depth)
  return &depth_;
}

// repeated .Indriya.Core.Msgs.JointWrench wrench = 6;
 int Contact::wrench_size() const {
  return wrench_.size();
}
 void Contact::clear_wrench() {
  wrench_.Clear();
}
 const ::Indriya::Core::Msgs::JointWrench& Contact::wrench(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.wrench)
  return wrench_.Get(index);
}
 ::Indriya::Core::Msgs::JointWrench* Contact::mutable_wrench(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.wrench)
  return wrench_.Mutable(index);
}
 ::Indriya::Core::Msgs::JointWrench* Contact::add_wrench() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Contact.wrench)
  return wrench_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::JointWrench >&
Contact::wrench() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Contact.wrench)
  return wrench_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::JointWrench >*
Contact::mutable_wrench() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Contact.wrench)
  return &wrench_;
}

// required .Indriya.Core.Msgs.Time time = 7;
 bool Contact::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void Contact::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
 void Contact::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
 void Contact::clear_time() {
  if (time_ != NULL) time_->::Indriya::Core::Msgs::Time::Clear();
  clear_has_time();
}
 const ::Indriya::Core::Msgs::Time& Contact::time() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.time)
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
 ::Indriya::Core::Msgs::Time* Contact::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::Indriya::Core::Msgs::Time;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.time)
  return time_;
}
 ::Indriya::Core::Msgs::Time* Contact::release_time() {
  clear_has_time();
  ::Indriya::Core::Msgs::Time* temp = time_;
  time_ = NULL;
  return temp;
}
 void Contact::set_allocated_time(::Indriya::Core::Msgs::Time* time) {
  delete time_;
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Contact.time)
}

// required string world = 8;
 bool Contact::has_world() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void Contact::set_has_world() {
  _has_bits_[0] |= 0x00000080u;
}
 void Contact::clear_has_world() {
  _has_bits_[0] &= ~0x00000080u;
}
 void Contact::clear_world() {
  world_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_world();
}
 const ::std::string& Contact::world() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Contact.world)
  return world_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_world(const ::std::string& value) {
  set_has_world();
  world_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Contact.world)
}
 void Contact::set_world(const char* value) {
  set_has_world();
  world_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.Contact.world)
}
 void Contact::set_world(const char* value, size_t size) {
  set_has_world();
  world_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.Contact.world)
}
 ::std::string* Contact::mutable_world() {
  set_has_world();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Contact.world)
  return world_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Contact::release_world() {
  clear_has_world();
  return world_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Contact::set_allocated_world(::std::string* world) {
  if (world != NULL) {
    set_has_world();
  } else {
    clear_has_world();
  }
  world_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), world);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Contact.world)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.Contact", Contact)
// @@protoc_insertion_point(global_scope)
