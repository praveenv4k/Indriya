package Indriya.Core.Msgs;

/// \ingroup experimot_msgs
/// \interface Joint 
/// \brief Message for creating KinectBody

import "vector2d.proto";
import "kinect_joint.proto";

/**
 * Represents a body
 */
message KinectBody
{
	/**
	 * Represents human engagement
	 */
	enum Activity
    {
        EyeLeftClosed = 0;         ///     Left eye closed.
        EyeRightClosed = 1;        ///     Right eye closed.
        MouthOpen = 2;             ///     Mouth open.
        MouthMoved = 3;            ///     Mouth moved.
        LookingAway = 4;           ///     Looking away.
    }

	/**
	 * Represents the appearance of the human
	 */
	 enum Appearance
    {
        WearingGlasses = 0;        ///     Wearing glasses.
    }

	/**
	 * Represents the gesture recognition result
	 */
	enum DetectionResult
    {
        Unknown = 0;        ///     Undetermined detection.
        No = 1;             ///     Not detected.
        Maybe = 2;          ///     Maybe detected.
        Yes = 3;            ///     Is detected.
    }

	/**
	 * Possible occlusion edges
	 */
    enum FrameEdges
    {
        None = 0;          ///     No frame edges.
        Right = 1;         ///     Right frame edge.
        Left = 2;          ///     Left frame edge.
        Top = 4;           ///     Top frame edge.
        Bottom = 8;        ///     Bottom frame edge.
    }

	/**
     *     The expression a body may have.
	 */
    enum Expression
    {
        Neutral = 0;      ///     Neutral expression.
        Happy = 1;        ///     Happy expression.
    }

	/**
	 * Represents tracking confidence
	 */
    enum TrackingConfidence
    {
        Low = 0;         ///     Low confidence.
        High = 1;        ///     High confidence.
    }

	/**
	 * The state of a hand of a body.
	 */
    enum HandState
    {
        HS_Unknown = 0;       ///     Undetermined hand state.
        HS_NotTracked = 1;    ///     Hand not tracked.
        HS_Open = 2;          ///     Open hand.
        HS_Closed = 3;        ///     Closed hand.
        HS_Lasso = 4;         ///     Lasso (pointer) hand.
    }

	required int32 TrackingId							=	1;			/// Human Tracking Identifier
	required bool IsTracked								=	2;			/// True if skeleton tracked
	required int32 JointCount							=	3;			/// Number of joints in the skeletoon
	repeated KinectJoint Joints							 =	4;			/// List of joints
	optional FrameEdges ClippedEdges					=	5;			/// Occluded edge
	optional TrackingConfidence HandLeftConfidence		=	6;			/// Left hand tracking confidence
	optional HandState HandLeftState					=	7;			/// Left hand state (open/closed/lasso)
	optional TrackingConfidence HandRightConfidence		=	8;			/// Right hand tracking confidence
	optional HandState HandRightState					=	9;			/// Right hand state (open/closed/lasso)
	optional bool IsRestricted							=	10;			/// Restricted skeleton
	optional Vector2d Lean								=	11;			/// Lean point
	optional int32 LeanTrackingState					=	12;			/// Lean tracking state
}

/**
 * Represents a list of kinect bodies
 */
message KinectBodies
{
	repeated KinectBody Body = 1;										/// List of kinect bodies
}