// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

namespace {

const ::google::protobuf::Descriptor* Model_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Model_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_model_2eproto() {
  protobuf_AddDesc_model_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "model.proto");
  GOOGLE_CHECK(file != NULL);
  Model_descriptor_ = file->message_type(0);
  static const int Model_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, is_static_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, pose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, joint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, deleted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, visual_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, scale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, self_collide_),
  };
  Model_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Model_descriptor_,
      Model::default_instance_,
      Model_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, _has_bits_[0]),
      -1,
      -1,
      sizeof(Model),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Model, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_model_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Model_descriptor_, &Model::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_model_2eproto() {
  delete Model::default_instance_;
  delete Model_reflection_;
}

void protobuf_AddDesc_model_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Indriya::Core::Msgs::protobuf_AddDesc_joint_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_link_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_pose_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_visual_2eproto();
  ::Indriya::Core::Msgs::protobuf_AddDesc_vector3d_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013model.proto\022\021Indriya.Core.Msgs\032\013joint."
    "proto\032\nlink.proto\032\npose.proto\032\014visual.pr"
    "oto\032\016vector3d.proto\"\251\002\n\005Model\022\014\n\004name\030\001 "
    "\002(\t\022\n\n\002id\030\002 \001(\r\022\021\n\tis_static\030\003 \001(\010\022%\n\004po"
    "se\030\004 \001(\0132\027.Indriya.Core.Msgs.Pose\022\'\n\005joi"
    "nt\030\005 \003(\0132\030.Indriya.Core.Msgs.Joint\022%\n\004li"
    "nk\030\006 \003(\0132\027.Indriya.Core.Msgs.Link\022\017\n\007del"
    "eted\030\007 \001(\010\022)\n\006visual\030\010 \003(\0132\031.Indriya.Cor"
    "e.Msgs.Visual\022*\n\005scale\030\t \001(\0132\033.Indriya.C"
    "ore.Msgs.Vector3d\022\024\n\014self_collide\030\n \001(\010", 399);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model.proto", &protobuf_RegisterTypes);
  Model::default_instance_ = new Model();
  Model::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_2eproto {
  StaticDescriptorInitializer_model_2eproto() {
    protobuf_AddDesc_model_2eproto();
  }
} static_descriptor_initializer_model_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Model::kNameFieldNumber;
const int Model::kIdFieldNumber;
const int Model::kIsStaticFieldNumber;
const int Model::kPoseFieldNumber;
const int Model::kJointFieldNumber;
const int Model::kLinkFieldNumber;
const int Model::kDeletedFieldNumber;
const int Model::kVisualFieldNumber;
const int Model::kScaleFieldNumber;
const int Model::kSelfCollideFieldNumber;
#endif  // !_MSC_VER

Model::Model()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Indriya.Core.Msgs.Model)
}

void Model::InitAsDefaultInstance() {
  pose_ = const_cast< ::Indriya::Core::Msgs::Pose*>(&::Indriya::Core::Msgs::Pose::default_instance());
  scale_ = const_cast< ::Indriya::Core::Msgs::Vector3d*>(&::Indriya::Core::Msgs::Vector3d::default_instance());
}

Model::Model(const Model& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Indriya.Core.Msgs.Model)
}

void Model::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
  is_static_ = false;
  pose_ = NULL;
  deleted_ = false;
  scale_ = NULL;
  self_collide_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Model::~Model() {
  // @@protoc_insertion_point(destructor:Indriya.Core.Msgs.Model)
  SharedDtor();
}

void Model::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pose_;
    delete scale_;
  }
}

void Model::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Model::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Model_descriptor_;
}

const Model& Model::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_2eproto();
  return *default_instance_;
}

Model* Model::default_instance_ = NULL;

Model* Model::New(::google::protobuf::Arena* arena) const {
  Model* n = new Model;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Model::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Model*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 79) {
    ZR_(id_, deleted_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pose()) {
      if (pose_ != NULL) pose_->::Indriya::Core::Msgs::Pose::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_scale()) {
      if (scale_ != NULL) scale_->::Indriya::Core::Msgs::Vector3d::Clear();
    }
    self_collide_ = false;
  }

#undef ZR_HELPER_
#undef ZR_

  joint_.Clear();
  link_.Clear();
  visual_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Model::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Indriya.Core.Msgs.Model)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Indriya.Core.Msgs.Model.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional uint32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_static;
        break;
      }

      // optional bool is_static = 3;
      case 3: {
        if (tag == 24) {
         parse_is_static:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_static_)));
          set_has_is_static();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pose;
        break;
      }

      // optional .Indriya.Core.Msgs.Pose pose = 4;
      case 4: {
        if (tag == 34) {
         parse_pose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_joint;
        break;
      }

      // repeated .Indriya.Core.Msgs.Joint joint = 5;
      case 5: {
        if (tag == 42) {
         parse_joint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_joint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_joint;
        if (input->ExpectTag(50)) goto parse_link;
        break;
      }

      // repeated .Indriya.Core.Msgs.Link link = 6;
      case 6: {
        if (tag == 50) {
         parse_link:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_link()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_link;
        if (input->ExpectTag(56)) goto parse_deleted;
        break;
      }

      // optional bool deleted = 7;
      case 7: {
        if (tag == 56) {
         parse_deleted:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
          set_has_deleted();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_visual;
        break;
      }

      // repeated .Indriya.Core.Msgs.Visual visual = 8;
      case 8: {
        if (tag == 66) {
         parse_visual:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_visual()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_visual;
        if (input->ExpectTag(74)) goto parse_scale;
        break;
      }

      // optional .Indriya.Core.Msgs.Vector3d scale = 9;
      case 9: {
        if (tag == 74) {
         parse_scale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_self_collide;
        break;
      }

      // optional bool self_collide = 10;
      case 10: {
        if (tag == 80) {
         parse_self_collide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &self_collide_)));
          set_has_self_collide();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Indriya.Core.Msgs.Model)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Indriya.Core.Msgs.Model)
  return false;
#undef DO_
}

void Model::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Indriya.Core.Msgs.Model)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Model.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // optional bool is_static = 3;
  if (has_is_static()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_static(), output);
  }

  // optional .Indriya.Core.Msgs.Pose pose = 4;
  if (has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pose_, output);
  }

  // repeated .Indriya.Core.Msgs.Joint joint = 5;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->joint(i), output);
  }

  // repeated .Indriya.Core.Msgs.Link link = 6;
  for (unsigned int i = 0, n = this->link_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->link(i), output);
  }

  // optional bool deleted = 7;
  if (has_deleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->deleted(), output);
  }

  // repeated .Indriya.Core.Msgs.Visual visual = 8;
  for (unsigned int i = 0, n = this->visual_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->visual(i), output);
  }

  // optional .Indriya.Core.Msgs.Vector3d scale = 9;
  if (has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->scale_, output);
  }

  // optional bool self_collide = 10;
  if (has_self_collide()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->self_collide(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Indriya.Core.Msgs.Model)
}

::google::protobuf::uint8* Model::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Indriya.Core.Msgs.Model)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Indriya.Core.Msgs.Model.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // optional bool is_static = 3;
  if (has_is_static()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_static(), target);
  }

  // optional .Indriya.Core.Msgs.Pose pose = 4;
  if (has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->pose_, target);
  }

  // repeated .Indriya.Core.Msgs.Joint joint = 5;
  for (unsigned int i = 0, n = this->joint_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->joint(i), target);
  }

  // repeated .Indriya.Core.Msgs.Link link = 6;
  for (unsigned int i = 0, n = this->link_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->link(i), target);
  }

  // optional bool deleted = 7;
  if (has_deleted()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->deleted(), target);
  }

  // repeated .Indriya.Core.Msgs.Visual visual = 8;
  for (unsigned int i = 0, n = this->visual_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->visual(i), target);
  }

  // optional .Indriya.Core.Msgs.Vector3d scale = 9;
  if (has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, *this->scale_, target);
  }

  // optional bool self_collide = 10;
  if (has_self_collide()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->self_collide(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Indriya.Core.Msgs.Model)
  return target;
}

int Model::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 78) {
    // optional uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional bool is_static = 3;
    if (has_is_static()) {
      total_size += 1 + 1;
    }

    // optional .Indriya.Core.Msgs.Pose pose = 4;
    if (has_pose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pose_);
    }

    // optional bool deleted = 7;
    if (has_deleted()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768) {
    // optional .Indriya.Core.Msgs.Vector3d scale = 9;
    if (has_scale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->scale_);
    }

    // optional bool self_collide = 10;
    if (has_self_collide()) {
      total_size += 1 + 1;
    }

  }
  // repeated .Indriya.Core.Msgs.Joint joint = 5;
  total_size += 1 * this->joint_size();
  for (int i = 0; i < this->joint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->joint(i));
  }

  // repeated .Indriya.Core.Msgs.Link link = 6;
  total_size += 1 * this->link_size();
  for (int i = 0; i < this->link_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->link(i));
  }

  // repeated .Indriya.Core.Msgs.Visual visual = 8;
  total_size += 1 * this->visual_size();
  for (int i = 0; i < this->visual_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->visual(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Model::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Model* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Model*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Model::MergeFrom(const Model& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  joint_.MergeFrom(from.joint_);
  link_.MergeFrom(from.link_);
  visual_.MergeFrom(from.visual_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_is_static()) {
      set_is_static(from.is_static());
    }
    if (from.has_pose()) {
      mutable_pose()->::Indriya::Core::Msgs::Pose::MergeFrom(from.pose());
    }
    if (from.has_deleted()) {
      set_deleted(from.deleted());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_scale()) {
      mutable_scale()->::Indriya::Core::Msgs::Vector3d::MergeFrom(from.scale());
    }
    if (from.has_self_collide()) {
      set_self_collide(from.self_collide());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Model::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Model::CopyFrom(const Model& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Model::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_pose()) {
    if (!this->pose_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->joint())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->link())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->visual())) return false;
  if (has_scale()) {
    if (!this->scale_->IsInitialized()) return false;
  }
  return true;
}

void Model::Swap(Model* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Model::InternalSwap(Model* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(is_static_, other->is_static_);
  std::swap(pose_, other->pose_);
  joint_.UnsafeArenaSwap(&other->joint_);
  link_.UnsafeArenaSwap(&other->link_);
  std::swap(deleted_, other->deleted_);
  visual_.UnsafeArenaSwap(&other->visual_);
  std::swap(scale_, other->scale_);
  std::swap(self_collide_, other->self_collide_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Model::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Model_descriptor_;
  metadata.reflection = Model_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Model

// required string name = 1;
 bool Model::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Model::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
 void Model::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Model::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Model.name)
}
 void Model::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.Model.name)
}
 void Model::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.Model.name)
}
 ::std::string* Model::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Model::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Model.name)
}

// optional uint32 id = 2;
 bool Model::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Model::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void Model::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Model::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 Model::id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.id)
  return id_;
}
 void Model::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Model.id)
}

// optional bool is_static = 3;
 bool Model::has_is_static() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void Model::set_has_is_static() {
  _has_bits_[0] |= 0x00000004u;
}
 void Model::clear_has_is_static() {
  _has_bits_[0] &= ~0x00000004u;
}
 void Model::clear_is_static() {
  is_static_ = false;
  clear_has_is_static();
}
 bool Model::is_static() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.is_static)
  return is_static_;
}
 void Model::set_is_static(bool value) {
  set_has_is_static();
  is_static_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Model.is_static)
}

// optional .Indriya.Core.Msgs.Pose pose = 4;
 bool Model::has_pose() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void Model::set_has_pose() {
  _has_bits_[0] |= 0x00000008u;
}
 void Model::clear_has_pose() {
  _has_bits_[0] &= ~0x00000008u;
}
 void Model::clear_pose() {
  if (pose_ != NULL) pose_->::Indriya::Core::Msgs::Pose::Clear();
  clear_has_pose();
}
 const ::Indriya::Core::Msgs::Pose& Model::pose() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.pose)
  return pose_ != NULL ? *pose_ : *default_instance_->pose_;
}
 ::Indriya::Core::Msgs::Pose* Model::mutable_pose() {
  set_has_pose();
  if (pose_ == NULL) {
    pose_ = new ::Indriya::Core::Msgs::Pose;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.pose)
  return pose_;
}
 ::Indriya::Core::Msgs::Pose* Model::release_pose() {
  clear_has_pose();
  ::Indriya::Core::Msgs::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
 void Model::set_allocated_pose(::Indriya::Core::Msgs::Pose* pose) {
  delete pose_;
  pose_ = pose;
  if (pose) {
    set_has_pose();
  } else {
    clear_has_pose();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Model.pose)
}

// repeated .Indriya.Core.Msgs.Joint joint = 5;
 int Model::joint_size() const {
  return joint_.size();
}
 void Model::clear_joint() {
  joint_.Clear();
}
 const ::Indriya::Core::Msgs::Joint& Model::joint(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.joint)
  return joint_.Get(index);
}
 ::Indriya::Core::Msgs::Joint* Model::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.joint)
  return joint_.Mutable(index);
}
 ::Indriya::Core::Msgs::Joint* Model::add_joint() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Model.joint)
  return joint_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Joint >&
Model::joint() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Model.joint)
  return joint_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Joint >*
Model::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Model.joint)
  return &joint_;
}

// repeated .Indriya.Core.Msgs.Link link = 6;
 int Model::link_size() const {
  return link_.size();
}
 void Model::clear_link() {
  link_.Clear();
}
 const ::Indriya::Core::Msgs::Link& Model::link(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.link)
  return link_.Get(index);
}
 ::Indriya::Core::Msgs::Link* Model::mutable_link(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.link)
  return link_.Mutable(index);
}
 ::Indriya::Core::Msgs::Link* Model::add_link() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Model.link)
  return link_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Link >&
Model::link() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Model.link)
  return link_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Link >*
Model::mutable_link() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Model.link)
  return &link_;
}

// optional bool deleted = 7;
 bool Model::has_deleted() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void Model::set_has_deleted() {
  _has_bits_[0] |= 0x00000040u;
}
 void Model::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000040u;
}
 void Model::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
 bool Model::deleted() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.deleted)
  return deleted_;
}
 void Model::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Model.deleted)
}

// repeated .Indriya.Core.Msgs.Visual visual = 8;
 int Model::visual_size() const {
  return visual_.size();
}
 void Model::clear_visual() {
  visual_.Clear();
}
 const ::Indriya::Core::Msgs::Visual& Model::visual(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.visual)
  return visual_.Get(index);
}
 ::Indriya::Core::Msgs::Visual* Model::mutable_visual(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.visual)
  return visual_.Mutable(index);
}
 ::Indriya::Core::Msgs::Visual* Model::add_visual() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Model.visual)
  return visual_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Visual >&
Model::visual() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Model.visual)
  return visual_;
}
 ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Visual >*
Model::mutable_visual() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Model.visual)
  return &visual_;
}

// optional .Indriya.Core.Msgs.Vector3d scale = 9;
 bool Model::has_scale() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void Model::set_has_scale() {
  _has_bits_[0] |= 0x00000100u;
}
 void Model::clear_has_scale() {
  _has_bits_[0] &= ~0x00000100u;
}
 void Model::clear_scale() {
  if (scale_ != NULL) scale_->::Indriya::Core::Msgs::Vector3d::Clear();
  clear_has_scale();
}
 const ::Indriya::Core::Msgs::Vector3d& Model::scale() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.scale)
  return scale_ != NULL ? *scale_ : *default_instance_->scale_;
}
 ::Indriya::Core::Msgs::Vector3d* Model::mutable_scale() {
  set_has_scale();
  if (scale_ == NULL) {
    scale_ = new ::Indriya::Core::Msgs::Vector3d;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Model.scale)
  return scale_;
}
 ::Indriya::Core::Msgs::Vector3d* Model::release_scale() {
  clear_has_scale();
  ::Indriya::Core::Msgs::Vector3d* temp = scale_;
  scale_ = NULL;
  return temp;
}
 void Model::set_allocated_scale(::Indriya::Core::Msgs::Vector3d* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    set_has_scale();
  } else {
    clear_has_scale();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Model.scale)
}

// optional bool self_collide = 10;
 bool Model::has_self_collide() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void Model::set_has_self_collide() {
  _has_bits_[0] |= 0x00000200u;
}
 void Model::clear_has_self_collide() {
  _has_bits_[0] &= ~0x00000200u;
}
 void Model::clear_self_collide() {
  self_collide_ = false;
  clear_has_self_collide();
}
 bool Model::self_collide() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Model.self_collide)
  return self_collide_;
}
 void Model::set_self_collide(bool value) {
  set_has_self_collide();
  self_collide_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Model.self_collide)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

EX_REGISTER_STATIC_MSG("Indriya.Core.Msgs.Model", Model)
// @@protoc_insertion_point(global_scope)
