// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: distortion.proto

#ifndef PROTOBUF_distortion_2eproto__INCLUDED
#define PROTOBUF_distortion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "vector2d.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_distortion_2eproto();
void protobuf_AssignDesc_distortion_2eproto();
void protobuf_ShutdownFile_distortion_2eproto();

class Distortion;

// ===================================================================

class Distortion : public ::google::protobuf::Message {
 public:
  Distortion();
  virtual ~Distortion();

  Distortion(const Distortion& from);

  inline Distortion& operator=(const Distortion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Distortion& default_instance();

  void Swap(Distortion* other);

  // implements Message ----------------------------------------------

  inline Distortion* New() const { return New(NULL); }

  Distortion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Distortion& from);
  void MergeFrom(const Distortion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Distortion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Indriya.Core.Msgs.Vector2d center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  const ::Indriya::Core::Msgs::Vector2d& center() const;
  ::Indriya::Core::Msgs::Vector2d* mutable_center();
  ::Indriya::Core::Msgs::Vector2d* release_center();
  void set_allocated_center(::Indriya::Core::Msgs::Vector2d* center);

  // optional double k1 = 2;
  bool has_k1() const;
  void clear_k1();
  static const int kK1FieldNumber = 2;
  double k1() const;
  void set_k1(double value);

  // optional double k2 = 3;
  bool has_k2() const;
  void clear_k2();
  static const int kK2FieldNumber = 3;
  double k2() const;
  void set_k2(double value);

  // optional double k3 = 4;
  bool has_k3() const;
  void clear_k3();
  static const int kK3FieldNumber = 4;
  double k3() const;
  void set_k3(double value);

  // optional double p1 = 5;
  bool has_p1() const;
  void clear_p1();
  static const int kP1FieldNumber = 5;
  double p1() const;
  void set_p1(double value);

  // optional double p2 = 6;
  bool has_p2() const;
  void clear_p2();
  static const int kP2FieldNumber = 6;
  double p2() const;
  void set_p2(double value);

  // @@protoc_insertion_point(class_scope:Indriya.Core.Msgs.Distortion)
 private:
  inline void set_has_center();
  inline void clear_has_center();
  inline void set_has_k1();
  inline void clear_has_k1();
  inline void set_has_k2();
  inline void clear_has_k2();
  inline void set_has_k3();
  inline void clear_has_k3();
  inline void set_has_p1();
  inline void clear_has_p1();
  inline void set_has_p2();
  inline void clear_has_p2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Indriya::Core::Msgs::Vector2d* center_;
  double k1_;
  double k2_;
  double k3_;
  double p1_;
  double p2_;
  friend void  protobuf_AddDesc_distortion_2eproto();
  friend void protobuf_AssignDesc_distortion_2eproto();
  friend void protobuf_ShutdownFile_distortion_2eproto();

  void InitAsDefaultInstance();
  static Distortion* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Distortion

// optional .Indriya.Core.Msgs.Vector2d center = 1;
inline bool Distortion::has_center() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Distortion::set_has_center() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Distortion::clear_has_center() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Distortion::clear_center() {
  if (center_ != NULL) center_->::Indriya::Core::Msgs::Vector2d::Clear();
  clear_has_center();
}
inline const ::Indriya::Core::Msgs::Vector2d& Distortion::center() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.center)
  return center_ != NULL ? *center_ : *default_instance_->center_;
}
inline ::Indriya::Core::Msgs::Vector2d* Distortion::mutable_center() {
  set_has_center();
  if (center_ == NULL) {
    center_ = new ::Indriya::Core::Msgs::Vector2d;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Distortion.center)
  return center_;
}
inline ::Indriya::Core::Msgs::Vector2d* Distortion::release_center() {
  clear_has_center();
  ::Indriya::Core::Msgs::Vector2d* temp = center_;
  center_ = NULL;
  return temp;
}
inline void Distortion::set_allocated_center(::Indriya::Core::Msgs::Vector2d* center) {
  delete center_;
  center_ = center;
  if (center) {
    set_has_center();
  } else {
    clear_has_center();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Distortion.center)
}

// optional double k1 = 2;
inline bool Distortion::has_k1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Distortion::set_has_k1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Distortion::clear_has_k1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Distortion::clear_k1() {
  k1_ = 0;
  clear_has_k1();
}
inline double Distortion::k1() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.k1)
  return k1_;
}
inline void Distortion::set_k1(double value) {
  set_has_k1();
  k1_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Distortion.k1)
}

// optional double k2 = 3;
inline bool Distortion::has_k2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Distortion::set_has_k2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Distortion::clear_has_k2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Distortion::clear_k2() {
  k2_ = 0;
  clear_has_k2();
}
inline double Distortion::k2() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.k2)
  return k2_;
}
inline void Distortion::set_k2(double value) {
  set_has_k2();
  k2_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Distortion.k2)
}

// optional double k3 = 4;
inline bool Distortion::has_k3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Distortion::set_has_k3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Distortion::clear_has_k3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Distortion::clear_k3() {
  k3_ = 0;
  clear_has_k3();
}
inline double Distortion::k3() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.k3)
  return k3_;
}
inline void Distortion::set_k3(double value) {
  set_has_k3();
  k3_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Distortion.k3)
}

// optional double p1 = 5;
inline bool Distortion::has_p1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Distortion::set_has_p1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Distortion::clear_has_p1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Distortion::clear_p1() {
  p1_ = 0;
  clear_has_p1();
}
inline double Distortion::p1() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.p1)
  return p1_;
}
inline void Distortion::set_p1(double value) {
  set_has_p1();
  p1_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Distortion.p1)
}

// optional double p2 = 6;
inline bool Distortion::has_p2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Distortion::set_has_p2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Distortion::clear_has_p2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Distortion::clear_p2() {
  p2_ = 0;
  clear_has_p2();
}
inline double Distortion::p2() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Distortion.p2)
  return p2_;
}
inline void Distortion::set_p2(double value) {
  set_has_p2();
  p2_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Distortion.p2)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<Indriya::Core::Msgs::Distortion> DistortionPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

typedef const boost::shared_ptr<Indriya::Core::Msgs::Distortion const> ConstDistortionPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_distortion_2eproto__INCLUDED
