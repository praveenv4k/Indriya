// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joint_wrench.proto

#ifndef PROTOBUF_joint_5fwrench_2eproto__INCLUDED
#define PROTOBUF_joint_5fwrench_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "wrench.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_joint_5fwrench_2eproto();
void protobuf_AssignDesc_joint_5fwrench_2eproto();
void protobuf_ShutdownFile_joint_5fwrench_2eproto();

class JointWrench;

// ===================================================================

class JointWrench : public ::google::protobuf::Message {
 public:
  JointWrench();
  virtual ~JointWrench();

  JointWrench(const JointWrench& from);

  inline JointWrench& operator=(const JointWrench& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JointWrench& default_instance();

  void Swap(JointWrench* other);

  // implements Message ----------------------------------------------

  inline JointWrench* New() const { return New(NULL); }

  JointWrench* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JointWrench& from);
  void MergeFrom(const JointWrench& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JointWrench* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string body_1_name = 1;
  bool has_body_1_name() const;
  void clear_body_1_name();
  static const int kBody1NameFieldNumber = 1;
  const ::std::string& body_1_name() const;
  void set_body_1_name(const ::std::string& value);
  void set_body_1_name(const char* value);
  void set_body_1_name(const char* value, size_t size);
  ::std::string* mutable_body_1_name();
  ::std::string* release_body_1_name();
  void set_allocated_body_1_name(::std::string* body_1_name);

  // required uint32 body_1_id = 2;
  bool has_body_1_id() const;
  void clear_body_1_id();
  static const int kBody1IdFieldNumber = 2;
  ::google::protobuf::uint32 body_1_id() const;
  void set_body_1_id(::google::protobuf::uint32 value);

  // required string body_2_name = 3;
  bool has_body_2_name() const;
  void clear_body_2_name();
  static const int kBody2NameFieldNumber = 3;
  const ::std::string& body_2_name() const;
  void set_body_2_name(const ::std::string& value);
  void set_body_2_name(const char* value);
  void set_body_2_name(const char* value, size_t size);
  ::std::string* mutable_body_2_name();
  ::std::string* release_body_2_name();
  void set_allocated_body_2_name(::std::string* body_2_name);

  // required uint32 body_2_id = 4;
  bool has_body_2_id() const;
  void clear_body_2_id();
  static const int kBody2IdFieldNumber = 4;
  ::google::protobuf::uint32 body_2_id() const;
  void set_body_2_id(::google::protobuf::uint32 value);

  // required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
  bool has_body_1_wrench() const;
  void clear_body_1_wrench();
  static const int kBody1WrenchFieldNumber = 5;
  const ::Indriya::Core::Msgs::Wrench& body_1_wrench() const;
  ::Indriya::Core::Msgs::Wrench* mutable_body_1_wrench();
  ::Indriya::Core::Msgs::Wrench* release_body_1_wrench();
  void set_allocated_body_1_wrench(::Indriya::Core::Msgs::Wrench* body_1_wrench);

  // required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
  bool has_body_2_wrench() const;
  void clear_body_2_wrench();
  static const int kBody2WrenchFieldNumber = 6;
  const ::Indriya::Core::Msgs::Wrench& body_2_wrench() const;
  ::Indriya::Core::Msgs::Wrench* mutable_body_2_wrench();
  ::Indriya::Core::Msgs::Wrench* release_body_2_wrench();
  void set_allocated_body_2_wrench(::Indriya::Core::Msgs::Wrench* body_2_wrench);

  // @@protoc_insertion_point(class_scope:Indriya.Core.Msgs.JointWrench)
 private:
  inline void set_has_body_1_name();
  inline void clear_has_body_1_name();
  inline void set_has_body_1_id();
  inline void clear_has_body_1_id();
  inline void set_has_body_2_name();
  inline void clear_has_body_2_name();
  inline void set_has_body_2_id();
  inline void clear_has_body_2_id();
  inline void set_has_body_1_wrench();
  inline void clear_has_body_1_wrench();
  inline void set_has_body_2_wrench();
  inline void clear_has_body_2_wrench();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr body_1_name_;
  ::google::protobuf::internal::ArenaStringPtr body_2_name_;
  ::google::protobuf::uint32 body_1_id_;
  ::google::protobuf::uint32 body_2_id_;
  ::Indriya::Core::Msgs::Wrench* body_1_wrench_;
  ::Indriya::Core::Msgs::Wrench* body_2_wrench_;
  friend void  protobuf_AddDesc_joint_5fwrench_2eproto();
  friend void protobuf_AssignDesc_joint_5fwrench_2eproto();
  friend void protobuf_ShutdownFile_joint_5fwrench_2eproto();

  void InitAsDefaultInstance();
  static JointWrench* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JointWrench

// required string body_1_name = 1;
inline bool JointWrench::has_body_1_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JointWrench::set_has_body_1_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JointWrench::clear_has_body_1_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JointWrench::clear_body_1_name() {
  body_1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_1_name();
}
inline const ::std::string& JointWrench::body_1_name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_name)
  return body_1_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointWrench::set_body_1_name(const ::std::string& value) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_1_name)
}
inline void JointWrench::set_body_1_name(const char* value) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.JointWrench.body_1_name)
}
inline void JointWrench::set_body_1_name(const char* value, size_t size) {
  set_has_body_1_name();
  body_1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.JointWrench.body_1_name)
}
inline ::std::string* JointWrench::mutable_body_1_name() {
  set_has_body_1_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_1_name)
  return body_1_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JointWrench::release_body_1_name() {
  clear_has_body_1_name();
  return body_1_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointWrench::set_allocated_body_1_name(::std::string* body_1_name) {
  if (body_1_name != NULL) {
    set_has_body_1_name();
  } else {
    clear_has_body_1_name();
  }
  body_1_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_1_name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_1_name)
}

// required uint32 body_1_id = 2;
inline bool JointWrench::has_body_1_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JointWrench::set_has_body_1_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JointWrench::clear_has_body_1_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JointWrench::clear_body_1_id() {
  body_1_id_ = 0u;
  clear_has_body_1_id();
}
inline ::google::protobuf::uint32 JointWrench::body_1_id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_id)
  return body_1_id_;
}
inline void JointWrench::set_body_1_id(::google::protobuf::uint32 value) {
  set_has_body_1_id();
  body_1_id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_1_id)
}

// required string body_2_name = 3;
inline bool JointWrench::has_body_2_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JointWrench::set_has_body_2_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JointWrench::clear_has_body_2_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JointWrench::clear_body_2_name() {
  body_2_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_2_name();
}
inline const ::std::string& JointWrench::body_2_name() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_name)
  return body_2_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointWrench::set_body_2_name(const ::std::string& value) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_2_name)
}
inline void JointWrench::set_body_2_name(const char* value) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Indriya.Core.Msgs.JointWrench.body_2_name)
}
inline void JointWrench::set_body_2_name(const char* value, size_t size) {
  set_has_body_2_name();
  body_2_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Indriya.Core.Msgs.JointWrench.body_2_name)
}
inline ::std::string* JointWrench::mutable_body_2_name() {
  set_has_body_2_name();
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_2_name)
  return body_2_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JointWrench::release_body_2_name() {
  clear_has_body_2_name();
  return body_2_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointWrench::set_allocated_body_2_name(::std::string* body_2_name) {
  if (body_2_name != NULL) {
    set_has_body_2_name();
  } else {
    clear_has_body_2_name();
  }
  body_2_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_2_name);
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_2_name)
}

// required uint32 body_2_id = 4;
inline bool JointWrench::has_body_2_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JointWrench::set_has_body_2_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JointWrench::clear_has_body_2_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JointWrench::clear_body_2_id() {
  body_2_id_ = 0u;
  clear_has_body_2_id();
}
inline ::google::protobuf::uint32 JointWrench::body_2_id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_id)
  return body_2_id_;
}
inline void JointWrench::set_body_2_id(::google::protobuf::uint32 value) {
  set_has_body_2_id();
  body_2_id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.JointWrench.body_2_id)
}

// required .Indriya.Core.Msgs.Wrench body_1_wrench = 5;
inline bool JointWrench::has_body_1_wrench() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JointWrench::set_has_body_1_wrench() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JointWrench::clear_has_body_1_wrench() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JointWrench::clear_body_1_wrench() {
  if (body_1_wrench_ != NULL) body_1_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
  clear_has_body_1_wrench();
}
inline const ::Indriya::Core::Msgs::Wrench& JointWrench::body_1_wrench() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_1_wrench)
  return body_1_wrench_ != NULL ? *body_1_wrench_ : *default_instance_->body_1_wrench_;
}
inline ::Indriya::Core::Msgs::Wrench* JointWrench::mutable_body_1_wrench() {
  set_has_body_1_wrench();
  if (body_1_wrench_ == NULL) {
    body_1_wrench_ = new ::Indriya::Core::Msgs::Wrench;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_1_wrench)
  return body_1_wrench_;
}
inline ::Indriya::Core::Msgs::Wrench* JointWrench::release_body_1_wrench() {
  clear_has_body_1_wrench();
  ::Indriya::Core::Msgs::Wrench* temp = body_1_wrench_;
  body_1_wrench_ = NULL;
  return temp;
}
inline void JointWrench::set_allocated_body_1_wrench(::Indriya::Core::Msgs::Wrench* body_1_wrench) {
  delete body_1_wrench_;
  body_1_wrench_ = body_1_wrench;
  if (body_1_wrench) {
    set_has_body_1_wrench();
  } else {
    clear_has_body_1_wrench();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_1_wrench)
}

// required .Indriya.Core.Msgs.Wrench body_2_wrench = 6;
inline bool JointWrench::has_body_2_wrench() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JointWrench::set_has_body_2_wrench() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JointWrench::clear_has_body_2_wrench() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JointWrench::clear_body_2_wrench() {
  if (body_2_wrench_ != NULL) body_2_wrench_->::Indriya::Core::Msgs::Wrench::Clear();
  clear_has_body_2_wrench();
}
inline const ::Indriya::Core::Msgs::Wrench& JointWrench::body_2_wrench() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.JointWrench.body_2_wrench)
  return body_2_wrench_ != NULL ? *body_2_wrench_ : *default_instance_->body_2_wrench_;
}
inline ::Indriya::Core::Msgs::Wrench* JointWrench::mutable_body_2_wrench() {
  set_has_body_2_wrench();
  if (body_2_wrench_ == NULL) {
    body_2_wrench_ = new ::Indriya::Core::Msgs::Wrench;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.JointWrench.body_2_wrench)
  return body_2_wrench_;
}
inline ::Indriya::Core::Msgs::Wrench* JointWrench::release_body_2_wrench() {
  clear_has_body_2_wrench();
  ::Indriya::Core::Msgs::Wrench* temp = body_2_wrench_;
  body_2_wrench_ = NULL;
  return temp;
}
inline void JointWrench::set_allocated_body_2_wrench(::Indriya::Core::Msgs::Wrench* body_2_wrench) {
  delete body_2_wrench_;
  body_2_wrench_ = body_2_wrench;
  if (body_2_wrench) {
    set_has_body_2_wrench();
  } else {
    clear_has_body_2_wrench();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.JointWrench.body_2_wrench)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<Indriya::Core::Msgs::JointWrench> JointWrenchPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

typedef const boost::shared_ptr<Indriya::Core::Msgs::JointWrench const> ConstJointWrenchPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_joint_5fwrench_2eproto__INCLUDED
