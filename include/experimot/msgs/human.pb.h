// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: human.proto

#ifndef PROTOBUF_human_2eproto__INCLUDED
#define PROTOBUF_human_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "vector3d.pb.h"
#include "quaternion.pb.h"
#include <boost/shared_ptr.hpp>
#include "MsgFactory.h"
// @@protoc_insertion_point(includes)

namespace Indriya {
namespace Core {
namespace Msgs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_human_2eproto();
void protobuf_AssignDesc_human_2eproto();
void protobuf_ShutdownFile_human_2eproto();

class Human;
class Humans;

// ===================================================================

class Human : public ::google::protobuf::Message {
 public:
  Human();
  virtual ~Human();

  Human(const Human& from);

  inline Human& operator=(const Human& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Human& default_instance();

  void Swap(Human* other);

  // implements Message ----------------------------------------------

  inline Human* New() const { return New(NULL); }

  Human* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Human& from);
  void MergeFrom(const Human& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Human* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required bool tracked = 2;
  bool has_tracked() const;
  void clear_tracked();
  static const int kTrackedFieldNumber = 2;
  bool tracked() const;
  void set_tracked(bool value);

  // required .Indriya.Core.Msgs.Vector3d torso_position = 3;
  bool has_torso_position() const;
  void clear_torso_position();
  static const int kTorsoPositionFieldNumber = 3;
  const ::Indriya::Core::Msgs::Vector3d& torso_position() const;
  ::Indriya::Core::Msgs::Vector3d* mutable_torso_position();
  ::Indriya::Core::Msgs::Vector3d* release_torso_position();
  void set_allocated_torso_position(::Indriya::Core::Msgs::Vector3d* torso_position);

  // required .Indriya.Core.Msgs.Vector3d head_position = 4;
  bool has_head_position() const;
  void clear_head_position();
  static const int kHeadPositionFieldNumber = 4;
  const ::Indriya::Core::Msgs::Vector3d& head_position() const;
  ::Indriya::Core::Msgs::Vector3d* mutable_head_position();
  ::Indriya::Core::Msgs::Vector3d* release_head_position();
  void set_allocated_head_position(::Indriya::Core::Msgs::Vector3d* head_position);

  // required .Indriya.Core.Msgs.Quaternion orientation = 5;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 5;
  const ::Indriya::Core::Msgs::Quaternion& orientation() const;
  ::Indriya::Core::Msgs::Quaternion* mutable_orientation();
  ::Indriya::Core::Msgs::Quaternion* release_orientation();
  void set_allocated_orientation(::Indriya::Core::Msgs::Quaternion* orientation);

  // @@protoc_insertion_point(class_scope:Indriya.Core.Msgs.Human)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tracked();
  inline void clear_has_tracked();
  inline void set_has_torso_position();
  inline void clear_has_torso_position();
  inline void set_has_head_position();
  inline void clear_has_head_position();
  inline void set_has_orientation();
  inline void clear_has_orientation();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  bool tracked_;
  ::Indriya::Core::Msgs::Vector3d* torso_position_;
  ::Indriya::Core::Msgs::Vector3d* head_position_;
  ::Indriya::Core::Msgs::Quaternion* orientation_;
  friend void  protobuf_AddDesc_human_2eproto();
  friend void protobuf_AssignDesc_human_2eproto();
  friend void protobuf_ShutdownFile_human_2eproto();

  void InitAsDefaultInstance();
  static Human* default_instance_;
};
// -------------------------------------------------------------------

class Humans : public ::google::protobuf::Message {
 public:
  Humans();
  virtual ~Humans();

  Humans(const Humans& from);

  inline Humans& operator=(const Humans& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Humans& default_instance();

  void Swap(Humans* other);

  // implements Message ----------------------------------------------

  inline Humans* New() const { return New(NULL); }

  Humans* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Humans& from);
  void MergeFrom(const Humans& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Humans* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Indriya.Core.Msgs.Human human = 1;
  int human_size() const;
  void clear_human();
  static const int kHumanFieldNumber = 1;
  const ::Indriya::Core::Msgs::Human& human(int index) const;
  ::Indriya::Core::Msgs::Human* mutable_human(int index);
  ::Indriya::Core::Msgs::Human* add_human();
  const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Human >&
      human() const;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Human >*
      mutable_human();

  // @@protoc_insertion_point(class_scope:Indriya.Core.Msgs.Humans)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Human > human_;
  friend void  protobuf_AddDesc_human_2eproto();
  friend void protobuf_AssignDesc_human_2eproto();
  friend void protobuf_ShutdownFile_human_2eproto();

  void InitAsDefaultInstance();
  static Humans* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Human

// required int32 id = 1;
inline bool Human::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Human::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Human::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Human::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Human::id() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Human.id)
  return id_;
}
inline void Human::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Human.id)
}

// required bool tracked = 2;
inline bool Human::has_tracked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Human::set_has_tracked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Human::clear_has_tracked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Human::clear_tracked() {
  tracked_ = false;
  clear_has_tracked();
}
inline bool Human::tracked() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Human.tracked)
  return tracked_;
}
inline void Human::set_tracked(bool value) {
  set_has_tracked();
  tracked_ = value;
  // @@protoc_insertion_point(field_set:Indriya.Core.Msgs.Human.tracked)
}

// required .Indriya.Core.Msgs.Vector3d torso_position = 3;
inline bool Human::has_torso_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Human::set_has_torso_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Human::clear_has_torso_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Human::clear_torso_position() {
  if (torso_position_ != NULL) torso_position_->::Indriya::Core::Msgs::Vector3d::Clear();
  clear_has_torso_position();
}
inline const ::Indriya::Core::Msgs::Vector3d& Human::torso_position() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Human.torso_position)
  return torso_position_ != NULL ? *torso_position_ : *default_instance_->torso_position_;
}
inline ::Indriya::Core::Msgs::Vector3d* Human::mutable_torso_position() {
  set_has_torso_position();
  if (torso_position_ == NULL) {
    torso_position_ = new ::Indriya::Core::Msgs::Vector3d;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Human.torso_position)
  return torso_position_;
}
inline ::Indriya::Core::Msgs::Vector3d* Human::release_torso_position() {
  clear_has_torso_position();
  ::Indriya::Core::Msgs::Vector3d* temp = torso_position_;
  torso_position_ = NULL;
  return temp;
}
inline void Human::set_allocated_torso_position(::Indriya::Core::Msgs::Vector3d* torso_position) {
  delete torso_position_;
  torso_position_ = torso_position;
  if (torso_position) {
    set_has_torso_position();
  } else {
    clear_has_torso_position();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Human.torso_position)
}

// required .Indriya.Core.Msgs.Vector3d head_position = 4;
inline bool Human::has_head_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Human::set_has_head_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Human::clear_has_head_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Human::clear_head_position() {
  if (head_position_ != NULL) head_position_->::Indriya::Core::Msgs::Vector3d::Clear();
  clear_has_head_position();
}
inline const ::Indriya::Core::Msgs::Vector3d& Human::head_position() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Human.head_position)
  return head_position_ != NULL ? *head_position_ : *default_instance_->head_position_;
}
inline ::Indriya::Core::Msgs::Vector3d* Human::mutable_head_position() {
  set_has_head_position();
  if (head_position_ == NULL) {
    head_position_ = new ::Indriya::Core::Msgs::Vector3d;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Human.head_position)
  return head_position_;
}
inline ::Indriya::Core::Msgs::Vector3d* Human::release_head_position() {
  clear_has_head_position();
  ::Indriya::Core::Msgs::Vector3d* temp = head_position_;
  head_position_ = NULL;
  return temp;
}
inline void Human::set_allocated_head_position(::Indriya::Core::Msgs::Vector3d* head_position) {
  delete head_position_;
  head_position_ = head_position;
  if (head_position) {
    set_has_head_position();
  } else {
    clear_has_head_position();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Human.head_position)
}

// required .Indriya.Core.Msgs.Quaternion orientation = 5;
inline bool Human::has_orientation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Human::set_has_orientation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Human::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Human::clear_orientation() {
  if (orientation_ != NULL) orientation_->::Indriya::Core::Msgs::Quaternion::Clear();
  clear_has_orientation();
}
inline const ::Indriya::Core::Msgs::Quaternion& Human::orientation() const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Human.orientation)
  return orientation_ != NULL ? *orientation_ : *default_instance_->orientation_;
}
inline ::Indriya::Core::Msgs::Quaternion* Human::mutable_orientation() {
  set_has_orientation();
  if (orientation_ == NULL) {
    orientation_ = new ::Indriya::Core::Msgs::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Human.orientation)
  return orientation_;
}
inline ::Indriya::Core::Msgs::Quaternion* Human::release_orientation() {
  clear_has_orientation();
  ::Indriya::Core::Msgs::Quaternion* temp = orientation_;
  orientation_ = NULL;
  return temp;
}
inline void Human::set_allocated_orientation(::Indriya::Core::Msgs::Quaternion* orientation) {
  delete orientation_;
  orientation_ = orientation;
  if (orientation) {
    set_has_orientation();
  } else {
    clear_has_orientation();
  }
  // @@protoc_insertion_point(field_set_allocated:Indriya.Core.Msgs.Human.orientation)
}

// -------------------------------------------------------------------

// Humans

// repeated .Indriya.Core.Msgs.Human human = 1;
inline int Humans::human_size() const {
  return human_.size();
}
inline void Humans::clear_human() {
  human_.Clear();
}
inline const ::Indriya::Core::Msgs::Human& Humans::human(int index) const {
  // @@protoc_insertion_point(field_get:Indriya.Core.Msgs.Humans.human)
  return human_.Get(index);
}
inline ::Indriya::Core::Msgs::Human* Humans::mutable_human(int index) {
  // @@protoc_insertion_point(field_mutable:Indriya.Core.Msgs.Humans.human)
  return human_.Mutable(index);
}
inline ::Indriya::Core::Msgs::Human* Humans::add_human() {
  // @@protoc_insertion_point(field_add:Indriya.Core.Msgs.Humans.human)
  return human_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Human >&
Humans::human() const {
  // @@protoc_insertion_point(field_list:Indriya.Core.Msgs.Humans.human)
  return human_;
}
inline ::google::protobuf::RepeatedPtrField< ::Indriya::Core::Msgs::Human >*
Humans::mutable_human() {
  // @@protoc_insertion_point(field_mutable_list:Indriya.Core.Msgs.Humans.human)
  return &human_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<Indriya::Core::Msgs::Human> HumanPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace Msgs
}  // namespace Core
}  // namespace Indriya

typedef const boost::shared_ptr<Indriya::Core::Msgs::Human const> ConstHumanPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_human_2eproto__INCLUDED
