// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.32989
//    <NameSpace>Scheduler</NameSpace><Collection>ObservableCollection</Collection><codeType>CSharp</codeType><EnableDataBinding>True</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net40</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>False</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Scheduler
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using System.Collections.ObjectModel;


    public partial class experimot_config : System.ComponentModel.INotifyPropertyChanged
    {

        private ObservableCollection<node> nodesField;

        public experimot_config()
        {
            this.nodesField = new ObservableCollection<node>();
        }

        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)]
        public ObservableCollection<node> nodes
        {
            get
            {
                return this.nodesField;
            }
            set
            {
                if ((this.nodesField != null))
                {
                    if ((nodesField.Equals(value) != true))
                    {
                        this.nodesField = value;
                        this.OnPropertyChanged("nodes");
                    }
                }
                else
                {
                    this.nodesField = value;
                    this.OnPropertyChanged("nodes");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class node : System.ComponentModel.INotifyPropertyChanged
    {

        private string nameField;

        private process processField;

        private ObservableCollection<socket> publishersField;

        private ObservableCollection<socket> subscribersField;

        public node()
        {
            this.subscribersField = new ObservableCollection<socket>();
            this.publishersField = new ObservableCollection<socket>();
            this.processField = new process();
        }

        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                if ((this.nameField != null))
                {
                    if ((nameField.Equals(value) != true))
                    {
                        this.nameField = value;
                        this.OnPropertyChanged("name");
                    }
                }
                else
                {
                    this.nameField = value;
                    this.OnPropertyChanged("name");
                }
            }
        }

        public process process
        {
            get
            {
                return this.processField;
            }
            set
            {
                if ((this.processField != null))
                {
                    if ((processField.Equals(value) != true))
                    {
                        this.processField = value;
                        this.OnPropertyChanged("process");
                    }
                }
                else
                {
                    this.processField = value;
                    this.OnPropertyChanged("process");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("publish", IsNullable = false)]
        public ObservableCollection<socket> publishers
        {
            get
            {
                return this.publishersField;
            }
            set
            {
                if ((this.publishersField != null))
                {
                    if ((publishersField.Equals(value) != true))
                    {
                        this.publishersField = value;
                        this.OnPropertyChanged("publishers");
                    }
                }
                else
                {
                    this.publishersField = value;
                    this.OnPropertyChanged("publishers");
                }
            }
        }

        [System.Xml.Serialization.XmlArrayItemAttribute("subscribe", IsNullable = false)]
        public ObservableCollection<socket> subscribers
        {
            get
            {
                return this.subscribersField;
            }
            set
            {
                if ((this.subscribersField != null))
                {
                    if ((subscribersField.Equals(value) != true))
                    {
                        this.subscribersField = value;
                        this.OnPropertyChanged("subscribers");
                    }
                }
                else
                {
                    this.subscribersField = value;
                    this.OnPropertyChanged("subscribers");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class process : System.ComponentModel.INotifyPropertyChanged
    {

        private string typeField;

        private string pathField;

        private string argsField;

        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                if ((this.typeField != null))
                {
                    if ((typeField.Equals(value) != true))
                    {
                        this.typeField = value;
                        this.OnPropertyChanged("type");
                    }
                }
                else
                {
                    this.typeField = value;
                    this.OnPropertyChanged("type");
                }
            }
        }

        public string path
        {
            get
            {
                return this.pathField;
            }
            set
            {
                if ((this.pathField != null))
                {
                    if ((pathField.Equals(value) != true))
                    {
                        this.pathField = value;
                        this.OnPropertyChanged("path");
                    }
                }
                else
                {
                    this.pathField = value;
                    this.OnPropertyChanged("path");
                }
            }
        }

        public string args
        {
            get
            {
                return this.argsField;
            }
            set
            {
                if ((this.argsField != null))
                {
                    if ((argsField.Equals(value) != true))
                    {
                        this.argsField = value;
                        this.OnPropertyChanged("args");
                    }
                }
                else
                {
                    this.argsField = value;
                    this.OnPropertyChanged("args");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class socket : System.ComponentModel.INotifyPropertyChanged
    {

        private string protocolField;

        private string addressField;

        private int portField;

        private string topicField;

        private string messageField;

        private string taskField;

        public string protocol
        {
            get
            {
                return this.protocolField;
            }
            set
            {
                if ((this.protocolField != null))
                {
                    if ((protocolField.Equals(value) != true))
                    {
                        this.protocolField = value;
                        this.OnPropertyChanged("protocol");
                    }
                }
                else
                {
                    this.protocolField = value;
                    this.OnPropertyChanged("protocol");
                }
            }
        }

        public string address
        {
            get
            {
                return this.addressField;
            }
            set
            {
                if ((this.addressField != null))
                {
                    if ((addressField.Equals(value) != true))
                    {
                        this.addressField = value;
                        this.OnPropertyChanged("address");
                    }
                }
                else
                {
                    this.addressField = value;
                    this.OnPropertyChanged("address");
                }
            }
        }

        public int port
        {
            get
            {
                return this.portField;
            }
            set
            {
                if ((portField.Equals(value) != true))
                {
                    this.portField = value;
                    this.OnPropertyChanged("port");
                }
            }
        }

        public string topic
        {
            get
            {
                return this.topicField;
            }
            set
            {
                if ((this.topicField != null))
                {
                    if ((topicField.Equals(value) != true))
                    {
                        this.topicField = value;
                        this.OnPropertyChanged("topic");
                    }
                }
                else
                {
                    this.topicField = value;
                    this.OnPropertyChanged("topic");
                }
            }
        }

        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                if ((this.messageField != null))
                {
                    if ((messageField.Equals(value) != true))
                    {
                        this.messageField = value;
                        this.OnPropertyChanged("message");
                    }
                }
                else
                {
                    this.messageField = value;
                    this.OnPropertyChanged("message");
                }
            }
        }

        public string task
        {
            get
            {
                return this.taskField;
            }
            set
            {
                if ((this.taskField != null))
                {
                    if ((taskField.Equals(value) != true))
                    {
                        this.taskField = value;
                        this.OnPropertyChanged("task");
                    }
                }
                else
                {
                    this.taskField = value;
                    this.OnPropertyChanged("task");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public virtual void OnPropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler handler = this.PropertyChanged;
            if ((handler != null))
            {
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
