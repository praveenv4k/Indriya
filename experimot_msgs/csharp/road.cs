//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/road.proto
// Note: requires additional types generated from: vector3d.proto
// Note: requires additional types generated from: material.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Road")]
  public partial class Road : global::ProtoBuf.IExtensible
  {
    public Road() {}
    
    private string _name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name
    {
      get { return _name; }
      set { _name = value; }
    }
    private double _width;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"width", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public double width
    {
      get { return _width; }
      set { _width = value; }
    }
    private readonly global::System.Collections.Generic.List<experimot.msgs.Vector3d> _point = new global::System.Collections.Generic.List<experimot.msgs.Vector3d>();
    [global::ProtoBuf.ProtoMember(3, Name=@"point", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<experimot.msgs.Vector3d> point
    {
      get { return _point; }
    }
  
    private experimot.msgs.Material _material = null;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"material", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Material material
    {
      get { return _material; }
      set { _material = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}