//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto/visual.proto
// Note: requires additional types generated from: pose.proto
// Note: requires additional types generated from: geometry.proto
// Note: requires additional types generated from: material.proto
// Note: requires additional types generated from: plugin.proto
// Note: requires additional types generated from: vector3d.proto
namespace experimot.msgs
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Visual")]
  public partial class Visual : global::ProtoBuf.IExtensible
  {
    public Visual() {}
    
    private string _name;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string name
    {
      get { return _name; }
      set { _name = value; }
    }
    private uint _id = default(uint);
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(uint))]
    public uint id
    {
      get { return _id; }
      set { _id = value; }
    }
    private string _parent_name;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"parent_name", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string parent_name
    {
      get { return _parent_name; }
      set { _parent_name = value; }
    }
    private uint _parent_id = default(uint);
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"parent_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(uint))]
    public uint parent_id
    {
      get { return _parent_id; }
      set { _parent_id = value; }
    }
    private bool _cast_shadows = default(bool);
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"cast_shadows", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool cast_shadows
    {
      get { return _cast_shadows; }
      set { _cast_shadows = value; }
    }
    private double _transparency = default(double);
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"transparency", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(double))]
    public double transparency
    {
      get { return _transparency; }
      set { _transparency = value; }
    }
    private double _laser_retro = default(double);
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"laser_retro", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(double))]
    public double laser_retro
    {
      get { return _laser_retro; }
      set { _laser_retro = value; }
    }
    private experimot.msgs.Pose _pose = null;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"pose", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Pose pose
    {
      get { return _pose; }
      set { _pose = value; }
    }
    private experimot.msgs.Geometry _geometry = null;
    [global::ProtoBuf.ProtoMember(9, IsRequired = false, Name=@"geometry", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Geometry geometry
    {
      get { return _geometry; }
      set { _geometry = value; }
    }
    private experimot.msgs.Material _material = null;
    [global::ProtoBuf.ProtoMember(10, IsRequired = false, Name=@"material", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Material material
    {
      get { return _material; }
      set { _material = value; }
    }
    private bool _visible = default(bool);
    [global::ProtoBuf.ProtoMember(11, IsRequired = false, Name=@"visible", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool visible
    {
      get { return _visible; }
      set { _visible = value; }
    }
    private bool _delete_me = default(bool);
    [global::ProtoBuf.ProtoMember(12, IsRequired = false, Name=@"delete_me", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool delete_me
    {
      get { return _delete_me; }
      set { _delete_me = value; }
    }
    private bool _is_static = default(bool);
    [global::ProtoBuf.ProtoMember(13, IsRequired = false, Name=@"is_static", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool is_static
    {
      get { return _is_static; }
      set { _is_static = value; }
    }
    private experimot.msgs.Plugin _plugin = null;
    [global::ProtoBuf.ProtoMember(14, IsRequired = false, Name=@"plugin", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Plugin plugin
    {
      get { return _plugin; }
      set { _plugin = value; }
    }
    private experimot.msgs.Vector3d _scale = null;
    [global::ProtoBuf.ProtoMember(15, IsRequired = false, Name=@"scale", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public experimot.msgs.Vector3d scale
    {
      get { return _scale; }
      set { _scale = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}